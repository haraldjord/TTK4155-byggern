
PingPongLab.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000016e  00800100  00000b9c  00000c30  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b9c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  0080026e  0080026e  00000d9e  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000d9e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000dfc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00000e38  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b08  00000000  00000000  00000f88  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009d5  00000000  00000000  00002a90  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c75  00000000  00000000  00003465  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000404  00000000  00000000  000040dc  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000729  00000000  00000000  000044e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d37  00000000  00000000  00004c09  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00005940  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 fa 01 	jmp	0x3f4	; 0x3f4 <__vector_3>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	12 e0       	ldi	r17, 0x02	; 2
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec e9       	ldi	r30, 0x9C	; 156
  84:	fb e0       	ldi	r31, 0x0B	; 11
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ae 36       	cpi	r26, 0x6E	; 110
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	22 e0       	ldi	r18, 0x02	; 2
  94:	ae e6       	ldi	r26, 0x6E	; 110
  96:	b2 e0       	ldi	r27, 0x02	; 2
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a5 37       	cpi	r26, 0x75	; 117
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 2d 02 	call	0x45a	; 0x45a <main>
  a6:	0c 94 cc 05 	jmp	0xb98	; 0xb98 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <USART_Transmit>:
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
}
  ae:	5d 9b       	sbis	0x0b, 5	; 11
  b0:	fe cf       	rjmp	.-4      	; 0xae <USART_Transmit>
  b2:	8c b9       	out	0x0c, r24	; 12
  b4:	08 95       	ret

000000b6 <USART_Receive>:
  b6:	5f 9b       	sbis	0x0b, 7	; 11
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <USART_Receive>
  ba:	8c b1       	in	r24, 0x0c	; 12
  bc:	08 95       	ret

000000be <OLED_send_command>:
  be:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xd8b>
  c2:	08 95       	ret

000000c4 <OLED_goto_line>:
  c4:	88 30       	cpi	r24, 0x08	; 8
  c6:	18 f4       	brcc	.+6      	; 0xce <OLED_goto_line+0xa>
  c8:	80 55       	subi	r24, 0x50	; 80
  ca:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
  ce:	08 95       	ret

000000d0 <OLED_goto_column>:
  d0:	cf 93       	push	r28
  d2:	88 23       	and	r24, r24
  d4:	54 f0       	brlt	.+20     	; 0xea <OLED_goto_column+0x1a>
  d6:	c8 2f       	mov	r28, r24
  d8:	c2 95       	swap	r28
  da:	cf 70       	andi	r28, 0x0F	; 15
  dc:	8f 70       	andi	r24, 0x0F	; 15
  de:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
  e2:	80 e1       	ldi	r24, 0x10	; 16
  e4:	8c 0f       	add	r24, r28
  e6:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
  ea:	cf 91       	pop	r28
  ec:	08 95       	ret

000000ee <OLED_home>:
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	0e 94 62 00 	call	0xc4	; 0xc4 <OLED_goto_line>
  f4:	80 e0       	ldi	r24, 0x00	; 0
  f6:	0e 94 68 00 	call	0xd0	; 0xd0 <OLED_goto_column>
  fa:	08 95       	ret

000000fc <OLED_send_data>:
  fc:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xf8b>
 100:	08 95       	ret

00000102 <OLED_clear_line>:
 102:	cf 93       	push	r28
 104:	df 93       	push	r29
 106:	0e 94 62 00 	call	0xc4	; 0xc4 <OLED_goto_line>
 10a:	c0 e0       	ldi	r28, 0x00	; 0
 10c:	d0 e0       	ldi	r29, 0x00	; 0
 10e:	04 c0       	rjmp	.+8      	; 0x118 <OLED_clear_line+0x16>
 110:	80 e0       	ldi	r24, 0x00	; 0
 112:	0e 94 7e 00 	call	0xfc	; 0xfc <OLED_send_data>
 116:	21 96       	adiw	r28, 0x01	; 1
 118:	c0 38       	cpi	r28, 0x80	; 128
 11a:	d1 05       	cpc	r29, r1
 11c:	cc f3       	brlt	.-14     	; 0x110 <OLED_clear_line+0xe>
 11e:	df 91       	pop	r29
 120:	cf 91       	pop	r28
 122:	08 95       	ret

00000124 <OLED_reset>:
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	c0 e0       	ldi	r28, 0x00	; 0
 12a:	d0 e0       	ldi	r29, 0x00	; 0
 12c:	04 c0       	rjmp	.+8      	; 0x136 <OLED_reset+0x12>
 12e:	8c 2f       	mov	r24, r28
 130:	0e 94 81 00 	call	0x102	; 0x102 <OLED_clear_line>
 134:	21 96       	adiw	r28, 0x01	; 1
 136:	c8 30       	cpi	r28, 0x08	; 8
 138:	d1 05       	cpc	r29, r1
 13a:	cc f3       	brlt	.-14     	; 0x12e <OLED_reset+0xa>
 13c:	0e 94 77 00 	call	0xee	; 0xee <OLED_home>
 140:	df 91       	pop	r29
 142:	cf 91       	pop	r28
 144:	08 95       	ret

00000146 <OLED_Init>:
 146:	8e ea       	ldi	r24, 0xAE	; 174
 148:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 14c:	81 ea       	ldi	r24, 0xA1	; 161
 14e:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 152:	8a ed       	ldi	r24, 0xDA	; 218
 154:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 158:	82 e1       	ldi	r24, 0x12	; 18
 15a:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 15e:	88 ec       	ldi	r24, 0xC8	; 200
 160:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 164:	88 ea       	ldi	r24, 0xA8	; 168
 166:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 16a:	8f e3       	ldi	r24, 0x3F	; 63
 16c:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 170:	85 ed       	ldi	r24, 0xD5	; 213
 172:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 176:	80 e8       	ldi	r24, 0x80	; 128
 178:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 17c:	81 e8       	ldi	r24, 0x81	; 129
 17e:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 182:	80 e5       	ldi	r24, 0x50	; 80
 184:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 188:	89 ed       	ldi	r24, 0xD9	; 217
 18a:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 18e:	81 e2       	ldi	r24, 0x21	; 33
 190:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 194:	80 e2       	ldi	r24, 0x20	; 32
 196:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 19a:	82 e0       	ldi	r24, 0x02	; 2
 19c:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 1a0:	8b ed       	ldi	r24, 0xDB	; 219
 1a2:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 1a6:	80 e3       	ldi	r24, 0x30	; 48
 1a8:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 1ac:	8d ea       	ldi	r24, 0xAD	; 173
 1ae:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 1b8:	84 ea       	ldi	r24, 0xA4	; 164
 1ba:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 1be:	86 ea       	ldi	r24, 0xA6	; 166
 1c0:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 1c4:	8f ea       	ldi	r24, 0xAF	; 175
 1c6:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 1ca:	08 95       	ret

000001cc <SPI_Init>:
 1cc:	87 b3       	in	r24, 0x17	; 23
 1ce:	80 6b       	ori	r24, 0xB0	; 176
 1d0:	87 bb       	out	0x17, r24	; 23
 1d2:	87 b3       	in	r24, 0x17	; 23
 1d4:	8f 7b       	andi	r24, 0xBF	; 191
 1d6:	87 bb       	out	0x17, r24	; 23
 1d8:	8d b1       	in	r24, 0x0d	; 13
 1da:	81 65       	ori	r24, 0x51	; 81
 1dc:	8d b9       	out	0x0d, r24	; 13
 1de:	08 95       	ret

000001e0 <SPI_write>:
 1e0:	8f b9       	out	0x0f, r24	; 15
 1e2:	77 9b       	sbis	0x0e, 7	; 14
 1e4:	fe cf       	rjmp	.-4      	; 0x1e2 <SPI_write+0x2>
 1e6:	08 95       	ret

000001e8 <SPI_read>:
 1e8:	8f ef       	ldi	r24, 0xFF	; 255
 1ea:	8f b9       	out	0x0f, r24	; 15
 1ec:	77 9b       	sbis	0x0e, 7	; 14
 1ee:	fe cf       	rjmp	.-4      	; 0x1ec <SPI_read+0x4>
 1f0:	8f b1       	in	r24, 0x0f	; 15
 1f2:	08 95       	ret

000001f4 <MCP_active>:
 1f4:	88 b3       	in	r24, 0x18	; 24
 1f6:	8f 7e       	andi	r24, 0xEF	; 239
 1f8:	88 bb       	out	0x18, r24	; 24
 1fa:	08 95       	ret

000001fc <MCP_deactive>:
 1fc:	88 b3       	in	r24, 0x18	; 24
 1fe:	80 61       	ori	r24, 0x10	; 16
 200:	88 bb       	out	0x18, r24	; 24
 202:	08 95       	ret

00000204 <MCP_read>:
 204:	cf 93       	push	r28
 206:	c8 2f       	mov	r28, r24
 208:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <MCP_active>
 20c:	83 e0       	ldi	r24, 0x03	; 3
 20e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 212:	8c 2f       	mov	r24, r28
 214:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 218:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <SPI_read>
 21c:	c8 2f       	mov	r28, r24
 21e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <MCP_deactive>
 222:	8c 2f       	mov	r24, r28
 224:	cf 91       	pop	r28
 226:	08 95       	ret

00000228 <MCP_write>:
 228:	cf 93       	push	r28
 22a:	df 93       	push	r29
 22c:	d8 2f       	mov	r29, r24
 22e:	c6 2f       	mov	r28, r22
 230:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <MCP_active>
 234:	82 e0       	ldi	r24, 0x02	; 2
 236:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 23a:	8d 2f       	mov	r24, r29
 23c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 240:	8c 2f       	mov	r24, r28
 242:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 246:	0e 94 fe 00 	call	0x1fc	; 0x1fc <MCP_deactive>
 24a:	df 91       	pop	r29
 24c:	cf 91       	pop	r28
 24e:	08 95       	ret

00000250 <MCP_bitmod>:
 250:	1f 93       	push	r17
 252:	cf 93       	push	r28
 254:	df 93       	push	r29
 256:	18 2f       	mov	r17, r24
 258:	d6 2f       	mov	r29, r22
 25a:	c4 2f       	mov	r28, r20
 25c:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <MCP_active>
 260:	85 e0       	ldi	r24, 0x05	; 5
 262:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 266:	81 2f       	mov	r24, r17
 268:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 26c:	8d 2f       	mov	r24, r29
 26e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 272:	8c 2f       	mov	r24, r28
 274:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 278:	0e 94 fe 00 	call	0x1fc	; 0x1fc <MCP_deactive>
 27c:	df 91       	pop	r29
 27e:	cf 91       	pop	r28
 280:	1f 91       	pop	r17
 282:	08 95       	ret

00000284 <MCP_reset>:
 284:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <MCP_active>
 288:	80 ec       	ldi	r24, 0xC0	; 192
 28a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 28e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <MCP_deactive>
 292:	08 95       	ret

00000294 <CAN_Init>:
 294:	0e 94 42 01 	call	0x284	; 0x284 <MCP_reset>
 298:	60 e4       	ldi	r22, 0x40	; 64
 29a:	8f e0       	ldi	r24, 0x0F	; 15
 29c:	0e 94 14 01 	call	0x228	; 0x228 <MCP_write>
 2a0:	41 e0       	ldi	r20, 0x01	; 1
 2a2:	61 e0       	ldi	r22, 0x01	; 1
 2a4:	8b e2       	ldi	r24, 0x2B	; 43
 2a6:	0e 94 28 01 	call	0x250	; 0x250 <MCP_bitmod>
 2aa:	4f ef       	ldi	r20, 0xFF	; 255
 2ac:	60 e6       	ldi	r22, 0x60	; 96
 2ae:	80 e6       	ldi	r24, 0x60	; 96
 2b0:	0e 94 28 01 	call	0x250	; 0x250 <MCP_bitmod>
 2b4:	08 95       	ret

000002b6 <CAN_send>:
 2b6:	ef 92       	push	r14
 2b8:	ff 92       	push	r15
 2ba:	0f 93       	push	r16
 2bc:	1f 93       	push	r17
 2be:	cf 93       	push	r28
 2c0:	df 93       	push	r29
 2c2:	cd b7       	in	r28, 0x3d	; 61
 2c4:	de b7       	in	r29, 0x3e	; 62
 2c6:	2c 97       	sbiw	r28, 0x0c	; 12
 2c8:	0f b6       	in	r0, 0x3f	; 63
 2ca:	f8 94       	cli
 2cc:	de bf       	out	0x3e, r29	; 62
 2ce:	0f be       	out	0x3f, r0	; 63
 2d0:	cd bf       	out	0x3d, r28	; 61
 2d2:	e9 82       	std	Y+1, r14	; 0x01
 2d4:	fa 82       	std	Y+2, r15	; 0x02
 2d6:	0b 83       	std	Y+3, r16	; 0x03
 2d8:	1c 83       	std	Y+4, r17	; 0x04
 2da:	2d 83       	std	Y+5, r18	; 0x05
 2dc:	3e 83       	std	Y+6, r19	; 0x06
 2de:	4f 83       	std	Y+7, r20	; 0x07
 2e0:	58 87       	std	Y+8, r21	; 0x08
 2e2:	69 87       	std	Y+9, r22	; 0x09
 2e4:	7a 87       	std	Y+10, r23	; 0x0a
 2e6:	8b 87       	std	Y+11, r24	; 0x0b
 2e8:	9c 87       	std	Y+12, r25	; 0x0c
 2ea:	09 81       	ldd	r16, Y+1	; 0x01
 2ec:	1a 81       	ldd	r17, Y+2	; 0x02
 2ee:	b8 01       	movw	r22, r16
 2f0:	76 95       	lsr	r23
 2f2:	67 95       	ror	r22
 2f4:	76 95       	lsr	r23
 2f6:	67 95       	ror	r22
 2f8:	76 95       	lsr	r23
 2fa:	67 95       	ror	r22
 2fc:	81 e3       	ldi	r24, 0x31	; 49
 2fe:	0e 94 14 01 	call	0x228	; 0x228 <MCP_write>
 302:	60 2f       	mov	r22, r16
 304:	62 95       	swap	r22
 306:	66 0f       	add	r22, r22
 308:	60 7e       	andi	r22, 0xE0	; 224
 30a:	82 e3       	ldi	r24, 0x32	; 50
 30c:	0e 94 14 01 	call	0x228	; 0x228 <MCP_write>
 310:	fc 84       	ldd	r15, Y+12	; 0x0c
 312:	4f 2d       	mov	r20, r15
 314:	6f e0       	ldi	r22, 0x0F	; 15
 316:	85 e3       	ldi	r24, 0x35	; 53
 318:	0e 94 28 01 	call	0x250	; 0x250 <MCP_bitmod>
 31c:	00 e0       	ldi	r16, 0x00	; 0
 31e:	10 e0       	ldi	r17, 0x00	; 0
 320:	0d c0       	rjmp	.+26     	; 0x33c <CAN_send+0x86>
 322:	e3 e0       	ldi	r30, 0x03	; 3
 324:	f0 e0       	ldi	r31, 0x00	; 0
 326:	ec 0f       	add	r30, r28
 328:	fd 1f       	adc	r31, r29
 32a:	e0 0f       	add	r30, r16
 32c:	f1 1f       	adc	r31, r17
 32e:	60 81       	ld	r22, Z
 330:	86 e3       	ldi	r24, 0x36	; 54
 332:	80 0f       	add	r24, r16
 334:	0e 94 14 01 	call	0x228	; 0x228 <MCP_write>
 338:	0f 5f       	subi	r16, 0xFF	; 255
 33a:	1f 4f       	sbci	r17, 0xFF	; 255
 33c:	8f 2d       	mov	r24, r15
 33e:	90 e0       	ldi	r25, 0x00	; 0
 340:	08 17       	cp	r16, r24
 342:	19 07       	cpc	r17, r25
 344:	74 f3       	brlt	.-36     	; 0x322 <CAN_send+0x6c>
 346:	4f ef       	ldi	r20, 0xFF	; 255
 348:	68 e0       	ldi	r22, 0x08	; 8
 34a:	80 e3       	ldi	r24, 0x30	; 48
 34c:	0e 94 28 01 	call	0x250	; 0x250 <MCP_bitmod>
 350:	2c 96       	adiw	r28, 0x0c	; 12
 352:	0f b6       	in	r0, 0x3f	; 63
 354:	f8 94       	cli
 356:	de bf       	out	0x3e, r29	; 62
 358:	0f be       	out	0x3f, r0	; 63
 35a:	cd bf       	out	0x3d, r28	; 61
 35c:	df 91       	pop	r29
 35e:	cf 91       	pop	r28
 360:	1f 91       	pop	r17
 362:	0f 91       	pop	r16
 364:	ff 90       	pop	r15
 366:	ef 90       	pop	r14
 368:	08 95       	ret

0000036a <CAN_receive>:
 36a:	ef 92       	push	r14
 36c:	ff 92       	push	r15
 36e:	1f 93       	push	r17
 370:	cf 93       	push	r28
 372:	df 93       	push	r29
 374:	7c 01       	movw	r14, r24
 376:	81 e6       	ldi	r24, 0x61	; 97
 378:	0e 94 02 01 	call	0x204	; 0x204 <MCP_read>
 37c:	c8 2f       	mov	r28, r24
 37e:	82 e6       	ldi	r24, 0x62	; 98
 380:	0e 94 02 01 	call	0x204	; 0x204 <MCP_read>
 384:	2c 2f       	mov	r18, r28
 386:	30 e0       	ldi	r19, 0x00	; 0
 388:	32 2f       	mov	r19, r18
 38a:	22 27       	eor	r18, r18
 38c:	28 2b       	or	r18, r24
 38e:	35 95       	asr	r19
 390:	27 95       	ror	r18
 392:	35 95       	asr	r19
 394:	27 95       	ror	r18
 396:	35 95       	asr	r19
 398:	27 95       	ror	r18
 39a:	35 95       	asr	r19
 39c:	27 95       	ror	r18
 39e:	35 95       	asr	r19
 3a0:	27 95       	ror	r18
 3a2:	f7 01       	movw	r30, r14
 3a4:	31 83       	std	Z+1, r19	; 0x01
 3a6:	20 83       	st	Z, r18
 3a8:	85 e6       	ldi	r24, 0x65	; 101
 3aa:	0e 94 02 01 	call	0x204	; 0x204 <MCP_read>
 3ae:	18 2f       	mov	r17, r24
 3b0:	1f 70       	andi	r17, 0x0F	; 15
 3b2:	19 30       	cpi	r17, 0x09	; 9
 3b4:	08 f0       	brcs	.+2      	; 0x3b8 <CAN_receive+0x4e>
 3b6:	18 e0       	ldi	r17, 0x08	; 8
 3b8:	f7 01       	movw	r30, r14
 3ba:	13 87       	std	Z+11, r17	; 0x0b
 3bc:	c0 e0       	ldi	r28, 0x00	; 0
 3be:	d0 e0       	ldi	r29, 0x00	; 0
 3c0:	09 c0       	rjmp	.+18     	; 0x3d4 <CAN_receive+0x6a>
 3c2:	8c 2f       	mov	r24, r28
 3c4:	8a 59       	subi	r24, 0x9A	; 154
 3c6:	0e 94 02 01 	call	0x204	; 0x204 <MCP_read>
 3ca:	f7 01       	movw	r30, r14
 3cc:	ec 0f       	add	r30, r28
 3ce:	fd 1f       	adc	r31, r29
 3d0:	82 83       	std	Z+2, r24	; 0x02
 3d2:	21 96       	adiw	r28, 0x01	; 1
 3d4:	81 2f       	mov	r24, r17
 3d6:	90 e0       	ldi	r25, 0x00	; 0
 3d8:	c8 17       	cp	r28, r24
 3da:	d9 07       	cpc	r29, r25
 3dc:	94 f3       	brlt	.-28     	; 0x3c2 <CAN_receive+0x58>
 3de:	60 e0       	ldi	r22, 0x00	; 0
 3e0:	8c e2       	ldi	r24, 0x2C	; 44
 3e2:	0e 94 14 01 	call	0x228	; 0x228 <MCP_write>
 3e6:	c7 01       	movw	r24, r14
 3e8:	df 91       	pop	r29
 3ea:	cf 91       	pop	r28
 3ec:	1f 91       	pop	r17
 3ee:	ff 90       	pop	r15
 3f0:	ef 90       	pop	r14
 3f2:	08 95       	ret

000003f4 <__vector_3>:
 3f4:	1f 92       	push	r1
 3f6:	0f 92       	push	r0
 3f8:	0f b6       	in	r0, 0x3f	; 63
 3fa:	0f 92       	push	r0
 3fc:	11 24       	eor	r1, r1
 3fe:	8f 93       	push	r24
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <__data_end>
 406:	8f 91       	pop	r24
 408:	0f 90       	pop	r0
 40a:	0f be       	out	0x3f, r0	; 63
 40c:	0f 90       	pop	r0
 40e:	1f 90       	pop	r1
 410:	18 95       	reti

00000412 <USART_Init>:
 412:	90 bd       	out	0x20, r25	; 32
 414:	89 b9       	out	0x09, r24	; 9
 416:	88 e1       	ldi	r24, 0x18	; 24
 418:	8a b9       	out	0x0a, r24	; 10
 41a:	8e ea       	ldi	r24, 0xAE	; 174
 41c:	80 bd       	out	0x20, r24	; 32
 41e:	08 95       	ret

00000420 <SRAM_Init>:

void SRAM_Init(void) {
	// Enable external memory interface
	MCUCR |= (1 << SRE);
 420:	85 b7       	in	r24, 0x35	; 53
 422:	80 68       	ori	r24, 0x80	; 128
 424:	85 bf       	out	0x35, r24	; 53
	// Mask PC7-PC4
	SFIOR |= (1 << XMM2);
 426:	80 b7       	in	r24, 0x30	; 48
 428:	80 62       	ori	r24, 0x20	; 32
 42a:	80 bf       	out	0x30, r24	; 48
 42c:	08 95       	ret

0000042e <CLK_Init>:
}

void CLK_Init(int TOP) {
 42e:	9c 01       	movw	r18, r24
	// Set PD4 as output
	DDRD |= (1 << DDD4);
 430:	91 b3       	in	r25, 0x11	; 17
 432:	90 61       	ori	r25, 0x10	; 16
 434:	91 bb       	out	0x11, r25	; 17
	
	// Compare output mode: Toggle compare match
	TCCR3A |= (1 << COM3A0); 
 436:	eb e8       	ldi	r30, 0x8B	; 139
 438:	f0 e0       	ldi	r31, 0x00	; 0
 43a:	90 81       	ld	r25, Z
 43c:	90 64       	ori	r25, 0x40	; 64
 43e:	90 83       	st	Z, r25
	
	// Mode 4, CTC
	TCCR3B |= (1 << WGM32);
 440:	ea e8       	ldi	r30, 0x8A	; 138
 442:	f0 e0       	ldi	r31, 0x00	; 0
 444:	90 81       	ld	r25, Z
 446:	98 60       	ori	r25, 0x08	; 8
 448:	90 83       	st	Z, r25
	
	// Set counter TOP value
	OCR3A = TOP;
 44a:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
 44e:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
	
	// Prescaler 1
	TCCR3B |= (1 << CS30);
 452:	80 81       	ld	r24, Z
 454:	81 60       	ori	r24, 0x01	; 1
 456:	80 83       	st	Z, r24
 458:	08 95       	ret

0000045a <main>:
	new_message = 1;
}


int main(void)
{
 45a:	cf 93       	push	r28
 45c:	df 93       	push	r29
 45e:	cd b7       	in	r28, 0x3d	; 61
 460:	de b7       	in	r29, 0x3e	; 62
 462:	a4 97       	sbiw	r28, 0x24	; 36
 464:	0f b6       	in	r0, 0x3f	; 63
 466:	f8 94       	cli
 468:	de bf       	out	0x3e, r29	; 62
 46a:	0f be       	out	0x3f, r0	; 63
 46c:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0xFF;
 46e:	8f ef       	ldi	r24, 0xFF	; 255
 470:	8a bb       	out	0x1a, r24	; 26
	DDRE |= (0x02);
 472:	86 b1       	in	r24, 0x06	; 6
 474:	82 60       	ori	r24, 0x02	; 2
 476:	86 b9       	out	0x06, r24	; 6
	
	// Right and left button inputs
	DDRD &= !( (1 << PD2) | (1 << PD3) );
 478:	81 b3       	in	r24, 0x11	; 17
 47a:	11 ba       	out	0x11, r1	; 17
	// Joystick button
	DDRE &= !(1 << PE2);
 47c:	86 b1       	in	r24, 0x06	; 6
 47e:	16 b8       	out	0x06, r1	; 6
	
	// Set interrupt pin as input
	DDRE &= ~(1 << PE0);
 480:	86 b1       	in	r24, 0x06	; 6
 482:	8e 7f       	andi	r24, 0xFE	; 254
 484:	86 b9       	out	0x06, r24	; 6
	// Disable interrupt, clear Interrupt Enable in GICR
	GICR &= 0b00000111;
 486:	8b b7       	in	r24, 0x3b	; 59
 488:	87 70       	andi	r24, 0x07	; 7
 48a:	8b bf       	out	0x3b, r24	; 59
	// Set ISC2 bit in EMCUCR
	EMCUCR &= ~(1 << ISC2); // 1 for rising edge, 0 for falling edge
 48c:	86 b7       	in	r24, 0x36	; 54
 48e:	8e 7f       	andi	r24, 0xFE	; 254
 490:	86 bf       	out	0x36, r24	; 54
	// Clear INT2 flag, write 1 to INTF2 in GIFR
	GIFR |= (1 << INTF2);
 492:	8a b7       	in	r24, 0x3a	; 58
 494:	80 62       	ori	r24, 0x20	; 32
 496:	8a bf       	out	0x3a, r24	; 58
	// Enable interrupt, set Interrupt Enable in GICR
	GICR |= (1 << INT2);
 498:	8b b7       	in	r24, 0x3b	; 59
 49a:	80 62       	ori	r24, 0x20	; 32
 49c:	8b bf       	out	0x3b, r24	; 59
	// Enable I-bit in SREG to enable interrupts
	// SREG |= 0x80;
	sei();
 49e:	78 94       	sei
	
	USART_Init(MYUBRR);
 4a0:	8f e1       	ldi	r24, 0x1F	; 31
 4a2:	90 e0       	ldi	r25, 0x00	; 0
 4a4:	0e 94 09 02 	call	0x412	; 0x412 <USART_Init>
	CLK_Init(0);
 4a8:	80 e0       	ldi	r24, 0x00	; 0
 4aa:	90 e0       	ldi	r25, 0x00	; 0
 4ac:	0e 94 17 02 	call	0x42e	; 0x42e <CLK_Init>
	SRAM_Init();
 4b0:	0e 94 10 02 	call	0x420	; 0x420 <SRAM_Init>
	OLED_Init();
 4b4:	0e 94 a3 00 	call	0x146	; 0x146 <OLED_Init>
	SPI_Init();
 4b8:	0e 94 e6 00 	call	0x1cc	; 0x1cc <SPI_Init>
	CAN_Init();
 4bc:	0e 94 4a 01 	call	0x294	; 0x294 <CAN_Init>
	
	// Setup for printf
	stdout = &uart_stdio;
 4c0:	ef e6       	ldi	r30, 0x6F	; 111
 4c2:	f2 e0       	ldi	r31, 0x02	; 2
 4c4:	80 e0       	ldi	r24, 0x00	; 0
 4c6:	91 e0       	ldi	r25, 0x01	; 1
 4c8:	93 83       	std	Z+3, r25	; 0x03
 4ca:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_stdio;
 4cc:	91 83       	std	Z+1, r25	; 0x01
 4ce:	80 83       	st	Z, r24
	char min_pos = 0;
	char max_pos = 0;
	char screen = 0;
	char prev_screen = 1;
	
	OLED_reset();	
 4d0:	0e 94 92 00 	call	0x124	; 0x124 <OLED_reset>
	
	message msg, msg_received;
	msg.ID = 42;
 4d4:	8a e2       	ldi	r24, 0x2A	; 42
 4d6:	90 e0       	ldi	r25, 0x00	; 0
 4d8:	9a 83       	std	Y+2, r25	; 0x02
 4da:	89 83       	std	Y+1, r24	; 0x01
	msg.length = 8;
 4dc:	88 e0       	ldi	r24, 0x08	; 8
 4de:	8c 87       	std	Y+12, r24	; 0x0c
	strcpy(msg.data, "TestTest");
 4e0:	89 e0       	ldi	r24, 0x09	; 9
 4e2:	e4 e6       	ldi	r30, 0x64	; 100
 4e4:	f2 e0       	ldi	r31, 0x02	; 2
 4e6:	de 01       	movw	r26, r28
 4e8:	13 96       	adiw	r26, 0x03	; 3
 4ea:	01 90       	ld	r0, Z+
 4ec:	0d 92       	st	X+, r0
 4ee:	8a 95       	dec	r24
 4f0:	e1 f7       	brne	.-8      	; 0x4ea <main+0x90>
	
	
	
	while (1) {
		
		received_char = USART_Receive();
 4f2:	0e 94 5b 00 	call	0xb6	; 0xb6 <USART_Receive>
 4f6:	d8 2e       	mov	r13, r24
		
		if (received_char == 's') {
 4f8:	83 e7       	ldi	r24, 0x73	; 115
 4fa:	d8 12       	cpse	r13, r24
 4fc:	12 c0       	rjmp	.+36     	; 0x522 <__stack+0x23>
			CAN_send(msg);
 4fe:	e9 80       	ldd	r14, Y+1	; 0x01
 500:	fa 80       	ldd	r15, Y+2	; 0x02
 502:	0b 81       	ldd	r16, Y+3	; 0x03
 504:	1c 81       	ldd	r17, Y+4	; 0x04
 506:	2d 81       	ldd	r18, Y+5	; 0x05
 508:	3e 81       	ldd	r19, Y+6	; 0x06
 50a:	4f 81       	ldd	r20, Y+7	; 0x07
 50c:	58 85       	ldd	r21, Y+8	; 0x08
 50e:	69 85       	ldd	r22, Y+9	; 0x09
 510:	7a 85       	ldd	r23, Y+10	; 0x0a
 512:	8b 85       	ldd	r24, Y+11	; 0x0b
 514:	9c 85       	ldd	r25, Y+12	; 0x0c
 516:	0e 94 5b 01 	call	0x2b6	; 0x2b6 <CAN_send>
			printf("Message sent\n");
 51a:	86 e3       	ldi	r24, 0x36	; 54
 51c:	92 e0       	ldi	r25, 0x02	; 2
 51e:	0e 94 d4 02 	call	0x5a8	; 0x5a8 <puts>
		}
		
		if (received_char == 'r' || new_message) {
 522:	92 e7       	ldi	r25, 0x72	; 114
 524:	d9 16       	cp	r13, r25
 526:	21 f0       	breq	.+8      	; 0x530 <__stack+0x31>
 528:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <__data_end>
 52c:	88 23       	and	r24, r24
 52e:	09 f3       	breq	.-62     	; 0x4f2 <main+0x98>
			msg_received = CAN_receive();
 530:	ce 01       	movw	r24, r28
 532:	49 96       	adiw	r24, 0x19	; 25
 534:	0e 94 b5 01 	call	0x36a	; 0x36a <CAN_receive>
 538:	8c e0       	ldi	r24, 0x0C	; 12
 53a:	fe 01       	movw	r30, r28
 53c:	79 96       	adiw	r30, 0x19	; 25
 53e:	de 01       	movw	r26, r28
 540:	1d 96       	adiw	r26, 0x0d	; 13
 542:	01 90       	ld	r0, Z+
 544:	0d 92       	st	X+, r0
 546:	8a 95       	dec	r24
 548:	e1 f7       	brne	.-8      	; 0x542 <__stack+0x43>
			printf("ID: %d, length: %d, message: %s\n", msg_received.ID, msg_received.length, msg_received.data);
 54a:	28 8d       	ldd	r18, Y+24	; 0x18
 54c:	ce 01       	movw	r24, r28
 54e:	0f 96       	adiw	r24, 0x0f	; 15
 550:	9f 93       	push	r25
 552:	8f 93       	push	r24
 554:	1f 92       	push	r1
 556:	2f 93       	push	r18
 558:	8e 85       	ldd	r24, Y+14	; 0x0e
 55a:	8f 93       	push	r24
 55c:	8d 85       	ldd	r24, Y+13	; 0x0d
 55e:	8f 93       	push	r24
 560:	83 e4       	ldi	r24, 0x43	; 67
 562:	92 e0       	ldi	r25, 0x02	; 2
 564:	9f 93       	push	r25
 566:	8f 93       	push	r24
 568:	0e 94 be 02 	call	0x57c	; 0x57c <printf>
			new_message = 0;
 56c:	10 92 6e 02 	sts	0x026E, r1	; 0x80026e <__data_end>
 570:	0f b6       	in	r0, 0x3f	; 63
 572:	f8 94       	cli
 574:	de bf       	out	0x3e, r29	; 62
 576:	0f be       	out	0x3f, r0	; 63
 578:	cd bf       	out	0x3d, r28	; 61
 57a:	bb cf       	rjmp	.-138    	; 0x4f2 <main+0x98>

0000057c <printf>:
 57c:	a0 e0       	ldi	r26, 0x00	; 0
 57e:	b0 e0       	ldi	r27, 0x00	; 0
 580:	e4 ec       	ldi	r30, 0xC4	; 196
 582:	f2 e0       	ldi	r31, 0x02	; 2
 584:	0c 94 a5 05 	jmp	0xb4a	; 0xb4a <__prologue_saves__+0x20>
 588:	ae 01       	movw	r20, r28
 58a:	4b 5f       	subi	r20, 0xFB	; 251
 58c:	5f 4f       	sbci	r21, 0xFF	; 255
 58e:	fa 01       	movw	r30, r20
 590:	61 91       	ld	r22, Z+
 592:	71 91       	ld	r23, Z+
 594:	af 01       	movw	r20, r30
 596:	80 91 71 02 	lds	r24, 0x0271	; 0x800271 <__iob+0x2>
 59a:	90 91 72 02 	lds	r25, 0x0272	; 0x800272 <__iob+0x3>
 59e:	0e 94 04 03 	call	0x608	; 0x608 <vfprintf>
 5a2:	e2 e0       	ldi	r30, 0x02	; 2
 5a4:	0c 94 c1 05 	jmp	0xb82	; 0xb82 <__epilogue_restores__+0x20>

000005a8 <puts>:
 5a8:	0f 93       	push	r16
 5aa:	1f 93       	push	r17
 5ac:	cf 93       	push	r28
 5ae:	df 93       	push	r29
 5b0:	e0 91 71 02 	lds	r30, 0x0271	; 0x800271 <__iob+0x2>
 5b4:	f0 91 72 02 	lds	r31, 0x0272	; 0x800272 <__iob+0x3>
 5b8:	23 81       	ldd	r18, Z+3	; 0x03
 5ba:	21 ff       	sbrs	r18, 1
 5bc:	1b c0       	rjmp	.+54     	; 0x5f4 <puts+0x4c>
 5be:	8c 01       	movw	r16, r24
 5c0:	d0 e0       	ldi	r29, 0x00	; 0
 5c2:	c0 e0       	ldi	r28, 0x00	; 0
 5c4:	f8 01       	movw	r30, r16
 5c6:	81 91       	ld	r24, Z+
 5c8:	8f 01       	movw	r16, r30
 5ca:	60 91 71 02 	lds	r22, 0x0271	; 0x800271 <__iob+0x2>
 5ce:	70 91 72 02 	lds	r23, 0x0272	; 0x800272 <__iob+0x3>
 5d2:	db 01       	movw	r26, r22
 5d4:	18 96       	adiw	r26, 0x08	; 8
 5d6:	ed 91       	ld	r30, X+
 5d8:	fc 91       	ld	r31, X
 5da:	19 97       	sbiw	r26, 0x09	; 9
 5dc:	88 23       	and	r24, r24
 5de:	31 f0       	breq	.+12     	; 0x5ec <puts+0x44>
 5e0:	09 95       	icall
 5e2:	89 2b       	or	r24, r25
 5e4:	79 f3       	breq	.-34     	; 0x5c4 <puts+0x1c>
 5e6:	df ef       	ldi	r29, 0xFF	; 255
 5e8:	cf ef       	ldi	r28, 0xFF	; 255
 5ea:	ec cf       	rjmp	.-40     	; 0x5c4 <puts+0x1c>
 5ec:	8a e0       	ldi	r24, 0x0A	; 10
 5ee:	09 95       	icall
 5f0:	89 2b       	or	r24, r25
 5f2:	19 f0       	breq	.+6      	; 0x5fa <puts+0x52>
 5f4:	8f ef       	ldi	r24, 0xFF	; 255
 5f6:	9f ef       	ldi	r25, 0xFF	; 255
 5f8:	02 c0       	rjmp	.+4      	; 0x5fe <puts+0x56>
 5fa:	8d 2f       	mov	r24, r29
 5fc:	9c 2f       	mov	r25, r28
 5fe:	df 91       	pop	r29
 600:	cf 91       	pop	r28
 602:	1f 91       	pop	r17
 604:	0f 91       	pop	r16
 606:	08 95       	ret

00000608 <vfprintf>:
 608:	ab e0       	ldi	r26, 0x0B	; 11
 60a:	b0 e0       	ldi	r27, 0x00	; 0
 60c:	ea e0       	ldi	r30, 0x0A	; 10
 60e:	f3 e0       	ldi	r31, 0x03	; 3
 610:	0c 94 95 05 	jmp	0xb2a	; 0xb2a <__prologue_saves__>
 614:	6c 01       	movw	r12, r24
 616:	7b 01       	movw	r14, r22
 618:	8a 01       	movw	r16, r20
 61a:	fc 01       	movw	r30, r24
 61c:	17 82       	std	Z+7, r1	; 0x07
 61e:	16 82       	std	Z+6, r1	; 0x06
 620:	83 81       	ldd	r24, Z+3	; 0x03
 622:	81 ff       	sbrs	r24, 1
 624:	cc c1       	rjmp	.+920    	; 0x9be <vfprintf+0x3b6>
 626:	ce 01       	movw	r24, r28
 628:	01 96       	adiw	r24, 0x01	; 1
 62a:	3c 01       	movw	r6, r24
 62c:	f6 01       	movw	r30, r12
 62e:	93 81       	ldd	r25, Z+3	; 0x03
 630:	f7 01       	movw	r30, r14
 632:	93 fd       	sbrc	r25, 3
 634:	85 91       	lpm	r24, Z+
 636:	93 ff       	sbrs	r25, 3
 638:	81 91       	ld	r24, Z+
 63a:	7f 01       	movw	r14, r30
 63c:	88 23       	and	r24, r24
 63e:	09 f4       	brne	.+2      	; 0x642 <vfprintf+0x3a>
 640:	ba c1       	rjmp	.+884    	; 0x9b6 <vfprintf+0x3ae>
 642:	85 32       	cpi	r24, 0x25	; 37
 644:	39 f4       	brne	.+14     	; 0x654 <vfprintf+0x4c>
 646:	93 fd       	sbrc	r25, 3
 648:	85 91       	lpm	r24, Z+
 64a:	93 ff       	sbrs	r25, 3
 64c:	81 91       	ld	r24, Z+
 64e:	7f 01       	movw	r14, r30
 650:	85 32       	cpi	r24, 0x25	; 37
 652:	29 f4       	brne	.+10     	; 0x65e <vfprintf+0x56>
 654:	b6 01       	movw	r22, r12
 656:	90 e0       	ldi	r25, 0x00	; 0
 658:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <fputc>
 65c:	e7 cf       	rjmp	.-50     	; 0x62c <vfprintf+0x24>
 65e:	91 2c       	mov	r9, r1
 660:	21 2c       	mov	r2, r1
 662:	31 2c       	mov	r3, r1
 664:	ff e1       	ldi	r31, 0x1F	; 31
 666:	f3 15       	cp	r31, r3
 668:	d8 f0       	brcs	.+54     	; 0x6a0 <vfprintf+0x98>
 66a:	8b 32       	cpi	r24, 0x2B	; 43
 66c:	79 f0       	breq	.+30     	; 0x68c <vfprintf+0x84>
 66e:	38 f4       	brcc	.+14     	; 0x67e <vfprintf+0x76>
 670:	80 32       	cpi	r24, 0x20	; 32
 672:	79 f0       	breq	.+30     	; 0x692 <vfprintf+0x8a>
 674:	83 32       	cpi	r24, 0x23	; 35
 676:	a1 f4       	brne	.+40     	; 0x6a0 <vfprintf+0x98>
 678:	23 2d       	mov	r18, r3
 67a:	20 61       	ori	r18, 0x10	; 16
 67c:	1d c0       	rjmp	.+58     	; 0x6b8 <vfprintf+0xb0>
 67e:	8d 32       	cpi	r24, 0x2D	; 45
 680:	61 f0       	breq	.+24     	; 0x69a <vfprintf+0x92>
 682:	80 33       	cpi	r24, 0x30	; 48
 684:	69 f4       	brne	.+26     	; 0x6a0 <vfprintf+0x98>
 686:	23 2d       	mov	r18, r3
 688:	21 60       	ori	r18, 0x01	; 1
 68a:	16 c0       	rjmp	.+44     	; 0x6b8 <vfprintf+0xb0>
 68c:	83 2d       	mov	r24, r3
 68e:	82 60       	ori	r24, 0x02	; 2
 690:	38 2e       	mov	r3, r24
 692:	e3 2d       	mov	r30, r3
 694:	e4 60       	ori	r30, 0x04	; 4
 696:	3e 2e       	mov	r3, r30
 698:	2a c0       	rjmp	.+84     	; 0x6ee <vfprintf+0xe6>
 69a:	f3 2d       	mov	r31, r3
 69c:	f8 60       	ori	r31, 0x08	; 8
 69e:	1d c0       	rjmp	.+58     	; 0x6da <vfprintf+0xd2>
 6a0:	37 fc       	sbrc	r3, 7
 6a2:	2d c0       	rjmp	.+90     	; 0x6fe <vfprintf+0xf6>
 6a4:	20 ed       	ldi	r18, 0xD0	; 208
 6a6:	28 0f       	add	r18, r24
 6a8:	2a 30       	cpi	r18, 0x0A	; 10
 6aa:	40 f0       	brcs	.+16     	; 0x6bc <vfprintf+0xb4>
 6ac:	8e 32       	cpi	r24, 0x2E	; 46
 6ae:	b9 f4       	brne	.+46     	; 0x6de <vfprintf+0xd6>
 6b0:	36 fc       	sbrc	r3, 6
 6b2:	81 c1       	rjmp	.+770    	; 0x9b6 <vfprintf+0x3ae>
 6b4:	23 2d       	mov	r18, r3
 6b6:	20 64       	ori	r18, 0x40	; 64
 6b8:	32 2e       	mov	r3, r18
 6ba:	19 c0       	rjmp	.+50     	; 0x6ee <vfprintf+0xe6>
 6bc:	36 fe       	sbrs	r3, 6
 6be:	06 c0       	rjmp	.+12     	; 0x6cc <vfprintf+0xc4>
 6c0:	8a e0       	ldi	r24, 0x0A	; 10
 6c2:	98 9e       	mul	r9, r24
 6c4:	20 0d       	add	r18, r0
 6c6:	11 24       	eor	r1, r1
 6c8:	92 2e       	mov	r9, r18
 6ca:	11 c0       	rjmp	.+34     	; 0x6ee <vfprintf+0xe6>
 6cc:	ea e0       	ldi	r30, 0x0A	; 10
 6ce:	2e 9e       	mul	r2, r30
 6d0:	20 0d       	add	r18, r0
 6d2:	11 24       	eor	r1, r1
 6d4:	22 2e       	mov	r2, r18
 6d6:	f3 2d       	mov	r31, r3
 6d8:	f0 62       	ori	r31, 0x20	; 32
 6da:	3f 2e       	mov	r3, r31
 6dc:	08 c0       	rjmp	.+16     	; 0x6ee <vfprintf+0xe6>
 6de:	8c 36       	cpi	r24, 0x6C	; 108
 6e0:	21 f4       	brne	.+8      	; 0x6ea <vfprintf+0xe2>
 6e2:	83 2d       	mov	r24, r3
 6e4:	80 68       	ori	r24, 0x80	; 128
 6e6:	38 2e       	mov	r3, r24
 6e8:	02 c0       	rjmp	.+4      	; 0x6ee <vfprintf+0xe6>
 6ea:	88 36       	cpi	r24, 0x68	; 104
 6ec:	41 f4       	brne	.+16     	; 0x6fe <vfprintf+0xf6>
 6ee:	f7 01       	movw	r30, r14
 6f0:	93 fd       	sbrc	r25, 3
 6f2:	85 91       	lpm	r24, Z+
 6f4:	93 ff       	sbrs	r25, 3
 6f6:	81 91       	ld	r24, Z+
 6f8:	7f 01       	movw	r14, r30
 6fa:	81 11       	cpse	r24, r1
 6fc:	b3 cf       	rjmp	.-154    	; 0x664 <vfprintf+0x5c>
 6fe:	98 2f       	mov	r25, r24
 700:	9f 7d       	andi	r25, 0xDF	; 223
 702:	95 54       	subi	r25, 0x45	; 69
 704:	93 30       	cpi	r25, 0x03	; 3
 706:	28 f4       	brcc	.+10     	; 0x712 <vfprintf+0x10a>
 708:	0c 5f       	subi	r16, 0xFC	; 252
 70a:	1f 4f       	sbci	r17, 0xFF	; 255
 70c:	9f e3       	ldi	r25, 0x3F	; 63
 70e:	99 83       	std	Y+1, r25	; 0x01
 710:	0d c0       	rjmp	.+26     	; 0x72c <vfprintf+0x124>
 712:	83 36       	cpi	r24, 0x63	; 99
 714:	31 f0       	breq	.+12     	; 0x722 <vfprintf+0x11a>
 716:	83 37       	cpi	r24, 0x73	; 115
 718:	71 f0       	breq	.+28     	; 0x736 <vfprintf+0x12e>
 71a:	83 35       	cpi	r24, 0x53	; 83
 71c:	09 f0       	breq	.+2      	; 0x720 <vfprintf+0x118>
 71e:	59 c0       	rjmp	.+178    	; 0x7d2 <vfprintf+0x1ca>
 720:	21 c0       	rjmp	.+66     	; 0x764 <vfprintf+0x15c>
 722:	f8 01       	movw	r30, r16
 724:	80 81       	ld	r24, Z
 726:	89 83       	std	Y+1, r24	; 0x01
 728:	0e 5f       	subi	r16, 0xFE	; 254
 72a:	1f 4f       	sbci	r17, 0xFF	; 255
 72c:	88 24       	eor	r8, r8
 72e:	83 94       	inc	r8
 730:	91 2c       	mov	r9, r1
 732:	53 01       	movw	r10, r6
 734:	13 c0       	rjmp	.+38     	; 0x75c <vfprintf+0x154>
 736:	28 01       	movw	r4, r16
 738:	f2 e0       	ldi	r31, 0x02	; 2
 73a:	4f 0e       	add	r4, r31
 73c:	51 1c       	adc	r5, r1
 73e:	f8 01       	movw	r30, r16
 740:	a0 80       	ld	r10, Z
 742:	b1 80       	ldd	r11, Z+1	; 0x01
 744:	36 fe       	sbrs	r3, 6
 746:	03 c0       	rjmp	.+6      	; 0x74e <vfprintf+0x146>
 748:	69 2d       	mov	r22, r9
 74a:	70 e0       	ldi	r23, 0x00	; 0
 74c:	02 c0       	rjmp	.+4      	; 0x752 <vfprintf+0x14a>
 74e:	6f ef       	ldi	r22, 0xFF	; 255
 750:	7f ef       	ldi	r23, 0xFF	; 255
 752:	c5 01       	movw	r24, r10
 754:	0e 94 f0 04 	call	0x9e0	; 0x9e0 <strnlen>
 758:	4c 01       	movw	r8, r24
 75a:	82 01       	movw	r16, r4
 75c:	f3 2d       	mov	r31, r3
 75e:	ff 77       	andi	r31, 0x7F	; 127
 760:	3f 2e       	mov	r3, r31
 762:	16 c0       	rjmp	.+44     	; 0x790 <vfprintf+0x188>
 764:	28 01       	movw	r4, r16
 766:	22 e0       	ldi	r18, 0x02	; 2
 768:	42 0e       	add	r4, r18
 76a:	51 1c       	adc	r5, r1
 76c:	f8 01       	movw	r30, r16
 76e:	a0 80       	ld	r10, Z
 770:	b1 80       	ldd	r11, Z+1	; 0x01
 772:	36 fe       	sbrs	r3, 6
 774:	03 c0       	rjmp	.+6      	; 0x77c <vfprintf+0x174>
 776:	69 2d       	mov	r22, r9
 778:	70 e0       	ldi	r23, 0x00	; 0
 77a:	02 c0       	rjmp	.+4      	; 0x780 <vfprintf+0x178>
 77c:	6f ef       	ldi	r22, 0xFF	; 255
 77e:	7f ef       	ldi	r23, 0xFF	; 255
 780:	c5 01       	movw	r24, r10
 782:	0e 94 e5 04 	call	0x9ca	; 0x9ca <strnlen_P>
 786:	4c 01       	movw	r8, r24
 788:	f3 2d       	mov	r31, r3
 78a:	f0 68       	ori	r31, 0x80	; 128
 78c:	3f 2e       	mov	r3, r31
 78e:	82 01       	movw	r16, r4
 790:	33 fc       	sbrc	r3, 3
 792:	1b c0       	rjmp	.+54     	; 0x7ca <vfprintf+0x1c2>
 794:	82 2d       	mov	r24, r2
 796:	90 e0       	ldi	r25, 0x00	; 0
 798:	88 16       	cp	r8, r24
 79a:	99 06       	cpc	r9, r25
 79c:	b0 f4       	brcc	.+44     	; 0x7ca <vfprintf+0x1c2>
 79e:	b6 01       	movw	r22, r12
 7a0:	80 e2       	ldi	r24, 0x20	; 32
 7a2:	90 e0       	ldi	r25, 0x00	; 0
 7a4:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <fputc>
 7a8:	2a 94       	dec	r2
 7aa:	f4 cf       	rjmp	.-24     	; 0x794 <vfprintf+0x18c>
 7ac:	f5 01       	movw	r30, r10
 7ae:	37 fc       	sbrc	r3, 7
 7b0:	85 91       	lpm	r24, Z+
 7b2:	37 fe       	sbrs	r3, 7
 7b4:	81 91       	ld	r24, Z+
 7b6:	5f 01       	movw	r10, r30
 7b8:	b6 01       	movw	r22, r12
 7ba:	90 e0       	ldi	r25, 0x00	; 0
 7bc:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <fputc>
 7c0:	21 10       	cpse	r2, r1
 7c2:	2a 94       	dec	r2
 7c4:	21 e0       	ldi	r18, 0x01	; 1
 7c6:	82 1a       	sub	r8, r18
 7c8:	91 08       	sbc	r9, r1
 7ca:	81 14       	cp	r8, r1
 7cc:	91 04       	cpc	r9, r1
 7ce:	71 f7       	brne	.-36     	; 0x7ac <vfprintf+0x1a4>
 7d0:	e8 c0       	rjmp	.+464    	; 0x9a2 <vfprintf+0x39a>
 7d2:	84 36       	cpi	r24, 0x64	; 100
 7d4:	11 f0       	breq	.+4      	; 0x7da <vfprintf+0x1d2>
 7d6:	89 36       	cpi	r24, 0x69	; 105
 7d8:	41 f5       	brne	.+80     	; 0x82a <vfprintf+0x222>
 7da:	f8 01       	movw	r30, r16
 7dc:	37 fe       	sbrs	r3, 7
 7de:	07 c0       	rjmp	.+14     	; 0x7ee <vfprintf+0x1e6>
 7e0:	60 81       	ld	r22, Z
 7e2:	71 81       	ldd	r23, Z+1	; 0x01
 7e4:	82 81       	ldd	r24, Z+2	; 0x02
 7e6:	93 81       	ldd	r25, Z+3	; 0x03
 7e8:	0c 5f       	subi	r16, 0xFC	; 252
 7ea:	1f 4f       	sbci	r17, 0xFF	; 255
 7ec:	08 c0       	rjmp	.+16     	; 0x7fe <vfprintf+0x1f6>
 7ee:	60 81       	ld	r22, Z
 7f0:	71 81       	ldd	r23, Z+1	; 0x01
 7f2:	07 2e       	mov	r0, r23
 7f4:	00 0c       	add	r0, r0
 7f6:	88 0b       	sbc	r24, r24
 7f8:	99 0b       	sbc	r25, r25
 7fa:	0e 5f       	subi	r16, 0xFE	; 254
 7fc:	1f 4f       	sbci	r17, 0xFF	; 255
 7fe:	f3 2d       	mov	r31, r3
 800:	ff 76       	andi	r31, 0x6F	; 111
 802:	3f 2e       	mov	r3, r31
 804:	97 ff       	sbrs	r25, 7
 806:	09 c0       	rjmp	.+18     	; 0x81a <vfprintf+0x212>
 808:	90 95       	com	r25
 80a:	80 95       	com	r24
 80c:	70 95       	com	r23
 80e:	61 95       	neg	r22
 810:	7f 4f       	sbci	r23, 0xFF	; 255
 812:	8f 4f       	sbci	r24, 0xFF	; 255
 814:	9f 4f       	sbci	r25, 0xFF	; 255
 816:	f0 68       	ori	r31, 0x80	; 128
 818:	3f 2e       	mov	r3, r31
 81a:	2a e0       	ldi	r18, 0x0A	; 10
 81c:	30 e0       	ldi	r19, 0x00	; 0
 81e:	a3 01       	movw	r20, r6
 820:	0e 94 37 05 	call	0xa6e	; 0xa6e <__ultoa_invert>
 824:	88 2e       	mov	r8, r24
 826:	86 18       	sub	r8, r6
 828:	45 c0       	rjmp	.+138    	; 0x8b4 <vfprintf+0x2ac>
 82a:	85 37       	cpi	r24, 0x75	; 117
 82c:	31 f4       	brne	.+12     	; 0x83a <vfprintf+0x232>
 82e:	23 2d       	mov	r18, r3
 830:	2f 7e       	andi	r18, 0xEF	; 239
 832:	b2 2e       	mov	r11, r18
 834:	2a e0       	ldi	r18, 0x0A	; 10
 836:	30 e0       	ldi	r19, 0x00	; 0
 838:	25 c0       	rjmp	.+74     	; 0x884 <vfprintf+0x27c>
 83a:	93 2d       	mov	r25, r3
 83c:	99 7f       	andi	r25, 0xF9	; 249
 83e:	b9 2e       	mov	r11, r25
 840:	8f 36       	cpi	r24, 0x6F	; 111
 842:	c1 f0       	breq	.+48     	; 0x874 <vfprintf+0x26c>
 844:	18 f4       	brcc	.+6      	; 0x84c <vfprintf+0x244>
 846:	88 35       	cpi	r24, 0x58	; 88
 848:	79 f0       	breq	.+30     	; 0x868 <vfprintf+0x260>
 84a:	b5 c0       	rjmp	.+362    	; 0x9b6 <vfprintf+0x3ae>
 84c:	80 37       	cpi	r24, 0x70	; 112
 84e:	19 f0       	breq	.+6      	; 0x856 <vfprintf+0x24e>
 850:	88 37       	cpi	r24, 0x78	; 120
 852:	21 f0       	breq	.+8      	; 0x85c <vfprintf+0x254>
 854:	b0 c0       	rjmp	.+352    	; 0x9b6 <vfprintf+0x3ae>
 856:	e9 2f       	mov	r30, r25
 858:	e0 61       	ori	r30, 0x10	; 16
 85a:	be 2e       	mov	r11, r30
 85c:	b4 fe       	sbrs	r11, 4
 85e:	0d c0       	rjmp	.+26     	; 0x87a <vfprintf+0x272>
 860:	fb 2d       	mov	r31, r11
 862:	f4 60       	ori	r31, 0x04	; 4
 864:	bf 2e       	mov	r11, r31
 866:	09 c0       	rjmp	.+18     	; 0x87a <vfprintf+0x272>
 868:	34 fe       	sbrs	r3, 4
 86a:	0a c0       	rjmp	.+20     	; 0x880 <vfprintf+0x278>
 86c:	29 2f       	mov	r18, r25
 86e:	26 60       	ori	r18, 0x06	; 6
 870:	b2 2e       	mov	r11, r18
 872:	06 c0       	rjmp	.+12     	; 0x880 <vfprintf+0x278>
 874:	28 e0       	ldi	r18, 0x08	; 8
 876:	30 e0       	ldi	r19, 0x00	; 0
 878:	05 c0       	rjmp	.+10     	; 0x884 <vfprintf+0x27c>
 87a:	20 e1       	ldi	r18, 0x10	; 16
 87c:	30 e0       	ldi	r19, 0x00	; 0
 87e:	02 c0       	rjmp	.+4      	; 0x884 <vfprintf+0x27c>
 880:	20 e1       	ldi	r18, 0x10	; 16
 882:	32 e0       	ldi	r19, 0x02	; 2
 884:	f8 01       	movw	r30, r16
 886:	b7 fe       	sbrs	r11, 7
 888:	07 c0       	rjmp	.+14     	; 0x898 <vfprintf+0x290>
 88a:	60 81       	ld	r22, Z
 88c:	71 81       	ldd	r23, Z+1	; 0x01
 88e:	82 81       	ldd	r24, Z+2	; 0x02
 890:	93 81       	ldd	r25, Z+3	; 0x03
 892:	0c 5f       	subi	r16, 0xFC	; 252
 894:	1f 4f       	sbci	r17, 0xFF	; 255
 896:	06 c0       	rjmp	.+12     	; 0x8a4 <vfprintf+0x29c>
 898:	60 81       	ld	r22, Z
 89a:	71 81       	ldd	r23, Z+1	; 0x01
 89c:	80 e0       	ldi	r24, 0x00	; 0
 89e:	90 e0       	ldi	r25, 0x00	; 0
 8a0:	0e 5f       	subi	r16, 0xFE	; 254
 8a2:	1f 4f       	sbci	r17, 0xFF	; 255
 8a4:	a3 01       	movw	r20, r6
 8a6:	0e 94 37 05 	call	0xa6e	; 0xa6e <__ultoa_invert>
 8aa:	88 2e       	mov	r8, r24
 8ac:	86 18       	sub	r8, r6
 8ae:	fb 2d       	mov	r31, r11
 8b0:	ff 77       	andi	r31, 0x7F	; 127
 8b2:	3f 2e       	mov	r3, r31
 8b4:	36 fe       	sbrs	r3, 6
 8b6:	0d c0       	rjmp	.+26     	; 0x8d2 <vfprintf+0x2ca>
 8b8:	23 2d       	mov	r18, r3
 8ba:	2e 7f       	andi	r18, 0xFE	; 254
 8bc:	a2 2e       	mov	r10, r18
 8be:	89 14       	cp	r8, r9
 8c0:	58 f4       	brcc	.+22     	; 0x8d8 <vfprintf+0x2d0>
 8c2:	34 fe       	sbrs	r3, 4
 8c4:	0b c0       	rjmp	.+22     	; 0x8dc <vfprintf+0x2d4>
 8c6:	32 fc       	sbrc	r3, 2
 8c8:	09 c0       	rjmp	.+18     	; 0x8dc <vfprintf+0x2d4>
 8ca:	83 2d       	mov	r24, r3
 8cc:	8e 7e       	andi	r24, 0xEE	; 238
 8ce:	a8 2e       	mov	r10, r24
 8d0:	05 c0       	rjmp	.+10     	; 0x8dc <vfprintf+0x2d4>
 8d2:	b8 2c       	mov	r11, r8
 8d4:	a3 2c       	mov	r10, r3
 8d6:	03 c0       	rjmp	.+6      	; 0x8de <vfprintf+0x2d6>
 8d8:	b8 2c       	mov	r11, r8
 8da:	01 c0       	rjmp	.+2      	; 0x8de <vfprintf+0x2d6>
 8dc:	b9 2c       	mov	r11, r9
 8de:	a4 fe       	sbrs	r10, 4
 8e0:	0f c0       	rjmp	.+30     	; 0x900 <vfprintf+0x2f8>
 8e2:	fe 01       	movw	r30, r28
 8e4:	e8 0d       	add	r30, r8
 8e6:	f1 1d       	adc	r31, r1
 8e8:	80 81       	ld	r24, Z
 8ea:	80 33       	cpi	r24, 0x30	; 48
 8ec:	21 f4       	brne	.+8      	; 0x8f6 <vfprintf+0x2ee>
 8ee:	9a 2d       	mov	r25, r10
 8f0:	99 7e       	andi	r25, 0xE9	; 233
 8f2:	a9 2e       	mov	r10, r25
 8f4:	09 c0       	rjmp	.+18     	; 0x908 <vfprintf+0x300>
 8f6:	a2 fe       	sbrs	r10, 2
 8f8:	06 c0       	rjmp	.+12     	; 0x906 <vfprintf+0x2fe>
 8fa:	b3 94       	inc	r11
 8fc:	b3 94       	inc	r11
 8fe:	04 c0       	rjmp	.+8      	; 0x908 <vfprintf+0x300>
 900:	8a 2d       	mov	r24, r10
 902:	86 78       	andi	r24, 0x86	; 134
 904:	09 f0       	breq	.+2      	; 0x908 <vfprintf+0x300>
 906:	b3 94       	inc	r11
 908:	a3 fc       	sbrc	r10, 3
 90a:	11 c0       	rjmp	.+34     	; 0x92e <vfprintf+0x326>
 90c:	a0 fe       	sbrs	r10, 0
 90e:	06 c0       	rjmp	.+12     	; 0x91c <vfprintf+0x314>
 910:	b2 14       	cp	r11, r2
 912:	88 f4       	brcc	.+34     	; 0x936 <vfprintf+0x32e>
 914:	28 0c       	add	r2, r8
 916:	92 2c       	mov	r9, r2
 918:	9b 18       	sub	r9, r11
 91a:	0e c0       	rjmp	.+28     	; 0x938 <vfprintf+0x330>
 91c:	b2 14       	cp	r11, r2
 91e:	60 f4       	brcc	.+24     	; 0x938 <vfprintf+0x330>
 920:	b6 01       	movw	r22, r12
 922:	80 e2       	ldi	r24, 0x20	; 32
 924:	90 e0       	ldi	r25, 0x00	; 0
 926:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <fputc>
 92a:	b3 94       	inc	r11
 92c:	f7 cf       	rjmp	.-18     	; 0x91c <vfprintf+0x314>
 92e:	b2 14       	cp	r11, r2
 930:	18 f4       	brcc	.+6      	; 0x938 <vfprintf+0x330>
 932:	2b 18       	sub	r2, r11
 934:	02 c0       	rjmp	.+4      	; 0x93a <vfprintf+0x332>
 936:	98 2c       	mov	r9, r8
 938:	21 2c       	mov	r2, r1
 93a:	a4 fe       	sbrs	r10, 4
 93c:	10 c0       	rjmp	.+32     	; 0x95e <vfprintf+0x356>
 93e:	b6 01       	movw	r22, r12
 940:	80 e3       	ldi	r24, 0x30	; 48
 942:	90 e0       	ldi	r25, 0x00	; 0
 944:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <fputc>
 948:	a2 fe       	sbrs	r10, 2
 94a:	17 c0       	rjmp	.+46     	; 0x97a <vfprintf+0x372>
 94c:	a1 fc       	sbrc	r10, 1
 94e:	03 c0       	rjmp	.+6      	; 0x956 <vfprintf+0x34e>
 950:	88 e7       	ldi	r24, 0x78	; 120
 952:	90 e0       	ldi	r25, 0x00	; 0
 954:	02 c0       	rjmp	.+4      	; 0x95a <vfprintf+0x352>
 956:	88 e5       	ldi	r24, 0x58	; 88
 958:	90 e0       	ldi	r25, 0x00	; 0
 95a:	b6 01       	movw	r22, r12
 95c:	0c c0       	rjmp	.+24     	; 0x976 <vfprintf+0x36e>
 95e:	8a 2d       	mov	r24, r10
 960:	86 78       	andi	r24, 0x86	; 134
 962:	59 f0       	breq	.+22     	; 0x97a <vfprintf+0x372>
 964:	a1 fe       	sbrs	r10, 1
 966:	02 c0       	rjmp	.+4      	; 0x96c <vfprintf+0x364>
 968:	8b e2       	ldi	r24, 0x2B	; 43
 96a:	01 c0       	rjmp	.+2      	; 0x96e <vfprintf+0x366>
 96c:	80 e2       	ldi	r24, 0x20	; 32
 96e:	a7 fc       	sbrc	r10, 7
 970:	8d e2       	ldi	r24, 0x2D	; 45
 972:	b6 01       	movw	r22, r12
 974:	90 e0       	ldi	r25, 0x00	; 0
 976:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <fputc>
 97a:	89 14       	cp	r8, r9
 97c:	38 f4       	brcc	.+14     	; 0x98c <vfprintf+0x384>
 97e:	b6 01       	movw	r22, r12
 980:	80 e3       	ldi	r24, 0x30	; 48
 982:	90 e0       	ldi	r25, 0x00	; 0
 984:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <fputc>
 988:	9a 94       	dec	r9
 98a:	f7 cf       	rjmp	.-18     	; 0x97a <vfprintf+0x372>
 98c:	8a 94       	dec	r8
 98e:	f3 01       	movw	r30, r6
 990:	e8 0d       	add	r30, r8
 992:	f1 1d       	adc	r31, r1
 994:	80 81       	ld	r24, Z
 996:	b6 01       	movw	r22, r12
 998:	90 e0       	ldi	r25, 0x00	; 0
 99a:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <fputc>
 99e:	81 10       	cpse	r8, r1
 9a0:	f5 cf       	rjmp	.-22     	; 0x98c <vfprintf+0x384>
 9a2:	22 20       	and	r2, r2
 9a4:	09 f4       	brne	.+2      	; 0x9a8 <vfprintf+0x3a0>
 9a6:	42 ce       	rjmp	.-892    	; 0x62c <vfprintf+0x24>
 9a8:	b6 01       	movw	r22, r12
 9aa:	80 e2       	ldi	r24, 0x20	; 32
 9ac:	90 e0       	ldi	r25, 0x00	; 0
 9ae:	0e 94 fb 04 	call	0x9f6	; 0x9f6 <fputc>
 9b2:	2a 94       	dec	r2
 9b4:	f6 cf       	rjmp	.-20     	; 0x9a2 <vfprintf+0x39a>
 9b6:	f6 01       	movw	r30, r12
 9b8:	86 81       	ldd	r24, Z+6	; 0x06
 9ba:	97 81       	ldd	r25, Z+7	; 0x07
 9bc:	02 c0       	rjmp	.+4      	; 0x9c2 <vfprintf+0x3ba>
 9be:	8f ef       	ldi	r24, 0xFF	; 255
 9c0:	9f ef       	ldi	r25, 0xFF	; 255
 9c2:	2b 96       	adiw	r28, 0x0b	; 11
 9c4:	e2 e1       	ldi	r30, 0x12	; 18
 9c6:	0c 94 b1 05 	jmp	0xb62	; 0xb62 <__epilogue_restores__>

000009ca <strnlen_P>:
 9ca:	fc 01       	movw	r30, r24
 9cc:	05 90       	lpm	r0, Z+
 9ce:	61 50       	subi	r22, 0x01	; 1
 9d0:	70 40       	sbci	r23, 0x00	; 0
 9d2:	01 10       	cpse	r0, r1
 9d4:	d8 f7       	brcc	.-10     	; 0x9cc <strnlen_P+0x2>
 9d6:	80 95       	com	r24
 9d8:	90 95       	com	r25
 9da:	8e 0f       	add	r24, r30
 9dc:	9f 1f       	adc	r25, r31
 9de:	08 95       	ret

000009e0 <strnlen>:
 9e0:	fc 01       	movw	r30, r24
 9e2:	61 50       	subi	r22, 0x01	; 1
 9e4:	70 40       	sbci	r23, 0x00	; 0
 9e6:	01 90       	ld	r0, Z+
 9e8:	01 10       	cpse	r0, r1
 9ea:	d8 f7       	brcc	.-10     	; 0x9e2 <strnlen+0x2>
 9ec:	80 95       	com	r24
 9ee:	90 95       	com	r25
 9f0:	8e 0f       	add	r24, r30
 9f2:	9f 1f       	adc	r25, r31
 9f4:	08 95       	ret

000009f6 <fputc>:
 9f6:	0f 93       	push	r16
 9f8:	1f 93       	push	r17
 9fa:	cf 93       	push	r28
 9fc:	df 93       	push	r29
 9fe:	fb 01       	movw	r30, r22
 a00:	23 81       	ldd	r18, Z+3	; 0x03
 a02:	21 fd       	sbrc	r18, 1
 a04:	03 c0       	rjmp	.+6      	; 0xa0c <fputc+0x16>
 a06:	8f ef       	ldi	r24, 0xFF	; 255
 a08:	9f ef       	ldi	r25, 0xFF	; 255
 a0a:	2c c0       	rjmp	.+88     	; 0xa64 <fputc+0x6e>
 a0c:	22 ff       	sbrs	r18, 2
 a0e:	16 c0       	rjmp	.+44     	; 0xa3c <fputc+0x46>
 a10:	46 81       	ldd	r20, Z+6	; 0x06
 a12:	57 81       	ldd	r21, Z+7	; 0x07
 a14:	24 81       	ldd	r18, Z+4	; 0x04
 a16:	35 81       	ldd	r19, Z+5	; 0x05
 a18:	42 17       	cp	r20, r18
 a1a:	53 07       	cpc	r21, r19
 a1c:	44 f4       	brge	.+16     	; 0xa2e <fputc+0x38>
 a1e:	a0 81       	ld	r26, Z
 a20:	b1 81       	ldd	r27, Z+1	; 0x01
 a22:	9d 01       	movw	r18, r26
 a24:	2f 5f       	subi	r18, 0xFF	; 255
 a26:	3f 4f       	sbci	r19, 0xFF	; 255
 a28:	31 83       	std	Z+1, r19	; 0x01
 a2a:	20 83       	st	Z, r18
 a2c:	8c 93       	st	X, r24
 a2e:	26 81       	ldd	r18, Z+6	; 0x06
 a30:	37 81       	ldd	r19, Z+7	; 0x07
 a32:	2f 5f       	subi	r18, 0xFF	; 255
 a34:	3f 4f       	sbci	r19, 0xFF	; 255
 a36:	37 83       	std	Z+7, r19	; 0x07
 a38:	26 83       	std	Z+6, r18	; 0x06
 a3a:	14 c0       	rjmp	.+40     	; 0xa64 <fputc+0x6e>
 a3c:	8b 01       	movw	r16, r22
 a3e:	ec 01       	movw	r28, r24
 a40:	fb 01       	movw	r30, r22
 a42:	00 84       	ldd	r0, Z+8	; 0x08
 a44:	f1 85       	ldd	r31, Z+9	; 0x09
 a46:	e0 2d       	mov	r30, r0
 a48:	09 95       	icall
 a4a:	89 2b       	or	r24, r25
 a4c:	e1 f6       	brne	.-72     	; 0xa06 <fputc+0x10>
 a4e:	d8 01       	movw	r26, r16
 a50:	16 96       	adiw	r26, 0x06	; 6
 a52:	8d 91       	ld	r24, X+
 a54:	9c 91       	ld	r25, X
 a56:	17 97       	sbiw	r26, 0x07	; 7
 a58:	01 96       	adiw	r24, 0x01	; 1
 a5a:	17 96       	adiw	r26, 0x07	; 7
 a5c:	9c 93       	st	X, r25
 a5e:	8e 93       	st	-X, r24
 a60:	16 97       	sbiw	r26, 0x06	; 6
 a62:	ce 01       	movw	r24, r28
 a64:	df 91       	pop	r29
 a66:	cf 91       	pop	r28
 a68:	1f 91       	pop	r17
 a6a:	0f 91       	pop	r16
 a6c:	08 95       	ret

00000a6e <__ultoa_invert>:
 a6e:	fa 01       	movw	r30, r20
 a70:	aa 27       	eor	r26, r26
 a72:	28 30       	cpi	r18, 0x08	; 8
 a74:	51 f1       	breq	.+84     	; 0xaca <__ultoa_invert+0x5c>
 a76:	20 31       	cpi	r18, 0x10	; 16
 a78:	81 f1       	breq	.+96     	; 0xada <__ultoa_invert+0x6c>
 a7a:	e8 94       	clt
 a7c:	6f 93       	push	r22
 a7e:	6e 7f       	andi	r22, 0xFE	; 254
 a80:	6e 5f       	subi	r22, 0xFE	; 254
 a82:	7f 4f       	sbci	r23, 0xFF	; 255
 a84:	8f 4f       	sbci	r24, 0xFF	; 255
 a86:	9f 4f       	sbci	r25, 0xFF	; 255
 a88:	af 4f       	sbci	r26, 0xFF	; 255
 a8a:	b1 e0       	ldi	r27, 0x01	; 1
 a8c:	3e d0       	rcall	.+124    	; 0xb0a <__ultoa_invert+0x9c>
 a8e:	b4 e0       	ldi	r27, 0x04	; 4
 a90:	3c d0       	rcall	.+120    	; 0xb0a <__ultoa_invert+0x9c>
 a92:	67 0f       	add	r22, r23
 a94:	78 1f       	adc	r23, r24
 a96:	89 1f       	adc	r24, r25
 a98:	9a 1f       	adc	r25, r26
 a9a:	a1 1d       	adc	r26, r1
 a9c:	68 0f       	add	r22, r24
 a9e:	79 1f       	adc	r23, r25
 aa0:	8a 1f       	adc	r24, r26
 aa2:	91 1d       	adc	r25, r1
 aa4:	a1 1d       	adc	r26, r1
 aa6:	6a 0f       	add	r22, r26
 aa8:	71 1d       	adc	r23, r1
 aaa:	81 1d       	adc	r24, r1
 aac:	91 1d       	adc	r25, r1
 aae:	a1 1d       	adc	r26, r1
 ab0:	20 d0       	rcall	.+64     	; 0xaf2 <__ultoa_invert+0x84>
 ab2:	09 f4       	brne	.+2      	; 0xab6 <__ultoa_invert+0x48>
 ab4:	68 94       	set
 ab6:	3f 91       	pop	r19
 ab8:	2a e0       	ldi	r18, 0x0A	; 10
 aba:	26 9f       	mul	r18, r22
 abc:	11 24       	eor	r1, r1
 abe:	30 19       	sub	r19, r0
 ac0:	30 5d       	subi	r19, 0xD0	; 208
 ac2:	31 93       	st	Z+, r19
 ac4:	de f6       	brtc	.-74     	; 0xa7c <__ultoa_invert+0xe>
 ac6:	cf 01       	movw	r24, r30
 ac8:	08 95       	ret
 aca:	46 2f       	mov	r20, r22
 acc:	47 70       	andi	r20, 0x07	; 7
 ace:	40 5d       	subi	r20, 0xD0	; 208
 ad0:	41 93       	st	Z+, r20
 ad2:	b3 e0       	ldi	r27, 0x03	; 3
 ad4:	0f d0       	rcall	.+30     	; 0xaf4 <__ultoa_invert+0x86>
 ad6:	c9 f7       	brne	.-14     	; 0xaca <__ultoa_invert+0x5c>
 ad8:	f6 cf       	rjmp	.-20     	; 0xac6 <__ultoa_invert+0x58>
 ada:	46 2f       	mov	r20, r22
 adc:	4f 70       	andi	r20, 0x0F	; 15
 ade:	40 5d       	subi	r20, 0xD0	; 208
 ae0:	4a 33       	cpi	r20, 0x3A	; 58
 ae2:	18 f0       	brcs	.+6      	; 0xaea <__ultoa_invert+0x7c>
 ae4:	49 5d       	subi	r20, 0xD9	; 217
 ae6:	31 fd       	sbrc	r19, 1
 ae8:	40 52       	subi	r20, 0x20	; 32
 aea:	41 93       	st	Z+, r20
 aec:	02 d0       	rcall	.+4      	; 0xaf2 <__ultoa_invert+0x84>
 aee:	a9 f7       	brne	.-22     	; 0xada <__ultoa_invert+0x6c>
 af0:	ea cf       	rjmp	.-44     	; 0xac6 <__ultoa_invert+0x58>
 af2:	b4 e0       	ldi	r27, 0x04	; 4
 af4:	a6 95       	lsr	r26
 af6:	97 95       	ror	r25
 af8:	87 95       	ror	r24
 afa:	77 95       	ror	r23
 afc:	67 95       	ror	r22
 afe:	ba 95       	dec	r27
 b00:	c9 f7       	brne	.-14     	; 0xaf4 <__ultoa_invert+0x86>
 b02:	00 97       	sbiw	r24, 0x00	; 0
 b04:	61 05       	cpc	r22, r1
 b06:	71 05       	cpc	r23, r1
 b08:	08 95       	ret
 b0a:	9b 01       	movw	r18, r22
 b0c:	ac 01       	movw	r20, r24
 b0e:	0a 2e       	mov	r0, r26
 b10:	06 94       	lsr	r0
 b12:	57 95       	ror	r21
 b14:	47 95       	ror	r20
 b16:	37 95       	ror	r19
 b18:	27 95       	ror	r18
 b1a:	ba 95       	dec	r27
 b1c:	c9 f7       	brne	.-14     	; 0xb10 <__ultoa_invert+0xa2>
 b1e:	62 0f       	add	r22, r18
 b20:	73 1f       	adc	r23, r19
 b22:	84 1f       	adc	r24, r20
 b24:	95 1f       	adc	r25, r21
 b26:	a0 1d       	adc	r26, r0
 b28:	08 95       	ret

00000b2a <__prologue_saves__>:
 b2a:	2f 92       	push	r2
 b2c:	3f 92       	push	r3
 b2e:	4f 92       	push	r4
 b30:	5f 92       	push	r5
 b32:	6f 92       	push	r6
 b34:	7f 92       	push	r7
 b36:	8f 92       	push	r8
 b38:	9f 92       	push	r9
 b3a:	af 92       	push	r10
 b3c:	bf 92       	push	r11
 b3e:	cf 92       	push	r12
 b40:	df 92       	push	r13
 b42:	ef 92       	push	r14
 b44:	ff 92       	push	r15
 b46:	0f 93       	push	r16
 b48:	1f 93       	push	r17
 b4a:	cf 93       	push	r28
 b4c:	df 93       	push	r29
 b4e:	cd b7       	in	r28, 0x3d	; 61
 b50:	de b7       	in	r29, 0x3e	; 62
 b52:	ca 1b       	sub	r28, r26
 b54:	db 0b       	sbc	r29, r27
 b56:	0f b6       	in	r0, 0x3f	; 63
 b58:	f8 94       	cli
 b5a:	de bf       	out	0x3e, r29	; 62
 b5c:	0f be       	out	0x3f, r0	; 63
 b5e:	cd bf       	out	0x3d, r28	; 61
 b60:	09 94       	ijmp

00000b62 <__epilogue_restores__>:
 b62:	2a 88       	ldd	r2, Y+18	; 0x12
 b64:	39 88       	ldd	r3, Y+17	; 0x11
 b66:	48 88       	ldd	r4, Y+16	; 0x10
 b68:	5f 84       	ldd	r5, Y+15	; 0x0f
 b6a:	6e 84       	ldd	r6, Y+14	; 0x0e
 b6c:	7d 84       	ldd	r7, Y+13	; 0x0d
 b6e:	8c 84       	ldd	r8, Y+12	; 0x0c
 b70:	9b 84       	ldd	r9, Y+11	; 0x0b
 b72:	aa 84       	ldd	r10, Y+10	; 0x0a
 b74:	b9 84       	ldd	r11, Y+9	; 0x09
 b76:	c8 84       	ldd	r12, Y+8	; 0x08
 b78:	df 80       	ldd	r13, Y+7	; 0x07
 b7a:	ee 80       	ldd	r14, Y+6	; 0x06
 b7c:	fd 80       	ldd	r15, Y+5	; 0x05
 b7e:	0c 81       	ldd	r16, Y+4	; 0x04
 b80:	1b 81       	ldd	r17, Y+3	; 0x03
 b82:	aa 81       	ldd	r26, Y+2	; 0x02
 b84:	b9 81       	ldd	r27, Y+1	; 0x01
 b86:	ce 0f       	add	r28, r30
 b88:	d1 1d       	adc	r29, r1
 b8a:	0f b6       	in	r0, 0x3f	; 63
 b8c:	f8 94       	cli
 b8e:	de bf       	out	0x3e, r29	; 62
 b90:	0f be       	out	0x3f, r0	; 63
 b92:	cd bf       	out	0x3d, r28	; 61
 b94:	ed 01       	movw	r28, r26
 b96:	08 95       	ret

00000b98 <_exit>:
 b98:	f8 94       	cli

00000b9a <__stop_program>:
 b9a:	ff cf       	rjmp	.-2      	; 0xb9a <__stop_program>
