
PingPongLab.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000016e  00800100  00000bac  00000c40  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bac  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000007  0080026e  0080026e  00000dae  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00000dae  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000e0c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00000e48  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b3b  00000000  00000000  00000f98  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009d5  00000000  00000000  00002ad3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000c81  00000000  00000000  000034a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000404  00000000  00000000  0000412c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000729  00000000  00000000  00004530  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000d37  00000000  00000000  00004c59  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00005990  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 38 00 	jmp	0x70	; 0x70 <__ctors_end>
   4:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   8:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
   c:	0c 94 02 02 	jmp	0x404	; 0x404 <__vector_3>
  10:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  14:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  18:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  1c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  20:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  24:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  28:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  2c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  30:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  34:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  38:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  3c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  40:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  44:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  48:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  4c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  50:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  54:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  58:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  5c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  60:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  64:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  68:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>
  6c:	0c 94 55 00 	jmp	0xaa	; 0xaa <__bad_interrupt>

00000070 <__ctors_end>:
  70:	11 24       	eor	r1, r1
  72:	1f be       	out	0x3f, r1	; 63
  74:	cf ef       	ldi	r28, 0xFF	; 255
  76:	d4 e0       	ldi	r29, 0x04	; 4
  78:	de bf       	out	0x3e, r29	; 62
  7a:	cd bf       	out	0x3d, r28	; 61

0000007c <__do_copy_data>:
  7c:	12 e0       	ldi	r17, 0x02	; 2
  7e:	a0 e0       	ldi	r26, 0x00	; 0
  80:	b1 e0       	ldi	r27, 0x01	; 1
  82:	ec ea       	ldi	r30, 0xAC	; 172
  84:	fb e0       	ldi	r31, 0x0B	; 11
  86:	02 c0       	rjmp	.+4      	; 0x8c <__do_copy_data+0x10>
  88:	05 90       	lpm	r0, Z+
  8a:	0d 92       	st	X+, r0
  8c:	ae 36       	cpi	r26, 0x6E	; 110
  8e:	b1 07       	cpc	r27, r17
  90:	d9 f7       	brne	.-10     	; 0x88 <__do_copy_data+0xc>

00000092 <__do_clear_bss>:
  92:	22 e0       	ldi	r18, 0x02	; 2
  94:	ae e6       	ldi	r26, 0x6E	; 110
  96:	b2 e0       	ldi	r27, 0x02	; 2
  98:	01 c0       	rjmp	.+2      	; 0x9c <.do_clear_bss_start>

0000009a <.do_clear_bss_loop>:
  9a:	1d 92       	st	X+, r1

0000009c <.do_clear_bss_start>:
  9c:	a5 37       	cpi	r26, 0x75	; 117
  9e:	b2 07       	cpc	r27, r18
  a0:	e1 f7       	brne	.-8      	; 0x9a <.do_clear_bss_loop>
  a2:	0e 94 35 02 	call	0x46a	; 0x46a <main>
  a6:	0c 94 d4 05 	jmp	0xba8	; 0xba8 <_exit>

000000aa <__bad_interrupt>:
  aa:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000ae <USART_Transmit>:
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
}
  ae:	5d 9b       	sbis	0x0b, 5	; 11
  b0:	fe cf       	rjmp	.-4      	; 0xae <USART_Transmit>
  b2:	8c b9       	out	0x0c, r24	; 12
  b4:	08 95       	ret

000000b6 <USART_Receive>:
  b6:	5f 9b       	sbis	0x0b, 7	; 11
  b8:	fe cf       	rjmp	.-4      	; 0xb6 <USART_Receive>
  ba:	8c b1       	in	r24, 0x0c	; 12
  bc:	08 95       	ret

000000be <OLED_send_command>:
  be:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xd8b>
  c2:	08 95       	ret

000000c4 <OLED_goto_line>:
  c4:	88 30       	cpi	r24, 0x08	; 8
  c6:	18 f4       	brcc	.+6      	; 0xce <OLED_goto_line+0xa>
  c8:	80 55       	subi	r24, 0x50	; 80
  ca:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
  ce:	08 95       	ret

000000d0 <OLED_goto_column>:
  d0:	cf 93       	push	r28
  d2:	88 23       	and	r24, r24
  d4:	54 f0       	brlt	.+20     	; 0xea <OLED_goto_column+0x1a>
  d6:	c8 2f       	mov	r28, r24
  d8:	c2 95       	swap	r28
  da:	cf 70       	andi	r28, 0x0F	; 15
  dc:	8f 70       	andi	r24, 0x0F	; 15
  de:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
  e2:	80 e1       	ldi	r24, 0x10	; 16
  e4:	8c 0f       	add	r24, r28
  e6:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
  ea:	cf 91       	pop	r28
  ec:	08 95       	ret

000000ee <OLED_home>:
  ee:	80 e0       	ldi	r24, 0x00	; 0
  f0:	0e 94 62 00 	call	0xc4	; 0xc4 <OLED_goto_line>
  f4:	80 e0       	ldi	r24, 0x00	; 0
  f6:	0e 94 68 00 	call	0xd0	; 0xd0 <OLED_goto_column>
  fa:	08 95       	ret

000000fc <OLED_send_data>:
  fc:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xf8b>
 100:	08 95       	ret

00000102 <OLED_clear_line>:
 102:	cf 93       	push	r28
 104:	df 93       	push	r29
 106:	0e 94 62 00 	call	0xc4	; 0xc4 <OLED_goto_line>
 10a:	c0 e0       	ldi	r28, 0x00	; 0
 10c:	d0 e0       	ldi	r29, 0x00	; 0
 10e:	04 c0       	rjmp	.+8      	; 0x118 <OLED_clear_line+0x16>
 110:	80 e0       	ldi	r24, 0x00	; 0
 112:	0e 94 7e 00 	call	0xfc	; 0xfc <OLED_send_data>
 116:	21 96       	adiw	r28, 0x01	; 1
 118:	c0 38       	cpi	r28, 0x80	; 128
 11a:	d1 05       	cpc	r29, r1
 11c:	cc f3       	brlt	.-14     	; 0x110 <OLED_clear_line+0xe>
 11e:	df 91       	pop	r29
 120:	cf 91       	pop	r28
 122:	08 95       	ret

00000124 <OLED_reset>:
 124:	cf 93       	push	r28
 126:	df 93       	push	r29
 128:	c0 e0       	ldi	r28, 0x00	; 0
 12a:	d0 e0       	ldi	r29, 0x00	; 0
 12c:	04 c0       	rjmp	.+8      	; 0x136 <OLED_reset+0x12>
 12e:	8c 2f       	mov	r24, r28
 130:	0e 94 81 00 	call	0x102	; 0x102 <OLED_clear_line>
 134:	21 96       	adiw	r28, 0x01	; 1
 136:	c8 30       	cpi	r28, 0x08	; 8
 138:	d1 05       	cpc	r29, r1
 13a:	cc f3       	brlt	.-14     	; 0x12e <OLED_reset+0xa>
 13c:	0e 94 77 00 	call	0xee	; 0xee <OLED_home>
 140:	df 91       	pop	r29
 142:	cf 91       	pop	r28
 144:	08 95       	ret

00000146 <OLED_Init>:
 146:	8e ea       	ldi	r24, 0xAE	; 174
 148:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 14c:	81 ea       	ldi	r24, 0xA1	; 161
 14e:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 152:	8a ed       	ldi	r24, 0xDA	; 218
 154:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 158:	82 e1       	ldi	r24, 0x12	; 18
 15a:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 15e:	88 ec       	ldi	r24, 0xC8	; 200
 160:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 164:	88 ea       	ldi	r24, 0xA8	; 168
 166:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 16a:	8f e3       	ldi	r24, 0x3F	; 63
 16c:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 170:	85 ed       	ldi	r24, 0xD5	; 213
 172:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 176:	80 e8       	ldi	r24, 0x80	; 128
 178:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 17c:	81 e8       	ldi	r24, 0x81	; 129
 17e:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 182:	80 e5       	ldi	r24, 0x50	; 80
 184:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 188:	89 ed       	ldi	r24, 0xD9	; 217
 18a:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 18e:	81 e2       	ldi	r24, 0x21	; 33
 190:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 194:	80 e2       	ldi	r24, 0x20	; 32
 196:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 19a:	82 e0       	ldi	r24, 0x02	; 2
 19c:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 1a0:	8b ed       	ldi	r24, 0xDB	; 219
 1a2:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 1a6:	80 e3       	ldi	r24, 0x30	; 48
 1a8:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 1ac:	8d ea       	ldi	r24, 0xAD	; 173
 1ae:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 1b2:	80 e0       	ldi	r24, 0x00	; 0
 1b4:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 1b8:	84 ea       	ldi	r24, 0xA4	; 164
 1ba:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 1be:	86 ea       	ldi	r24, 0xA6	; 166
 1c0:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 1c4:	8f ea       	ldi	r24, 0xAF	; 175
 1c6:	0e 94 5f 00 	call	0xbe	; 0xbe <OLED_send_command>
 1ca:	08 95       	ret

000001cc <SPI_Init>:
 1cc:	87 b3       	in	r24, 0x17	; 23
 1ce:	80 6b       	ori	r24, 0xB0	; 176
 1d0:	87 bb       	out	0x17, r24	; 23
 1d2:	87 b3       	in	r24, 0x17	; 23
 1d4:	8f 7b       	andi	r24, 0xBF	; 191
 1d6:	87 bb       	out	0x17, r24	; 23
 1d8:	8d b1       	in	r24, 0x0d	; 13
 1da:	81 65       	ori	r24, 0x51	; 81
 1dc:	8d b9       	out	0x0d, r24	; 13
 1de:	08 95       	ret

000001e0 <SPI_write>:
 1e0:	8f b9       	out	0x0f, r24	; 15
 1e2:	77 9b       	sbis	0x0e, 7	; 14
 1e4:	fe cf       	rjmp	.-4      	; 0x1e2 <SPI_write+0x2>
 1e6:	08 95       	ret

000001e8 <SPI_read>:
 1e8:	8f ef       	ldi	r24, 0xFF	; 255
 1ea:	8f b9       	out	0x0f, r24	; 15
 1ec:	77 9b       	sbis	0x0e, 7	; 14
 1ee:	fe cf       	rjmp	.-4      	; 0x1ec <SPI_read+0x4>
 1f0:	8f b1       	in	r24, 0x0f	; 15
 1f2:	08 95       	ret

000001f4 <MCP_active>:
 1f4:	88 b3       	in	r24, 0x18	; 24
 1f6:	8f 7e       	andi	r24, 0xEF	; 239
 1f8:	88 bb       	out	0x18, r24	; 24
 1fa:	08 95       	ret

000001fc <MCP_deactive>:
 1fc:	88 b3       	in	r24, 0x18	; 24
 1fe:	80 61       	ori	r24, 0x10	; 16
 200:	88 bb       	out	0x18, r24	; 24
 202:	08 95       	ret

00000204 <MCP_read>:
 204:	cf 93       	push	r28
 206:	c8 2f       	mov	r28, r24
 208:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <MCP_active>
 20c:	83 e0       	ldi	r24, 0x03	; 3
 20e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 212:	8c 2f       	mov	r24, r28
 214:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 218:	0e 94 f4 00 	call	0x1e8	; 0x1e8 <SPI_read>
 21c:	c8 2f       	mov	r28, r24
 21e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <MCP_deactive>
 222:	8c 2f       	mov	r24, r28
 224:	cf 91       	pop	r28
 226:	08 95       	ret

00000228 <MCP_write>:
 228:	cf 93       	push	r28
 22a:	df 93       	push	r29
 22c:	d8 2f       	mov	r29, r24
 22e:	c6 2f       	mov	r28, r22
 230:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <MCP_active>
 234:	82 e0       	ldi	r24, 0x02	; 2
 236:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 23a:	8d 2f       	mov	r24, r29
 23c:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 240:	8c 2f       	mov	r24, r28
 242:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 246:	0e 94 fe 00 	call	0x1fc	; 0x1fc <MCP_deactive>
 24a:	df 91       	pop	r29
 24c:	cf 91       	pop	r28
 24e:	08 95       	ret

00000250 <MCP_bitmod>:
 250:	1f 93       	push	r17
 252:	cf 93       	push	r28
 254:	df 93       	push	r29
 256:	18 2f       	mov	r17, r24
 258:	d6 2f       	mov	r29, r22
 25a:	c4 2f       	mov	r28, r20
 25c:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <MCP_active>
 260:	85 e0       	ldi	r24, 0x05	; 5
 262:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 266:	81 2f       	mov	r24, r17
 268:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 26c:	8d 2f       	mov	r24, r29
 26e:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 272:	8c 2f       	mov	r24, r28
 274:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 278:	0e 94 fe 00 	call	0x1fc	; 0x1fc <MCP_deactive>
 27c:	df 91       	pop	r29
 27e:	cf 91       	pop	r28
 280:	1f 91       	pop	r17
 282:	08 95       	ret

00000284 <MCP_reset>:
 284:	0e 94 fa 00 	call	0x1f4	; 0x1f4 <MCP_active>
 288:	80 ec       	ldi	r24, 0xC0	; 192
 28a:	0e 94 f0 00 	call	0x1e0	; 0x1e0 <SPI_write>
 28e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <MCP_deactive>
 292:	08 95       	ret

00000294 <CAN_Init>:
 294:	0e 94 42 01 	call	0x284	; 0x284 <MCP_reset>
 298:	6f ef       	ldi	r22, 0xFF	; 255
 29a:	8a e2       	ldi	r24, 0x2A	; 42
 29c:	0e 94 14 01 	call	0x228	; 0x228 <MCP_write>
 2a0:	6f e3       	ldi	r22, 0x3F	; 63
 2a2:	89 e2       	ldi	r24, 0x29	; 41
 2a4:	0e 94 14 01 	call	0x228	; 0x228 <MCP_write>
 2a8:	60 e0       	ldi	r22, 0x00	; 0
 2aa:	8f e0       	ldi	r24, 0x0F	; 15
 2ac:	0e 94 14 01 	call	0x228	; 0x228 <MCP_write>
 2b0:	41 e0       	ldi	r20, 0x01	; 1
 2b2:	61 e0       	ldi	r22, 0x01	; 1
 2b4:	8b e2       	ldi	r24, 0x2B	; 43
 2b6:	0e 94 28 01 	call	0x250	; 0x250 <MCP_bitmod>
 2ba:	4f ef       	ldi	r20, 0xFF	; 255
 2bc:	60 e6       	ldi	r22, 0x60	; 96
 2be:	80 e6       	ldi	r24, 0x60	; 96
 2c0:	0e 94 28 01 	call	0x250	; 0x250 <MCP_bitmod>
 2c4:	08 95       	ret

000002c6 <CAN_send>:
 2c6:	ef 92       	push	r14
 2c8:	ff 92       	push	r15
 2ca:	0f 93       	push	r16
 2cc:	1f 93       	push	r17
 2ce:	cf 93       	push	r28
 2d0:	df 93       	push	r29
 2d2:	cd b7       	in	r28, 0x3d	; 61
 2d4:	de b7       	in	r29, 0x3e	; 62
 2d6:	2c 97       	sbiw	r28, 0x0c	; 12
 2d8:	0f b6       	in	r0, 0x3f	; 63
 2da:	f8 94       	cli
 2dc:	de bf       	out	0x3e, r29	; 62
 2de:	0f be       	out	0x3f, r0	; 63
 2e0:	cd bf       	out	0x3d, r28	; 61
 2e2:	e9 82       	std	Y+1, r14	; 0x01
 2e4:	fa 82       	std	Y+2, r15	; 0x02
 2e6:	0b 83       	std	Y+3, r16	; 0x03
 2e8:	1c 83       	std	Y+4, r17	; 0x04
 2ea:	2d 83       	std	Y+5, r18	; 0x05
 2ec:	3e 83       	std	Y+6, r19	; 0x06
 2ee:	4f 83       	std	Y+7, r20	; 0x07
 2f0:	58 87       	std	Y+8, r21	; 0x08
 2f2:	69 87       	std	Y+9, r22	; 0x09
 2f4:	7a 87       	std	Y+10, r23	; 0x0a
 2f6:	8b 87       	std	Y+11, r24	; 0x0b
 2f8:	9c 87       	std	Y+12, r25	; 0x0c
 2fa:	09 81       	ldd	r16, Y+1	; 0x01
 2fc:	1a 81       	ldd	r17, Y+2	; 0x02
 2fe:	b8 01       	movw	r22, r16
 300:	76 95       	lsr	r23
 302:	67 95       	ror	r22
 304:	76 95       	lsr	r23
 306:	67 95       	ror	r22
 308:	76 95       	lsr	r23
 30a:	67 95       	ror	r22
 30c:	81 e3       	ldi	r24, 0x31	; 49
 30e:	0e 94 14 01 	call	0x228	; 0x228 <MCP_write>
 312:	60 2f       	mov	r22, r16
 314:	62 95       	swap	r22
 316:	66 0f       	add	r22, r22
 318:	60 7e       	andi	r22, 0xE0	; 224
 31a:	82 e3       	ldi	r24, 0x32	; 50
 31c:	0e 94 14 01 	call	0x228	; 0x228 <MCP_write>
 320:	fc 84       	ldd	r15, Y+12	; 0x0c
 322:	4f 2d       	mov	r20, r15
 324:	6f e0       	ldi	r22, 0x0F	; 15
 326:	85 e3       	ldi	r24, 0x35	; 53
 328:	0e 94 28 01 	call	0x250	; 0x250 <MCP_bitmod>
 32c:	00 e0       	ldi	r16, 0x00	; 0
 32e:	10 e0       	ldi	r17, 0x00	; 0
 330:	0d c0       	rjmp	.+26     	; 0x34c <CAN_send+0x86>
 332:	e3 e0       	ldi	r30, 0x03	; 3
 334:	f0 e0       	ldi	r31, 0x00	; 0
 336:	ec 0f       	add	r30, r28
 338:	fd 1f       	adc	r31, r29
 33a:	e0 0f       	add	r30, r16
 33c:	f1 1f       	adc	r31, r17
 33e:	60 81       	ld	r22, Z
 340:	86 e3       	ldi	r24, 0x36	; 54
 342:	80 0f       	add	r24, r16
 344:	0e 94 14 01 	call	0x228	; 0x228 <MCP_write>
 348:	0f 5f       	subi	r16, 0xFF	; 255
 34a:	1f 4f       	sbci	r17, 0xFF	; 255
 34c:	8f 2d       	mov	r24, r15
 34e:	90 e0       	ldi	r25, 0x00	; 0
 350:	08 17       	cp	r16, r24
 352:	19 07       	cpc	r17, r25
 354:	74 f3       	brlt	.-36     	; 0x332 <CAN_send+0x6c>
 356:	4f ef       	ldi	r20, 0xFF	; 255
 358:	68 e0       	ldi	r22, 0x08	; 8
 35a:	80 e3       	ldi	r24, 0x30	; 48
 35c:	0e 94 28 01 	call	0x250	; 0x250 <MCP_bitmod>
 360:	2c 96       	adiw	r28, 0x0c	; 12
 362:	0f b6       	in	r0, 0x3f	; 63
 364:	f8 94       	cli
 366:	de bf       	out	0x3e, r29	; 62
 368:	0f be       	out	0x3f, r0	; 63
 36a:	cd bf       	out	0x3d, r28	; 61
 36c:	df 91       	pop	r29
 36e:	cf 91       	pop	r28
 370:	1f 91       	pop	r17
 372:	0f 91       	pop	r16
 374:	ff 90       	pop	r15
 376:	ef 90       	pop	r14
 378:	08 95       	ret

0000037a <CAN_receive>:
 37a:	ef 92       	push	r14
 37c:	ff 92       	push	r15
 37e:	1f 93       	push	r17
 380:	cf 93       	push	r28
 382:	df 93       	push	r29
 384:	7c 01       	movw	r14, r24
 386:	81 e6       	ldi	r24, 0x61	; 97
 388:	0e 94 02 01 	call	0x204	; 0x204 <MCP_read>
 38c:	c8 2f       	mov	r28, r24
 38e:	82 e6       	ldi	r24, 0x62	; 98
 390:	0e 94 02 01 	call	0x204	; 0x204 <MCP_read>
 394:	2c 2f       	mov	r18, r28
 396:	30 e0       	ldi	r19, 0x00	; 0
 398:	32 2f       	mov	r19, r18
 39a:	22 27       	eor	r18, r18
 39c:	28 2b       	or	r18, r24
 39e:	35 95       	asr	r19
 3a0:	27 95       	ror	r18
 3a2:	35 95       	asr	r19
 3a4:	27 95       	ror	r18
 3a6:	35 95       	asr	r19
 3a8:	27 95       	ror	r18
 3aa:	35 95       	asr	r19
 3ac:	27 95       	ror	r18
 3ae:	35 95       	asr	r19
 3b0:	27 95       	ror	r18
 3b2:	f7 01       	movw	r30, r14
 3b4:	31 83       	std	Z+1, r19	; 0x01
 3b6:	20 83       	st	Z, r18
 3b8:	85 e6       	ldi	r24, 0x65	; 101
 3ba:	0e 94 02 01 	call	0x204	; 0x204 <MCP_read>
 3be:	18 2f       	mov	r17, r24
 3c0:	1f 70       	andi	r17, 0x0F	; 15
 3c2:	19 30       	cpi	r17, 0x09	; 9
 3c4:	08 f0       	brcs	.+2      	; 0x3c8 <CAN_receive+0x4e>
 3c6:	18 e0       	ldi	r17, 0x08	; 8
 3c8:	f7 01       	movw	r30, r14
 3ca:	13 87       	std	Z+11, r17	; 0x0b
 3cc:	c0 e0       	ldi	r28, 0x00	; 0
 3ce:	d0 e0       	ldi	r29, 0x00	; 0
 3d0:	09 c0       	rjmp	.+18     	; 0x3e4 <CAN_receive+0x6a>
 3d2:	8c 2f       	mov	r24, r28
 3d4:	8a 59       	subi	r24, 0x9A	; 154
 3d6:	0e 94 02 01 	call	0x204	; 0x204 <MCP_read>
 3da:	f7 01       	movw	r30, r14
 3dc:	ec 0f       	add	r30, r28
 3de:	fd 1f       	adc	r31, r29
 3e0:	82 83       	std	Z+2, r24	; 0x02
 3e2:	21 96       	adiw	r28, 0x01	; 1
 3e4:	81 2f       	mov	r24, r17
 3e6:	90 e0       	ldi	r25, 0x00	; 0
 3e8:	c8 17       	cp	r28, r24
 3ea:	d9 07       	cpc	r29, r25
 3ec:	94 f3       	brlt	.-28     	; 0x3d2 <CAN_receive+0x58>
 3ee:	60 e0       	ldi	r22, 0x00	; 0
 3f0:	8c e2       	ldi	r24, 0x2C	; 44
 3f2:	0e 94 14 01 	call	0x228	; 0x228 <MCP_write>
 3f6:	c7 01       	movw	r24, r14
 3f8:	df 91       	pop	r29
 3fa:	cf 91       	pop	r28
 3fc:	1f 91       	pop	r17
 3fe:	ff 90       	pop	r15
 400:	ef 90       	pop	r14
 402:	08 95       	ret

00000404 <__vector_3>:
 404:	1f 92       	push	r1
 406:	0f 92       	push	r0
 408:	0f b6       	in	r0, 0x3f	; 63
 40a:	0f 92       	push	r0
 40c:	11 24       	eor	r1, r1
 40e:	8f 93       	push	r24
 410:	81 e0       	ldi	r24, 0x01	; 1
 412:	80 93 6e 02 	sts	0x026E, r24	; 0x80026e <__data_end>
 416:	8f 91       	pop	r24
 418:	0f 90       	pop	r0
 41a:	0f be       	out	0x3f, r0	; 63
 41c:	0f 90       	pop	r0
 41e:	1f 90       	pop	r1
 420:	18 95       	reti

00000422 <USART_Init>:
 422:	90 bd       	out	0x20, r25	; 32
 424:	89 b9       	out	0x09, r24	; 9
 426:	88 e1       	ldi	r24, 0x18	; 24
 428:	8a b9       	out	0x0a, r24	; 10
 42a:	8e ea       	ldi	r24, 0xAE	; 174
 42c:	80 bd       	out	0x20, r24	; 32
 42e:	08 95       	ret

00000430 <SRAM_Init>:

void SRAM_Init(void) {
	// Enable external memory interface
	MCUCR |= (1 << SRE);
 430:	85 b7       	in	r24, 0x35	; 53
 432:	80 68       	ori	r24, 0x80	; 128
 434:	85 bf       	out	0x35, r24	; 53
	// Mask PC7-PC4
	SFIOR |= (1 << XMM2);
 436:	80 b7       	in	r24, 0x30	; 48
 438:	80 62       	ori	r24, 0x20	; 32
 43a:	80 bf       	out	0x30, r24	; 48
 43c:	08 95       	ret

0000043e <CLK_Init>:
}

void CLK_Init(int TOP) {
 43e:	9c 01       	movw	r18, r24
	// Set PD4 as output
	DDRD |= (1 << DDD4);
 440:	91 b3       	in	r25, 0x11	; 17
 442:	90 61       	ori	r25, 0x10	; 16
 444:	91 bb       	out	0x11, r25	; 17
	
	// Compare output mode: Toggle compare match
	TCCR3A |= (1 << COM3A0); 
 446:	eb e8       	ldi	r30, 0x8B	; 139
 448:	f0 e0       	ldi	r31, 0x00	; 0
 44a:	90 81       	ld	r25, Z
 44c:	90 64       	ori	r25, 0x40	; 64
 44e:	90 83       	st	Z, r25
	
	// Mode 4, CTC
	TCCR3B |= (1 << WGM32);
 450:	ea e8       	ldi	r30, 0x8A	; 138
 452:	f0 e0       	ldi	r31, 0x00	; 0
 454:	90 81       	ld	r25, Z
 456:	98 60       	ori	r25, 0x08	; 8
 458:	90 83       	st	Z, r25
	
	// Set counter TOP value
	OCR3A = TOP;
 45a:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
 45e:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
	
	// Prescaler 1
	TCCR3B |= (1 << CS30);
 462:	80 81       	ld	r24, Z
 464:	81 60       	ori	r24, 0x01	; 1
 466:	80 83       	st	Z, r24
 468:	08 95       	ret

0000046a <main>:
	new_message = 1;
}


int main(void)
{
 46a:	cf 93       	push	r28
 46c:	df 93       	push	r29
 46e:	cd b7       	in	r28, 0x3d	; 61
 470:	de b7       	in	r29, 0x3e	; 62
 472:	a4 97       	sbiw	r28, 0x24	; 36
 474:	0f b6       	in	r0, 0x3f	; 63
 476:	f8 94       	cli
 478:	de bf       	out	0x3e, r29	; 62
 47a:	0f be       	out	0x3f, r0	; 63
 47c:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0xFF;
 47e:	8f ef       	ldi	r24, 0xFF	; 255
 480:	8a bb       	out	0x1a, r24	; 26
	DDRE |= (0x02);
 482:	86 b1       	in	r24, 0x06	; 6
 484:	82 60       	ori	r24, 0x02	; 2
 486:	86 b9       	out	0x06, r24	; 6
	
	// Right and left button inputs
	DDRD &= !( (1 << PD2) | (1 << PD3) );
 488:	81 b3       	in	r24, 0x11	; 17
 48a:	11 ba       	out	0x11, r1	; 17
	// Joystick button
	DDRE &= !(1 << PE2);
 48c:	86 b1       	in	r24, 0x06	; 6
 48e:	16 b8       	out	0x06, r1	; 6
	
	// Set interrupt pin as input
	DDRE &= ~(1 << PE0);
 490:	86 b1       	in	r24, 0x06	; 6
 492:	8e 7f       	andi	r24, 0xFE	; 254
 494:	86 b9       	out	0x06, r24	; 6
	// Disable interrupt, clear Interrupt Enable in GICR
	GICR &= 0b00000111;
 496:	8b b7       	in	r24, 0x3b	; 59
 498:	87 70       	andi	r24, 0x07	; 7
 49a:	8b bf       	out	0x3b, r24	; 59
	// Set ISC2 bit in EMCUCR
	EMCUCR &= ~(1 << ISC2); // 1 for rising edge, 0 for falling edge
 49c:	86 b7       	in	r24, 0x36	; 54
 49e:	8e 7f       	andi	r24, 0xFE	; 254
 4a0:	86 bf       	out	0x36, r24	; 54
	// Clear INT2 flag, write 1 to INTF2 in GIFR
	GIFR |= (1 << INTF2);
 4a2:	8a b7       	in	r24, 0x3a	; 58
 4a4:	80 62       	ori	r24, 0x20	; 32
 4a6:	8a bf       	out	0x3a, r24	; 58
	// Enable interrupt, set Interrupt Enable in GICR
	GICR |= (1 << INT2);
 4a8:	8b b7       	in	r24, 0x3b	; 59
 4aa:	80 62       	ori	r24, 0x20	; 32
 4ac:	8b bf       	out	0x3b, r24	; 59
	// Enable I-bit in SREG to enable interrupts
	sei();
 4ae:	78 94       	sei
	
	USART_Init(MYUBRR);
 4b0:	8f e1       	ldi	r24, 0x1F	; 31
 4b2:	90 e0       	ldi	r25, 0x00	; 0
 4b4:	0e 94 11 02 	call	0x422	; 0x422 <USART_Init>
	CLK_Init(0);
 4b8:	80 e0       	ldi	r24, 0x00	; 0
 4ba:	90 e0       	ldi	r25, 0x00	; 0
 4bc:	0e 94 1f 02 	call	0x43e	; 0x43e <CLK_Init>
	SRAM_Init();
 4c0:	0e 94 18 02 	call	0x430	; 0x430 <SRAM_Init>
	OLED_Init();
 4c4:	0e 94 a3 00 	call	0x146	; 0x146 <OLED_Init>
	SPI_Init();
 4c8:	0e 94 e6 00 	call	0x1cc	; 0x1cc <SPI_Init>
	CAN_Init();
 4cc:	0e 94 4a 01 	call	0x294	; 0x294 <CAN_Init>
	
	// Setup for printf
	stdout = &uart_stdio;
 4d0:	ef e6       	ldi	r30, 0x6F	; 111
 4d2:	f2 e0       	ldi	r31, 0x02	; 2
 4d4:	80 e0       	ldi	r24, 0x00	; 0
 4d6:	91 e0       	ldi	r25, 0x01	; 1
 4d8:	93 83       	std	Z+3, r25	; 0x03
 4da:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_stdio;
 4dc:	91 83       	std	Z+1, r25	; 0x01
 4de:	80 83       	st	Z, r24
	char min_pos = 0;
	char max_pos = 0;
	char screen = 0;
	char prev_screen = 1;
	
	OLED_reset();	
 4e0:	0e 94 92 00 	call	0x124	; 0x124 <OLED_reset>
	
	message msg, msg_received;
	msg.ID = 42;
 4e4:	8a e2       	ldi	r24, 0x2A	; 42
 4e6:	90 e0       	ldi	r25, 0x00	; 0
 4e8:	9a 83       	std	Y+2, r25	; 0x02
 4ea:	89 83       	std	Y+1, r24	; 0x01
	msg.length = 8;
 4ec:	88 e0       	ldi	r24, 0x08	; 8
 4ee:	8c 87       	std	Y+12, r24	; 0x0c
	strcpy(msg.data, "TestTest");
 4f0:	89 e0       	ldi	r24, 0x09	; 9
 4f2:	e4 e6       	ldi	r30, 0x64	; 100
 4f4:	f2 e0       	ldi	r31, 0x02	; 2
 4f6:	de 01       	movw	r26, r28
 4f8:	13 96       	adiw	r26, 0x03	; 3
 4fa:	01 90       	ld	r0, Z+
 4fc:	0d 92       	st	X+, r0
 4fe:	8a 95       	dec	r24
 500:	e1 f7       	brne	.-8      	; 0x4fa <main+0x90>
	
	
	
	while (1) {
		
		received_char = USART_Receive();
 502:	0e 94 5b 00 	call	0xb6	; 0xb6 <USART_Receive>
 506:	d8 2e       	mov	r13, r24
		
		if (received_char == 's') {
 508:	83 e7       	ldi	r24, 0x73	; 115
 50a:	d8 12       	cpse	r13, r24
 50c:	12 c0       	rjmp	.+36     	; 0x532 <__stack+0x33>
			CAN_send(msg);
 50e:	e9 80       	ldd	r14, Y+1	; 0x01
 510:	fa 80       	ldd	r15, Y+2	; 0x02
 512:	0b 81       	ldd	r16, Y+3	; 0x03
 514:	1c 81       	ldd	r17, Y+4	; 0x04
 516:	2d 81       	ldd	r18, Y+5	; 0x05
 518:	3e 81       	ldd	r19, Y+6	; 0x06
 51a:	4f 81       	ldd	r20, Y+7	; 0x07
 51c:	58 85       	ldd	r21, Y+8	; 0x08
 51e:	69 85       	ldd	r22, Y+9	; 0x09
 520:	7a 85       	ldd	r23, Y+10	; 0x0a
 522:	8b 85       	ldd	r24, Y+11	; 0x0b
 524:	9c 85       	ldd	r25, Y+12	; 0x0c
 526:	0e 94 63 01 	call	0x2c6	; 0x2c6 <CAN_send>
			printf("Message sent\n");
 52a:	86 e3       	ldi	r24, 0x36	; 54
 52c:	92 e0       	ldi	r25, 0x02	; 2
 52e:	0e 94 dc 02 	call	0x5b8	; 0x5b8 <puts>
		}
		
		if (received_char == 'r' || new_message) {
 532:	92 e7       	ldi	r25, 0x72	; 114
 534:	d9 16       	cp	r13, r25
 536:	21 f0       	breq	.+8      	; 0x540 <__stack+0x41>
 538:	80 91 6e 02 	lds	r24, 0x026E	; 0x80026e <__data_end>
 53c:	88 23       	and	r24, r24
 53e:	09 f3       	breq	.-62     	; 0x502 <__stack+0x3>
			msg_received = CAN_receive();
 540:	ce 01       	movw	r24, r28
 542:	49 96       	adiw	r24, 0x19	; 25
 544:	0e 94 bd 01 	call	0x37a	; 0x37a <CAN_receive>
 548:	8c e0       	ldi	r24, 0x0C	; 12
 54a:	fe 01       	movw	r30, r28
 54c:	79 96       	adiw	r30, 0x19	; 25
 54e:	de 01       	movw	r26, r28
 550:	1d 96       	adiw	r26, 0x0d	; 13
 552:	01 90       	ld	r0, Z+
 554:	0d 92       	st	X+, r0
 556:	8a 95       	dec	r24
 558:	e1 f7       	brne	.-8      	; 0x552 <__stack+0x53>
			printf("ID: %d, length: %d, message: %s\n", msg_received.ID, msg_received.length, msg_received.data);
 55a:	28 8d       	ldd	r18, Y+24	; 0x18
 55c:	ce 01       	movw	r24, r28
 55e:	0f 96       	adiw	r24, 0x0f	; 15
 560:	9f 93       	push	r25
 562:	8f 93       	push	r24
 564:	1f 92       	push	r1
 566:	2f 93       	push	r18
 568:	8e 85       	ldd	r24, Y+14	; 0x0e
 56a:	8f 93       	push	r24
 56c:	8d 85       	ldd	r24, Y+13	; 0x0d
 56e:	8f 93       	push	r24
 570:	83 e4       	ldi	r24, 0x43	; 67
 572:	92 e0       	ldi	r25, 0x02	; 2
 574:	9f 93       	push	r25
 576:	8f 93       	push	r24
 578:	0e 94 c6 02 	call	0x58c	; 0x58c <printf>
			new_message = 0;
 57c:	10 92 6e 02 	sts	0x026E, r1	; 0x80026e <__data_end>
 580:	0f b6       	in	r0, 0x3f	; 63
 582:	f8 94       	cli
 584:	de bf       	out	0x3e, r29	; 62
 586:	0f be       	out	0x3f, r0	; 63
 588:	cd bf       	out	0x3d, r28	; 61
 58a:	bb cf       	rjmp	.-138    	; 0x502 <__stack+0x3>

0000058c <printf>:
 58c:	a0 e0       	ldi	r26, 0x00	; 0
 58e:	b0 e0       	ldi	r27, 0x00	; 0
 590:	ec ec       	ldi	r30, 0xCC	; 204
 592:	f2 e0       	ldi	r31, 0x02	; 2
 594:	0c 94 ad 05 	jmp	0xb5a	; 0xb5a <__prologue_saves__+0x20>
 598:	ae 01       	movw	r20, r28
 59a:	4b 5f       	subi	r20, 0xFB	; 251
 59c:	5f 4f       	sbci	r21, 0xFF	; 255
 59e:	fa 01       	movw	r30, r20
 5a0:	61 91       	ld	r22, Z+
 5a2:	71 91       	ld	r23, Z+
 5a4:	af 01       	movw	r20, r30
 5a6:	80 91 71 02 	lds	r24, 0x0271	; 0x800271 <__iob+0x2>
 5aa:	90 91 72 02 	lds	r25, 0x0272	; 0x800272 <__iob+0x3>
 5ae:	0e 94 0c 03 	call	0x618	; 0x618 <vfprintf>
 5b2:	e2 e0       	ldi	r30, 0x02	; 2
 5b4:	0c 94 c9 05 	jmp	0xb92	; 0xb92 <__epilogue_restores__+0x20>

000005b8 <puts>:
 5b8:	0f 93       	push	r16
 5ba:	1f 93       	push	r17
 5bc:	cf 93       	push	r28
 5be:	df 93       	push	r29
 5c0:	e0 91 71 02 	lds	r30, 0x0271	; 0x800271 <__iob+0x2>
 5c4:	f0 91 72 02 	lds	r31, 0x0272	; 0x800272 <__iob+0x3>
 5c8:	23 81       	ldd	r18, Z+3	; 0x03
 5ca:	21 ff       	sbrs	r18, 1
 5cc:	1b c0       	rjmp	.+54     	; 0x604 <puts+0x4c>
 5ce:	8c 01       	movw	r16, r24
 5d0:	d0 e0       	ldi	r29, 0x00	; 0
 5d2:	c0 e0       	ldi	r28, 0x00	; 0
 5d4:	f8 01       	movw	r30, r16
 5d6:	81 91       	ld	r24, Z+
 5d8:	8f 01       	movw	r16, r30
 5da:	60 91 71 02 	lds	r22, 0x0271	; 0x800271 <__iob+0x2>
 5de:	70 91 72 02 	lds	r23, 0x0272	; 0x800272 <__iob+0x3>
 5e2:	db 01       	movw	r26, r22
 5e4:	18 96       	adiw	r26, 0x08	; 8
 5e6:	ed 91       	ld	r30, X+
 5e8:	fc 91       	ld	r31, X
 5ea:	19 97       	sbiw	r26, 0x09	; 9
 5ec:	88 23       	and	r24, r24
 5ee:	31 f0       	breq	.+12     	; 0x5fc <puts+0x44>
 5f0:	09 95       	icall
 5f2:	89 2b       	or	r24, r25
 5f4:	79 f3       	breq	.-34     	; 0x5d4 <puts+0x1c>
 5f6:	df ef       	ldi	r29, 0xFF	; 255
 5f8:	cf ef       	ldi	r28, 0xFF	; 255
 5fa:	ec cf       	rjmp	.-40     	; 0x5d4 <puts+0x1c>
 5fc:	8a e0       	ldi	r24, 0x0A	; 10
 5fe:	09 95       	icall
 600:	89 2b       	or	r24, r25
 602:	19 f0       	breq	.+6      	; 0x60a <puts+0x52>
 604:	8f ef       	ldi	r24, 0xFF	; 255
 606:	9f ef       	ldi	r25, 0xFF	; 255
 608:	02 c0       	rjmp	.+4      	; 0x60e <puts+0x56>
 60a:	8d 2f       	mov	r24, r29
 60c:	9c 2f       	mov	r25, r28
 60e:	df 91       	pop	r29
 610:	cf 91       	pop	r28
 612:	1f 91       	pop	r17
 614:	0f 91       	pop	r16
 616:	08 95       	ret

00000618 <vfprintf>:
 618:	ab e0       	ldi	r26, 0x0B	; 11
 61a:	b0 e0       	ldi	r27, 0x00	; 0
 61c:	e2 e1       	ldi	r30, 0x12	; 18
 61e:	f3 e0       	ldi	r31, 0x03	; 3
 620:	0c 94 9d 05 	jmp	0xb3a	; 0xb3a <__prologue_saves__>
 624:	6c 01       	movw	r12, r24
 626:	7b 01       	movw	r14, r22
 628:	8a 01       	movw	r16, r20
 62a:	fc 01       	movw	r30, r24
 62c:	17 82       	std	Z+7, r1	; 0x07
 62e:	16 82       	std	Z+6, r1	; 0x06
 630:	83 81       	ldd	r24, Z+3	; 0x03
 632:	81 ff       	sbrs	r24, 1
 634:	cc c1       	rjmp	.+920    	; 0x9ce <vfprintf+0x3b6>
 636:	ce 01       	movw	r24, r28
 638:	01 96       	adiw	r24, 0x01	; 1
 63a:	3c 01       	movw	r6, r24
 63c:	f6 01       	movw	r30, r12
 63e:	93 81       	ldd	r25, Z+3	; 0x03
 640:	f7 01       	movw	r30, r14
 642:	93 fd       	sbrc	r25, 3
 644:	85 91       	lpm	r24, Z+
 646:	93 ff       	sbrs	r25, 3
 648:	81 91       	ld	r24, Z+
 64a:	7f 01       	movw	r14, r30
 64c:	88 23       	and	r24, r24
 64e:	09 f4       	brne	.+2      	; 0x652 <vfprintf+0x3a>
 650:	ba c1       	rjmp	.+884    	; 0x9c6 <vfprintf+0x3ae>
 652:	85 32       	cpi	r24, 0x25	; 37
 654:	39 f4       	brne	.+14     	; 0x664 <vfprintf+0x4c>
 656:	93 fd       	sbrc	r25, 3
 658:	85 91       	lpm	r24, Z+
 65a:	93 ff       	sbrs	r25, 3
 65c:	81 91       	ld	r24, Z+
 65e:	7f 01       	movw	r14, r30
 660:	85 32       	cpi	r24, 0x25	; 37
 662:	29 f4       	brne	.+10     	; 0x66e <vfprintf+0x56>
 664:	b6 01       	movw	r22, r12
 666:	90 e0       	ldi	r25, 0x00	; 0
 668:	0e 94 03 05 	call	0xa06	; 0xa06 <fputc>
 66c:	e7 cf       	rjmp	.-50     	; 0x63c <vfprintf+0x24>
 66e:	91 2c       	mov	r9, r1
 670:	21 2c       	mov	r2, r1
 672:	31 2c       	mov	r3, r1
 674:	ff e1       	ldi	r31, 0x1F	; 31
 676:	f3 15       	cp	r31, r3
 678:	d8 f0       	brcs	.+54     	; 0x6b0 <vfprintf+0x98>
 67a:	8b 32       	cpi	r24, 0x2B	; 43
 67c:	79 f0       	breq	.+30     	; 0x69c <vfprintf+0x84>
 67e:	38 f4       	brcc	.+14     	; 0x68e <vfprintf+0x76>
 680:	80 32       	cpi	r24, 0x20	; 32
 682:	79 f0       	breq	.+30     	; 0x6a2 <vfprintf+0x8a>
 684:	83 32       	cpi	r24, 0x23	; 35
 686:	a1 f4       	brne	.+40     	; 0x6b0 <vfprintf+0x98>
 688:	23 2d       	mov	r18, r3
 68a:	20 61       	ori	r18, 0x10	; 16
 68c:	1d c0       	rjmp	.+58     	; 0x6c8 <vfprintf+0xb0>
 68e:	8d 32       	cpi	r24, 0x2D	; 45
 690:	61 f0       	breq	.+24     	; 0x6aa <vfprintf+0x92>
 692:	80 33       	cpi	r24, 0x30	; 48
 694:	69 f4       	brne	.+26     	; 0x6b0 <vfprintf+0x98>
 696:	23 2d       	mov	r18, r3
 698:	21 60       	ori	r18, 0x01	; 1
 69a:	16 c0       	rjmp	.+44     	; 0x6c8 <vfprintf+0xb0>
 69c:	83 2d       	mov	r24, r3
 69e:	82 60       	ori	r24, 0x02	; 2
 6a0:	38 2e       	mov	r3, r24
 6a2:	e3 2d       	mov	r30, r3
 6a4:	e4 60       	ori	r30, 0x04	; 4
 6a6:	3e 2e       	mov	r3, r30
 6a8:	2a c0       	rjmp	.+84     	; 0x6fe <vfprintf+0xe6>
 6aa:	f3 2d       	mov	r31, r3
 6ac:	f8 60       	ori	r31, 0x08	; 8
 6ae:	1d c0       	rjmp	.+58     	; 0x6ea <vfprintf+0xd2>
 6b0:	37 fc       	sbrc	r3, 7
 6b2:	2d c0       	rjmp	.+90     	; 0x70e <vfprintf+0xf6>
 6b4:	20 ed       	ldi	r18, 0xD0	; 208
 6b6:	28 0f       	add	r18, r24
 6b8:	2a 30       	cpi	r18, 0x0A	; 10
 6ba:	40 f0       	brcs	.+16     	; 0x6cc <vfprintf+0xb4>
 6bc:	8e 32       	cpi	r24, 0x2E	; 46
 6be:	b9 f4       	brne	.+46     	; 0x6ee <vfprintf+0xd6>
 6c0:	36 fc       	sbrc	r3, 6
 6c2:	81 c1       	rjmp	.+770    	; 0x9c6 <vfprintf+0x3ae>
 6c4:	23 2d       	mov	r18, r3
 6c6:	20 64       	ori	r18, 0x40	; 64
 6c8:	32 2e       	mov	r3, r18
 6ca:	19 c0       	rjmp	.+50     	; 0x6fe <vfprintf+0xe6>
 6cc:	36 fe       	sbrs	r3, 6
 6ce:	06 c0       	rjmp	.+12     	; 0x6dc <vfprintf+0xc4>
 6d0:	8a e0       	ldi	r24, 0x0A	; 10
 6d2:	98 9e       	mul	r9, r24
 6d4:	20 0d       	add	r18, r0
 6d6:	11 24       	eor	r1, r1
 6d8:	92 2e       	mov	r9, r18
 6da:	11 c0       	rjmp	.+34     	; 0x6fe <vfprintf+0xe6>
 6dc:	ea e0       	ldi	r30, 0x0A	; 10
 6de:	2e 9e       	mul	r2, r30
 6e0:	20 0d       	add	r18, r0
 6e2:	11 24       	eor	r1, r1
 6e4:	22 2e       	mov	r2, r18
 6e6:	f3 2d       	mov	r31, r3
 6e8:	f0 62       	ori	r31, 0x20	; 32
 6ea:	3f 2e       	mov	r3, r31
 6ec:	08 c0       	rjmp	.+16     	; 0x6fe <vfprintf+0xe6>
 6ee:	8c 36       	cpi	r24, 0x6C	; 108
 6f0:	21 f4       	brne	.+8      	; 0x6fa <vfprintf+0xe2>
 6f2:	83 2d       	mov	r24, r3
 6f4:	80 68       	ori	r24, 0x80	; 128
 6f6:	38 2e       	mov	r3, r24
 6f8:	02 c0       	rjmp	.+4      	; 0x6fe <vfprintf+0xe6>
 6fa:	88 36       	cpi	r24, 0x68	; 104
 6fc:	41 f4       	brne	.+16     	; 0x70e <vfprintf+0xf6>
 6fe:	f7 01       	movw	r30, r14
 700:	93 fd       	sbrc	r25, 3
 702:	85 91       	lpm	r24, Z+
 704:	93 ff       	sbrs	r25, 3
 706:	81 91       	ld	r24, Z+
 708:	7f 01       	movw	r14, r30
 70a:	81 11       	cpse	r24, r1
 70c:	b3 cf       	rjmp	.-154    	; 0x674 <vfprintf+0x5c>
 70e:	98 2f       	mov	r25, r24
 710:	9f 7d       	andi	r25, 0xDF	; 223
 712:	95 54       	subi	r25, 0x45	; 69
 714:	93 30       	cpi	r25, 0x03	; 3
 716:	28 f4       	brcc	.+10     	; 0x722 <vfprintf+0x10a>
 718:	0c 5f       	subi	r16, 0xFC	; 252
 71a:	1f 4f       	sbci	r17, 0xFF	; 255
 71c:	9f e3       	ldi	r25, 0x3F	; 63
 71e:	99 83       	std	Y+1, r25	; 0x01
 720:	0d c0       	rjmp	.+26     	; 0x73c <vfprintf+0x124>
 722:	83 36       	cpi	r24, 0x63	; 99
 724:	31 f0       	breq	.+12     	; 0x732 <vfprintf+0x11a>
 726:	83 37       	cpi	r24, 0x73	; 115
 728:	71 f0       	breq	.+28     	; 0x746 <vfprintf+0x12e>
 72a:	83 35       	cpi	r24, 0x53	; 83
 72c:	09 f0       	breq	.+2      	; 0x730 <vfprintf+0x118>
 72e:	59 c0       	rjmp	.+178    	; 0x7e2 <vfprintf+0x1ca>
 730:	21 c0       	rjmp	.+66     	; 0x774 <vfprintf+0x15c>
 732:	f8 01       	movw	r30, r16
 734:	80 81       	ld	r24, Z
 736:	89 83       	std	Y+1, r24	; 0x01
 738:	0e 5f       	subi	r16, 0xFE	; 254
 73a:	1f 4f       	sbci	r17, 0xFF	; 255
 73c:	88 24       	eor	r8, r8
 73e:	83 94       	inc	r8
 740:	91 2c       	mov	r9, r1
 742:	53 01       	movw	r10, r6
 744:	13 c0       	rjmp	.+38     	; 0x76c <vfprintf+0x154>
 746:	28 01       	movw	r4, r16
 748:	f2 e0       	ldi	r31, 0x02	; 2
 74a:	4f 0e       	add	r4, r31
 74c:	51 1c       	adc	r5, r1
 74e:	f8 01       	movw	r30, r16
 750:	a0 80       	ld	r10, Z
 752:	b1 80       	ldd	r11, Z+1	; 0x01
 754:	36 fe       	sbrs	r3, 6
 756:	03 c0       	rjmp	.+6      	; 0x75e <vfprintf+0x146>
 758:	69 2d       	mov	r22, r9
 75a:	70 e0       	ldi	r23, 0x00	; 0
 75c:	02 c0       	rjmp	.+4      	; 0x762 <vfprintf+0x14a>
 75e:	6f ef       	ldi	r22, 0xFF	; 255
 760:	7f ef       	ldi	r23, 0xFF	; 255
 762:	c5 01       	movw	r24, r10
 764:	0e 94 f8 04 	call	0x9f0	; 0x9f0 <strnlen>
 768:	4c 01       	movw	r8, r24
 76a:	82 01       	movw	r16, r4
 76c:	f3 2d       	mov	r31, r3
 76e:	ff 77       	andi	r31, 0x7F	; 127
 770:	3f 2e       	mov	r3, r31
 772:	16 c0       	rjmp	.+44     	; 0x7a0 <vfprintf+0x188>
 774:	28 01       	movw	r4, r16
 776:	22 e0       	ldi	r18, 0x02	; 2
 778:	42 0e       	add	r4, r18
 77a:	51 1c       	adc	r5, r1
 77c:	f8 01       	movw	r30, r16
 77e:	a0 80       	ld	r10, Z
 780:	b1 80       	ldd	r11, Z+1	; 0x01
 782:	36 fe       	sbrs	r3, 6
 784:	03 c0       	rjmp	.+6      	; 0x78c <vfprintf+0x174>
 786:	69 2d       	mov	r22, r9
 788:	70 e0       	ldi	r23, 0x00	; 0
 78a:	02 c0       	rjmp	.+4      	; 0x790 <vfprintf+0x178>
 78c:	6f ef       	ldi	r22, 0xFF	; 255
 78e:	7f ef       	ldi	r23, 0xFF	; 255
 790:	c5 01       	movw	r24, r10
 792:	0e 94 ed 04 	call	0x9da	; 0x9da <strnlen_P>
 796:	4c 01       	movw	r8, r24
 798:	f3 2d       	mov	r31, r3
 79a:	f0 68       	ori	r31, 0x80	; 128
 79c:	3f 2e       	mov	r3, r31
 79e:	82 01       	movw	r16, r4
 7a0:	33 fc       	sbrc	r3, 3
 7a2:	1b c0       	rjmp	.+54     	; 0x7da <vfprintf+0x1c2>
 7a4:	82 2d       	mov	r24, r2
 7a6:	90 e0       	ldi	r25, 0x00	; 0
 7a8:	88 16       	cp	r8, r24
 7aa:	99 06       	cpc	r9, r25
 7ac:	b0 f4       	brcc	.+44     	; 0x7da <vfprintf+0x1c2>
 7ae:	b6 01       	movw	r22, r12
 7b0:	80 e2       	ldi	r24, 0x20	; 32
 7b2:	90 e0       	ldi	r25, 0x00	; 0
 7b4:	0e 94 03 05 	call	0xa06	; 0xa06 <fputc>
 7b8:	2a 94       	dec	r2
 7ba:	f4 cf       	rjmp	.-24     	; 0x7a4 <vfprintf+0x18c>
 7bc:	f5 01       	movw	r30, r10
 7be:	37 fc       	sbrc	r3, 7
 7c0:	85 91       	lpm	r24, Z+
 7c2:	37 fe       	sbrs	r3, 7
 7c4:	81 91       	ld	r24, Z+
 7c6:	5f 01       	movw	r10, r30
 7c8:	b6 01       	movw	r22, r12
 7ca:	90 e0       	ldi	r25, 0x00	; 0
 7cc:	0e 94 03 05 	call	0xa06	; 0xa06 <fputc>
 7d0:	21 10       	cpse	r2, r1
 7d2:	2a 94       	dec	r2
 7d4:	21 e0       	ldi	r18, 0x01	; 1
 7d6:	82 1a       	sub	r8, r18
 7d8:	91 08       	sbc	r9, r1
 7da:	81 14       	cp	r8, r1
 7dc:	91 04       	cpc	r9, r1
 7de:	71 f7       	brne	.-36     	; 0x7bc <vfprintf+0x1a4>
 7e0:	e8 c0       	rjmp	.+464    	; 0x9b2 <vfprintf+0x39a>
 7e2:	84 36       	cpi	r24, 0x64	; 100
 7e4:	11 f0       	breq	.+4      	; 0x7ea <vfprintf+0x1d2>
 7e6:	89 36       	cpi	r24, 0x69	; 105
 7e8:	41 f5       	brne	.+80     	; 0x83a <vfprintf+0x222>
 7ea:	f8 01       	movw	r30, r16
 7ec:	37 fe       	sbrs	r3, 7
 7ee:	07 c0       	rjmp	.+14     	; 0x7fe <vfprintf+0x1e6>
 7f0:	60 81       	ld	r22, Z
 7f2:	71 81       	ldd	r23, Z+1	; 0x01
 7f4:	82 81       	ldd	r24, Z+2	; 0x02
 7f6:	93 81       	ldd	r25, Z+3	; 0x03
 7f8:	0c 5f       	subi	r16, 0xFC	; 252
 7fa:	1f 4f       	sbci	r17, 0xFF	; 255
 7fc:	08 c0       	rjmp	.+16     	; 0x80e <vfprintf+0x1f6>
 7fe:	60 81       	ld	r22, Z
 800:	71 81       	ldd	r23, Z+1	; 0x01
 802:	07 2e       	mov	r0, r23
 804:	00 0c       	add	r0, r0
 806:	88 0b       	sbc	r24, r24
 808:	99 0b       	sbc	r25, r25
 80a:	0e 5f       	subi	r16, 0xFE	; 254
 80c:	1f 4f       	sbci	r17, 0xFF	; 255
 80e:	f3 2d       	mov	r31, r3
 810:	ff 76       	andi	r31, 0x6F	; 111
 812:	3f 2e       	mov	r3, r31
 814:	97 ff       	sbrs	r25, 7
 816:	09 c0       	rjmp	.+18     	; 0x82a <vfprintf+0x212>
 818:	90 95       	com	r25
 81a:	80 95       	com	r24
 81c:	70 95       	com	r23
 81e:	61 95       	neg	r22
 820:	7f 4f       	sbci	r23, 0xFF	; 255
 822:	8f 4f       	sbci	r24, 0xFF	; 255
 824:	9f 4f       	sbci	r25, 0xFF	; 255
 826:	f0 68       	ori	r31, 0x80	; 128
 828:	3f 2e       	mov	r3, r31
 82a:	2a e0       	ldi	r18, 0x0A	; 10
 82c:	30 e0       	ldi	r19, 0x00	; 0
 82e:	a3 01       	movw	r20, r6
 830:	0e 94 3f 05 	call	0xa7e	; 0xa7e <__ultoa_invert>
 834:	88 2e       	mov	r8, r24
 836:	86 18       	sub	r8, r6
 838:	45 c0       	rjmp	.+138    	; 0x8c4 <vfprintf+0x2ac>
 83a:	85 37       	cpi	r24, 0x75	; 117
 83c:	31 f4       	brne	.+12     	; 0x84a <vfprintf+0x232>
 83e:	23 2d       	mov	r18, r3
 840:	2f 7e       	andi	r18, 0xEF	; 239
 842:	b2 2e       	mov	r11, r18
 844:	2a e0       	ldi	r18, 0x0A	; 10
 846:	30 e0       	ldi	r19, 0x00	; 0
 848:	25 c0       	rjmp	.+74     	; 0x894 <vfprintf+0x27c>
 84a:	93 2d       	mov	r25, r3
 84c:	99 7f       	andi	r25, 0xF9	; 249
 84e:	b9 2e       	mov	r11, r25
 850:	8f 36       	cpi	r24, 0x6F	; 111
 852:	c1 f0       	breq	.+48     	; 0x884 <vfprintf+0x26c>
 854:	18 f4       	brcc	.+6      	; 0x85c <vfprintf+0x244>
 856:	88 35       	cpi	r24, 0x58	; 88
 858:	79 f0       	breq	.+30     	; 0x878 <vfprintf+0x260>
 85a:	b5 c0       	rjmp	.+362    	; 0x9c6 <vfprintf+0x3ae>
 85c:	80 37       	cpi	r24, 0x70	; 112
 85e:	19 f0       	breq	.+6      	; 0x866 <vfprintf+0x24e>
 860:	88 37       	cpi	r24, 0x78	; 120
 862:	21 f0       	breq	.+8      	; 0x86c <vfprintf+0x254>
 864:	b0 c0       	rjmp	.+352    	; 0x9c6 <vfprintf+0x3ae>
 866:	e9 2f       	mov	r30, r25
 868:	e0 61       	ori	r30, 0x10	; 16
 86a:	be 2e       	mov	r11, r30
 86c:	b4 fe       	sbrs	r11, 4
 86e:	0d c0       	rjmp	.+26     	; 0x88a <vfprintf+0x272>
 870:	fb 2d       	mov	r31, r11
 872:	f4 60       	ori	r31, 0x04	; 4
 874:	bf 2e       	mov	r11, r31
 876:	09 c0       	rjmp	.+18     	; 0x88a <vfprintf+0x272>
 878:	34 fe       	sbrs	r3, 4
 87a:	0a c0       	rjmp	.+20     	; 0x890 <vfprintf+0x278>
 87c:	29 2f       	mov	r18, r25
 87e:	26 60       	ori	r18, 0x06	; 6
 880:	b2 2e       	mov	r11, r18
 882:	06 c0       	rjmp	.+12     	; 0x890 <vfprintf+0x278>
 884:	28 e0       	ldi	r18, 0x08	; 8
 886:	30 e0       	ldi	r19, 0x00	; 0
 888:	05 c0       	rjmp	.+10     	; 0x894 <vfprintf+0x27c>
 88a:	20 e1       	ldi	r18, 0x10	; 16
 88c:	30 e0       	ldi	r19, 0x00	; 0
 88e:	02 c0       	rjmp	.+4      	; 0x894 <vfprintf+0x27c>
 890:	20 e1       	ldi	r18, 0x10	; 16
 892:	32 e0       	ldi	r19, 0x02	; 2
 894:	f8 01       	movw	r30, r16
 896:	b7 fe       	sbrs	r11, 7
 898:	07 c0       	rjmp	.+14     	; 0x8a8 <vfprintf+0x290>
 89a:	60 81       	ld	r22, Z
 89c:	71 81       	ldd	r23, Z+1	; 0x01
 89e:	82 81       	ldd	r24, Z+2	; 0x02
 8a0:	93 81       	ldd	r25, Z+3	; 0x03
 8a2:	0c 5f       	subi	r16, 0xFC	; 252
 8a4:	1f 4f       	sbci	r17, 0xFF	; 255
 8a6:	06 c0       	rjmp	.+12     	; 0x8b4 <vfprintf+0x29c>
 8a8:	60 81       	ld	r22, Z
 8aa:	71 81       	ldd	r23, Z+1	; 0x01
 8ac:	80 e0       	ldi	r24, 0x00	; 0
 8ae:	90 e0       	ldi	r25, 0x00	; 0
 8b0:	0e 5f       	subi	r16, 0xFE	; 254
 8b2:	1f 4f       	sbci	r17, 0xFF	; 255
 8b4:	a3 01       	movw	r20, r6
 8b6:	0e 94 3f 05 	call	0xa7e	; 0xa7e <__ultoa_invert>
 8ba:	88 2e       	mov	r8, r24
 8bc:	86 18       	sub	r8, r6
 8be:	fb 2d       	mov	r31, r11
 8c0:	ff 77       	andi	r31, 0x7F	; 127
 8c2:	3f 2e       	mov	r3, r31
 8c4:	36 fe       	sbrs	r3, 6
 8c6:	0d c0       	rjmp	.+26     	; 0x8e2 <vfprintf+0x2ca>
 8c8:	23 2d       	mov	r18, r3
 8ca:	2e 7f       	andi	r18, 0xFE	; 254
 8cc:	a2 2e       	mov	r10, r18
 8ce:	89 14       	cp	r8, r9
 8d0:	58 f4       	brcc	.+22     	; 0x8e8 <vfprintf+0x2d0>
 8d2:	34 fe       	sbrs	r3, 4
 8d4:	0b c0       	rjmp	.+22     	; 0x8ec <vfprintf+0x2d4>
 8d6:	32 fc       	sbrc	r3, 2
 8d8:	09 c0       	rjmp	.+18     	; 0x8ec <vfprintf+0x2d4>
 8da:	83 2d       	mov	r24, r3
 8dc:	8e 7e       	andi	r24, 0xEE	; 238
 8de:	a8 2e       	mov	r10, r24
 8e0:	05 c0       	rjmp	.+10     	; 0x8ec <vfprintf+0x2d4>
 8e2:	b8 2c       	mov	r11, r8
 8e4:	a3 2c       	mov	r10, r3
 8e6:	03 c0       	rjmp	.+6      	; 0x8ee <vfprintf+0x2d6>
 8e8:	b8 2c       	mov	r11, r8
 8ea:	01 c0       	rjmp	.+2      	; 0x8ee <vfprintf+0x2d6>
 8ec:	b9 2c       	mov	r11, r9
 8ee:	a4 fe       	sbrs	r10, 4
 8f0:	0f c0       	rjmp	.+30     	; 0x910 <vfprintf+0x2f8>
 8f2:	fe 01       	movw	r30, r28
 8f4:	e8 0d       	add	r30, r8
 8f6:	f1 1d       	adc	r31, r1
 8f8:	80 81       	ld	r24, Z
 8fa:	80 33       	cpi	r24, 0x30	; 48
 8fc:	21 f4       	brne	.+8      	; 0x906 <vfprintf+0x2ee>
 8fe:	9a 2d       	mov	r25, r10
 900:	99 7e       	andi	r25, 0xE9	; 233
 902:	a9 2e       	mov	r10, r25
 904:	09 c0       	rjmp	.+18     	; 0x918 <vfprintf+0x300>
 906:	a2 fe       	sbrs	r10, 2
 908:	06 c0       	rjmp	.+12     	; 0x916 <vfprintf+0x2fe>
 90a:	b3 94       	inc	r11
 90c:	b3 94       	inc	r11
 90e:	04 c0       	rjmp	.+8      	; 0x918 <vfprintf+0x300>
 910:	8a 2d       	mov	r24, r10
 912:	86 78       	andi	r24, 0x86	; 134
 914:	09 f0       	breq	.+2      	; 0x918 <vfprintf+0x300>
 916:	b3 94       	inc	r11
 918:	a3 fc       	sbrc	r10, 3
 91a:	11 c0       	rjmp	.+34     	; 0x93e <vfprintf+0x326>
 91c:	a0 fe       	sbrs	r10, 0
 91e:	06 c0       	rjmp	.+12     	; 0x92c <vfprintf+0x314>
 920:	b2 14       	cp	r11, r2
 922:	88 f4       	brcc	.+34     	; 0x946 <vfprintf+0x32e>
 924:	28 0c       	add	r2, r8
 926:	92 2c       	mov	r9, r2
 928:	9b 18       	sub	r9, r11
 92a:	0e c0       	rjmp	.+28     	; 0x948 <vfprintf+0x330>
 92c:	b2 14       	cp	r11, r2
 92e:	60 f4       	brcc	.+24     	; 0x948 <vfprintf+0x330>
 930:	b6 01       	movw	r22, r12
 932:	80 e2       	ldi	r24, 0x20	; 32
 934:	90 e0       	ldi	r25, 0x00	; 0
 936:	0e 94 03 05 	call	0xa06	; 0xa06 <fputc>
 93a:	b3 94       	inc	r11
 93c:	f7 cf       	rjmp	.-18     	; 0x92c <vfprintf+0x314>
 93e:	b2 14       	cp	r11, r2
 940:	18 f4       	brcc	.+6      	; 0x948 <vfprintf+0x330>
 942:	2b 18       	sub	r2, r11
 944:	02 c0       	rjmp	.+4      	; 0x94a <vfprintf+0x332>
 946:	98 2c       	mov	r9, r8
 948:	21 2c       	mov	r2, r1
 94a:	a4 fe       	sbrs	r10, 4
 94c:	10 c0       	rjmp	.+32     	; 0x96e <vfprintf+0x356>
 94e:	b6 01       	movw	r22, r12
 950:	80 e3       	ldi	r24, 0x30	; 48
 952:	90 e0       	ldi	r25, 0x00	; 0
 954:	0e 94 03 05 	call	0xa06	; 0xa06 <fputc>
 958:	a2 fe       	sbrs	r10, 2
 95a:	17 c0       	rjmp	.+46     	; 0x98a <vfprintf+0x372>
 95c:	a1 fc       	sbrc	r10, 1
 95e:	03 c0       	rjmp	.+6      	; 0x966 <vfprintf+0x34e>
 960:	88 e7       	ldi	r24, 0x78	; 120
 962:	90 e0       	ldi	r25, 0x00	; 0
 964:	02 c0       	rjmp	.+4      	; 0x96a <vfprintf+0x352>
 966:	88 e5       	ldi	r24, 0x58	; 88
 968:	90 e0       	ldi	r25, 0x00	; 0
 96a:	b6 01       	movw	r22, r12
 96c:	0c c0       	rjmp	.+24     	; 0x986 <vfprintf+0x36e>
 96e:	8a 2d       	mov	r24, r10
 970:	86 78       	andi	r24, 0x86	; 134
 972:	59 f0       	breq	.+22     	; 0x98a <vfprintf+0x372>
 974:	a1 fe       	sbrs	r10, 1
 976:	02 c0       	rjmp	.+4      	; 0x97c <vfprintf+0x364>
 978:	8b e2       	ldi	r24, 0x2B	; 43
 97a:	01 c0       	rjmp	.+2      	; 0x97e <vfprintf+0x366>
 97c:	80 e2       	ldi	r24, 0x20	; 32
 97e:	a7 fc       	sbrc	r10, 7
 980:	8d e2       	ldi	r24, 0x2D	; 45
 982:	b6 01       	movw	r22, r12
 984:	90 e0       	ldi	r25, 0x00	; 0
 986:	0e 94 03 05 	call	0xa06	; 0xa06 <fputc>
 98a:	89 14       	cp	r8, r9
 98c:	38 f4       	brcc	.+14     	; 0x99c <vfprintf+0x384>
 98e:	b6 01       	movw	r22, r12
 990:	80 e3       	ldi	r24, 0x30	; 48
 992:	90 e0       	ldi	r25, 0x00	; 0
 994:	0e 94 03 05 	call	0xa06	; 0xa06 <fputc>
 998:	9a 94       	dec	r9
 99a:	f7 cf       	rjmp	.-18     	; 0x98a <vfprintf+0x372>
 99c:	8a 94       	dec	r8
 99e:	f3 01       	movw	r30, r6
 9a0:	e8 0d       	add	r30, r8
 9a2:	f1 1d       	adc	r31, r1
 9a4:	80 81       	ld	r24, Z
 9a6:	b6 01       	movw	r22, r12
 9a8:	90 e0       	ldi	r25, 0x00	; 0
 9aa:	0e 94 03 05 	call	0xa06	; 0xa06 <fputc>
 9ae:	81 10       	cpse	r8, r1
 9b0:	f5 cf       	rjmp	.-22     	; 0x99c <vfprintf+0x384>
 9b2:	22 20       	and	r2, r2
 9b4:	09 f4       	brne	.+2      	; 0x9b8 <vfprintf+0x3a0>
 9b6:	42 ce       	rjmp	.-892    	; 0x63c <vfprintf+0x24>
 9b8:	b6 01       	movw	r22, r12
 9ba:	80 e2       	ldi	r24, 0x20	; 32
 9bc:	90 e0       	ldi	r25, 0x00	; 0
 9be:	0e 94 03 05 	call	0xa06	; 0xa06 <fputc>
 9c2:	2a 94       	dec	r2
 9c4:	f6 cf       	rjmp	.-20     	; 0x9b2 <vfprintf+0x39a>
 9c6:	f6 01       	movw	r30, r12
 9c8:	86 81       	ldd	r24, Z+6	; 0x06
 9ca:	97 81       	ldd	r25, Z+7	; 0x07
 9cc:	02 c0       	rjmp	.+4      	; 0x9d2 <vfprintf+0x3ba>
 9ce:	8f ef       	ldi	r24, 0xFF	; 255
 9d0:	9f ef       	ldi	r25, 0xFF	; 255
 9d2:	2b 96       	adiw	r28, 0x0b	; 11
 9d4:	e2 e1       	ldi	r30, 0x12	; 18
 9d6:	0c 94 b9 05 	jmp	0xb72	; 0xb72 <__epilogue_restores__>

000009da <strnlen_P>:
 9da:	fc 01       	movw	r30, r24
 9dc:	05 90       	lpm	r0, Z+
 9de:	61 50       	subi	r22, 0x01	; 1
 9e0:	70 40       	sbci	r23, 0x00	; 0
 9e2:	01 10       	cpse	r0, r1
 9e4:	d8 f7       	brcc	.-10     	; 0x9dc <strnlen_P+0x2>
 9e6:	80 95       	com	r24
 9e8:	90 95       	com	r25
 9ea:	8e 0f       	add	r24, r30
 9ec:	9f 1f       	adc	r25, r31
 9ee:	08 95       	ret

000009f0 <strnlen>:
 9f0:	fc 01       	movw	r30, r24
 9f2:	61 50       	subi	r22, 0x01	; 1
 9f4:	70 40       	sbci	r23, 0x00	; 0
 9f6:	01 90       	ld	r0, Z+
 9f8:	01 10       	cpse	r0, r1
 9fa:	d8 f7       	brcc	.-10     	; 0x9f2 <strnlen+0x2>
 9fc:	80 95       	com	r24
 9fe:	90 95       	com	r25
 a00:	8e 0f       	add	r24, r30
 a02:	9f 1f       	adc	r25, r31
 a04:	08 95       	ret

00000a06 <fputc>:
 a06:	0f 93       	push	r16
 a08:	1f 93       	push	r17
 a0a:	cf 93       	push	r28
 a0c:	df 93       	push	r29
 a0e:	fb 01       	movw	r30, r22
 a10:	23 81       	ldd	r18, Z+3	; 0x03
 a12:	21 fd       	sbrc	r18, 1
 a14:	03 c0       	rjmp	.+6      	; 0xa1c <fputc+0x16>
 a16:	8f ef       	ldi	r24, 0xFF	; 255
 a18:	9f ef       	ldi	r25, 0xFF	; 255
 a1a:	2c c0       	rjmp	.+88     	; 0xa74 <fputc+0x6e>
 a1c:	22 ff       	sbrs	r18, 2
 a1e:	16 c0       	rjmp	.+44     	; 0xa4c <fputc+0x46>
 a20:	46 81       	ldd	r20, Z+6	; 0x06
 a22:	57 81       	ldd	r21, Z+7	; 0x07
 a24:	24 81       	ldd	r18, Z+4	; 0x04
 a26:	35 81       	ldd	r19, Z+5	; 0x05
 a28:	42 17       	cp	r20, r18
 a2a:	53 07       	cpc	r21, r19
 a2c:	44 f4       	brge	.+16     	; 0xa3e <fputc+0x38>
 a2e:	a0 81       	ld	r26, Z
 a30:	b1 81       	ldd	r27, Z+1	; 0x01
 a32:	9d 01       	movw	r18, r26
 a34:	2f 5f       	subi	r18, 0xFF	; 255
 a36:	3f 4f       	sbci	r19, 0xFF	; 255
 a38:	31 83       	std	Z+1, r19	; 0x01
 a3a:	20 83       	st	Z, r18
 a3c:	8c 93       	st	X, r24
 a3e:	26 81       	ldd	r18, Z+6	; 0x06
 a40:	37 81       	ldd	r19, Z+7	; 0x07
 a42:	2f 5f       	subi	r18, 0xFF	; 255
 a44:	3f 4f       	sbci	r19, 0xFF	; 255
 a46:	37 83       	std	Z+7, r19	; 0x07
 a48:	26 83       	std	Z+6, r18	; 0x06
 a4a:	14 c0       	rjmp	.+40     	; 0xa74 <fputc+0x6e>
 a4c:	8b 01       	movw	r16, r22
 a4e:	ec 01       	movw	r28, r24
 a50:	fb 01       	movw	r30, r22
 a52:	00 84       	ldd	r0, Z+8	; 0x08
 a54:	f1 85       	ldd	r31, Z+9	; 0x09
 a56:	e0 2d       	mov	r30, r0
 a58:	09 95       	icall
 a5a:	89 2b       	or	r24, r25
 a5c:	e1 f6       	brne	.-72     	; 0xa16 <fputc+0x10>
 a5e:	d8 01       	movw	r26, r16
 a60:	16 96       	adiw	r26, 0x06	; 6
 a62:	8d 91       	ld	r24, X+
 a64:	9c 91       	ld	r25, X
 a66:	17 97       	sbiw	r26, 0x07	; 7
 a68:	01 96       	adiw	r24, 0x01	; 1
 a6a:	17 96       	adiw	r26, 0x07	; 7
 a6c:	9c 93       	st	X, r25
 a6e:	8e 93       	st	-X, r24
 a70:	16 97       	sbiw	r26, 0x06	; 6
 a72:	ce 01       	movw	r24, r28
 a74:	df 91       	pop	r29
 a76:	cf 91       	pop	r28
 a78:	1f 91       	pop	r17
 a7a:	0f 91       	pop	r16
 a7c:	08 95       	ret

00000a7e <__ultoa_invert>:
 a7e:	fa 01       	movw	r30, r20
 a80:	aa 27       	eor	r26, r26
 a82:	28 30       	cpi	r18, 0x08	; 8
 a84:	51 f1       	breq	.+84     	; 0xada <__ultoa_invert+0x5c>
 a86:	20 31       	cpi	r18, 0x10	; 16
 a88:	81 f1       	breq	.+96     	; 0xaea <__ultoa_invert+0x6c>
 a8a:	e8 94       	clt
 a8c:	6f 93       	push	r22
 a8e:	6e 7f       	andi	r22, 0xFE	; 254
 a90:	6e 5f       	subi	r22, 0xFE	; 254
 a92:	7f 4f       	sbci	r23, 0xFF	; 255
 a94:	8f 4f       	sbci	r24, 0xFF	; 255
 a96:	9f 4f       	sbci	r25, 0xFF	; 255
 a98:	af 4f       	sbci	r26, 0xFF	; 255
 a9a:	b1 e0       	ldi	r27, 0x01	; 1
 a9c:	3e d0       	rcall	.+124    	; 0xb1a <__ultoa_invert+0x9c>
 a9e:	b4 e0       	ldi	r27, 0x04	; 4
 aa0:	3c d0       	rcall	.+120    	; 0xb1a <__ultoa_invert+0x9c>
 aa2:	67 0f       	add	r22, r23
 aa4:	78 1f       	adc	r23, r24
 aa6:	89 1f       	adc	r24, r25
 aa8:	9a 1f       	adc	r25, r26
 aaa:	a1 1d       	adc	r26, r1
 aac:	68 0f       	add	r22, r24
 aae:	79 1f       	adc	r23, r25
 ab0:	8a 1f       	adc	r24, r26
 ab2:	91 1d       	adc	r25, r1
 ab4:	a1 1d       	adc	r26, r1
 ab6:	6a 0f       	add	r22, r26
 ab8:	71 1d       	adc	r23, r1
 aba:	81 1d       	adc	r24, r1
 abc:	91 1d       	adc	r25, r1
 abe:	a1 1d       	adc	r26, r1
 ac0:	20 d0       	rcall	.+64     	; 0xb02 <__ultoa_invert+0x84>
 ac2:	09 f4       	brne	.+2      	; 0xac6 <__ultoa_invert+0x48>
 ac4:	68 94       	set
 ac6:	3f 91       	pop	r19
 ac8:	2a e0       	ldi	r18, 0x0A	; 10
 aca:	26 9f       	mul	r18, r22
 acc:	11 24       	eor	r1, r1
 ace:	30 19       	sub	r19, r0
 ad0:	30 5d       	subi	r19, 0xD0	; 208
 ad2:	31 93       	st	Z+, r19
 ad4:	de f6       	brtc	.-74     	; 0xa8c <__ultoa_invert+0xe>
 ad6:	cf 01       	movw	r24, r30
 ad8:	08 95       	ret
 ada:	46 2f       	mov	r20, r22
 adc:	47 70       	andi	r20, 0x07	; 7
 ade:	40 5d       	subi	r20, 0xD0	; 208
 ae0:	41 93       	st	Z+, r20
 ae2:	b3 e0       	ldi	r27, 0x03	; 3
 ae4:	0f d0       	rcall	.+30     	; 0xb04 <__ultoa_invert+0x86>
 ae6:	c9 f7       	brne	.-14     	; 0xada <__ultoa_invert+0x5c>
 ae8:	f6 cf       	rjmp	.-20     	; 0xad6 <__ultoa_invert+0x58>
 aea:	46 2f       	mov	r20, r22
 aec:	4f 70       	andi	r20, 0x0F	; 15
 aee:	40 5d       	subi	r20, 0xD0	; 208
 af0:	4a 33       	cpi	r20, 0x3A	; 58
 af2:	18 f0       	brcs	.+6      	; 0xafa <__ultoa_invert+0x7c>
 af4:	49 5d       	subi	r20, 0xD9	; 217
 af6:	31 fd       	sbrc	r19, 1
 af8:	40 52       	subi	r20, 0x20	; 32
 afa:	41 93       	st	Z+, r20
 afc:	02 d0       	rcall	.+4      	; 0xb02 <__ultoa_invert+0x84>
 afe:	a9 f7       	brne	.-22     	; 0xaea <__ultoa_invert+0x6c>
 b00:	ea cf       	rjmp	.-44     	; 0xad6 <__ultoa_invert+0x58>
 b02:	b4 e0       	ldi	r27, 0x04	; 4
 b04:	a6 95       	lsr	r26
 b06:	97 95       	ror	r25
 b08:	87 95       	ror	r24
 b0a:	77 95       	ror	r23
 b0c:	67 95       	ror	r22
 b0e:	ba 95       	dec	r27
 b10:	c9 f7       	brne	.-14     	; 0xb04 <__ultoa_invert+0x86>
 b12:	00 97       	sbiw	r24, 0x00	; 0
 b14:	61 05       	cpc	r22, r1
 b16:	71 05       	cpc	r23, r1
 b18:	08 95       	ret
 b1a:	9b 01       	movw	r18, r22
 b1c:	ac 01       	movw	r20, r24
 b1e:	0a 2e       	mov	r0, r26
 b20:	06 94       	lsr	r0
 b22:	57 95       	ror	r21
 b24:	47 95       	ror	r20
 b26:	37 95       	ror	r19
 b28:	27 95       	ror	r18
 b2a:	ba 95       	dec	r27
 b2c:	c9 f7       	brne	.-14     	; 0xb20 <__ultoa_invert+0xa2>
 b2e:	62 0f       	add	r22, r18
 b30:	73 1f       	adc	r23, r19
 b32:	84 1f       	adc	r24, r20
 b34:	95 1f       	adc	r25, r21
 b36:	a0 1d       	adc	r26, r0
 b38:	08 95       	ret

00000b3a <__prologue_saves__>:
 b3a:	2f 92       	push	r2
 b3c:	3f 92       	push	r3
 b3e:	4f 92       	push	r4
 b40:	5f 92       	push	r5
 b42:	6f 92       	push	r6
 b44:	7f 92       	push	r7
 b46:	8f 92       	push	r8
 b48:	9f 92       	push	r9
 b4a:	af 92       	push	r10
 b4c:	bf 92       	push	r11
 b4e:	cf 92       	push	r12
 b50:	df 92       	push	r13
 b52:	ef 92       	push	r14
 b54:	ff 92       	push	r15
 b56:	0f 93       	push	r16
 b58:	1f 93       	push	r17
 b5a:	cf 93       	push	r28
 b5c:	df 93       	push	r29
 b5e:	cd b7       	in	r28, 0x3d	; 61
 b60:	de b7       	in	r29, 0x3e	; 62
 b62:	ca 1b       	sub	r28, r26
 b64:	db 0b       	sbc	r29, r27
 b66:	0f b6       	in	r0, 0x3f	; 63
 b68:	f8 94       	cli
 b6a:	de bf       	out	0x3e, r29	; 62
 b6c:	0f be       	out	0x3f, r0	; 63
 b6e:	cd bf       	out	0x3d, r28	; 61
 b70:	09 94       	ijmp

00000b72 <__epilogue_restores__>:
 b72:	2a 88       	ldd	r2, Y+18	; 0x12
 b74:	39 88       	ldd	r3, Y+17	; 0x11
 b76:	48 88       	ldd	r4, Y+16	; 0x10
 b78:	5f 84       	ldd	r5, Y+15	; 0x0f
 b7a:	6e 84       	ldd	r6, Y+14	; 0x0e
 b7c:	7d 84       	ldd	r7, Y+13	; 0x0d
 b7e:	8c 84       	ldd	r8, Y+12	; 0x0c
 b80:	9b 84       	ldd	r9, Y+11	; 0x0b
 b82:	aa 84       	ldd	r10, Y+10	; 0x0a
 b84:	b9 84       	ldd	r11, Y+9	; 0x09
 b86:	c8 84       	ldd	r12, Y+8	; 0x08
 b88:	df 80       	ldd	r13, Y+7	; 0x07
 b8a:	ee 80       	ldd	r14, Y+6	; 0x06
 b8c:	fd 80       	ldd	r15, Y+5	; 0x05
 b8e:	0c 81       	ldd	r16, Y+4	; 0x04
 b90:	1b 81       	ldd	r17, Y+3	; 0x03
 b92:	aa 81       	ldd	r26, Y+2	; 0x02
 b94:	b9 81       	ldd	r27, Y+1	; 0x01
 b96:	ce 0f       	add	r28, r30
 b98:	d1 1d       	adc	r29, r1
 b9a:	0f b6       	in	r0, 0x3f	; 63
 b9c:	f8 94       	cli
 b9e:	de bf       	out	0x3e, r29	; 62
 ba0:	0f be       	out	0x3f, r0	; 63
 ba2:	cd bf       	out	0x3d, r28	; 61
 ba4:	ed 01       	movw	r28, r26
 ba6:	08 95       	ret

00000ba8 <_exit>:
 ba8:	f8 94       	cli

00000baa <__stop_program>:
 baa:	ff cf       	rjmp	.-2      	; 0xbaa <__stop_program>
