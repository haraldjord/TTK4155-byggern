
PingPongLab.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000152  00800100  00000fe2  00001076  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000fe2  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000000e  00800252  00800252  000011c8  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000011c8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00001224  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00001260  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001667  00000000  00000000  00001338  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000939  00000000  00000000  0000299f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000afe  00000000  00000000  000032d8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000298  00000000  00000000  00003dd8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006ad  00000000  00000000  00004070  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c0e  00000000  00000000  0000471d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  0000532b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
   4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
   c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
  6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
  78:	00 06       	cpc	r0, r16
  7a:	5f 5f       	subi	r21, 0xFF	; 255
  7c:	06 00       	.word	0x0006	; ????
  7e:	00 00       	nop
  80:	00 07       	cpc	r16, r16
  82:	07 00       	.word	0x0007	; ????
  84:	07 07       	cpc	r16, r23
  86:	00 00       	nop
  88:	14 7f       	andi	r17, 0xF4	; 244
  8a:	7f 14       	cp	r7, r15
  8c:	7f 7f       	andi	r23, 0xFF	; 255
  8e:	14 00       	.word	0x0014	; ????
  90:	24 2e       	mov	r2, r20
  92:	6b 6b       	ori	r22, 0xBB	; 187
  94:	3a 12       	cpse	r3, r26
  96:	00 00       	nop
  98:	46 66       	ori	r20, 0x66	; 102
  9a:	30 18       	sub	r3, r0
  9c:	0c 66       	ori	r16, 0x6C	; 108
  9e:	62 00       	.word	0x0062	; ????
  a0:	30 7a       	andi	r19, 0xA0	; 160
  a2:	4f 5d       	subi	r20, 0xDF	; 223
  a4:	37 7a       	andi	r19, 0xA7	; 167
  a6:	48 00       	.word	0x0048	; ????
  a8:	04 07       	cpc	r16, r20
  aa:	03 00       	.word	0x0003	; ????
  ac:	00 00       	nop
  ae:	00 00       	nop
  b0:	00 1c       	adc	r0, r0
  b2:	3e 63       	ori	r19, 0x3E	; 62
  b4:	41 00       	.word	0x0041	; ????
  b6:	00 00       	nop
  b8:	00 41       	sbci	r16, 0x10	; 16
  ba:	63 3e       	cpi	r22, 0xE3	; 227
  bc:	1c 00       	.word	0x001c	; ????
  be:	00 00       	nop
  c0:	08 2a       	or	r0, r24
  c2:	3e 1c       	adc	r3, r14
  c4:	1c 3e       	cpi	r17, 0xEC	; 236
  c6:	2a 08       	sbc	r2, r10
  c8:	08 08       	sbc	r0, r8
  ca:	3e 3e       	cpi	r19, 0xEE	; 238
  cc:	08 08       	sbc	r0, r8
  ce:	00 00       	nop
  d0:	00 a0       	ldd	r0, Z+32	; 0x20
  d2:	e0 60       	ori	r30, 0x00	; 0
  d4:	00 00       	nop
  d6:	00 00       	nop
  d8:	08 08       	sbc	r0, r8
  da:	08 08       	sbc	r0, r8
  dc:	08 08       	sbc	r0, r8
  de:	00 00       	nop
  e0:	00 00       	nop
  e2:	60 60       	ori	r22, 0x00	; 0
  e4:	00 00       	nop
  e6:	00 00       	nop
  e8:	60 30       	cpi	r22, 0x00	; 0
  ea:	18 0c       	add	r1, r8
  ec:	06 03       	mulsu	r16, r22
  ee:	01 00       	.word	0x0001	; ????
  f0:	3e 7f       	andi	r19, 0xFE	; 254
  f2:	59 4d       	sbci	r21, 0xD9	; 217
  f4:	7f 3e       	cpi	r23, 0xEF	; 239
  f6:	00 00       	nop
  f8:	42 42       	sbci	r20, 0x22	; 34
  fa:	7f 7f       	andi	r23, 0xFF	; 255
  fc:	40 40       	sbci	r20, 0x00	; 0
  fe:	00 00       	nop
 100:	62 73       	andi	r22, 0x32	; 50
 102:	59 49       	sbci	r21, 0x99	; 153
 104:	6f 66       	ori	r22, 0x6F	; 111
 106:	00 00       	nop
 108:	22 63       	ori	r18, 0x32	; 50
 10a:	49 49       	sbci	r20, 0x99	; 153
 10c:	7f 36       	cpi	r23, 0x6F	; 111
 10e:	00 00       	nop
 110:	18 1c       	adc	r1, r8
 112:	16 13       	cpse	r17, r22
 114:	7f 7f       	andi	r23, 0xFF	; 255
 116:	10 00       	.word	0x0010	; ????
 118:	27 67       	ori	r18, 0x77	; 119
 11a:	45 45       	sbci	r20, 0x55	; 85
 11c:	7d 39       	cpi	r23, 0x9D	; 157
 11e:	00 00       	nop
 120:	3c 7e       	andi	r19, 0xEC	; 236
 122:	4b 49       	sbci	r20, 0x9B	; 155
 124:	79 30       	cpi	r23, 0x09	; 9
 126:	00 00       	nop
 128:	03 63       	ori	r16, 0x33	; 51
 12a:	71 19       	sub	r23, r1
 12c:	0f 07       	cpc	r16, r31
 12e:	00 00       	nop
 130:	36 7f       	andi	r19, 0xF6	; 246
 132:	49 49       	sbci	r20, 0x99	; 153
 134:	7f 36       	cpi	r23, 0x6F	; 111
 136:	00 00       	nop
 138:	06 4f       	sbci	r16, 0xF6	; 246
 13a:	49 69       	ori	r20, 0x99	; 153
 13c:	3f 1e       	adc	r3, r31
 13e:	00 00       	nop
 140:	00 00       	nop
 142:	6c 6c       	ori	r22, 0xCC	; 204
 144:	00 00       	nop
 146:	00 00       	nop
 148:	00 a0       	ldd	r0, Z+32	; 0x20
 14a:	ec 6c       	ori	r30, 0xCC	; 204
 14c:	00 00       	nop
 14e:	00 00       	nop
 150:	08 1c       	adc	r0, r8
 152:	36 63       	ori	r19, 0x36	; 54
 154:	41 00       	.word	0x0041	; ????
 156:	00 00       	nop
 158:	14 14       	cp	r1, r4
 15a:	14 14       	cp	r1, r4
 15c:	14 14       	cp	r1, r4
 15e:	00 00       	nop
 160:	00 41       	sbci	r16, 0x10	; 16
 162:	63 36       	cpi	r22, 0x63	; 99
 164:	1c 08       	sbc	r1, r12
 166:	00 00       	nop
 168:	02 03       	mulsu	r16, r18
 16a:	51 59       	subi	r21, 0x91	; 145
 16c:	0f 06       	cpc	r0, r31
 16e:	00 00       	nop
 170:	3e 7f       	andi	r19, 0xFE	; 254
 172:	41 5d       	subi	r20, 0xD1	; 209
 174:	5d 1f       	adc	r21, r29
 176:	1e 00       	.word	0x001e	; ????
 178:	7c 7e       	andi	r23, 0xEC	; 236
 17a:	13 13       	cpse	r17, r19
 17c:	7e 7c       	andi	r23, 0xCE	; 206
 17e:	00 00       	nop
 180:	41 7f       	andi	r20, 0xF1	; 241
 182:	7f 49       	sbci	r23, 0x9F	; 159
 184:	49 7f       	andi	r20, 0xF9	; 249
 186:	36 00       	.word	0x0036	; ????
 188:	1c 3e       	cpi	r17, 0xEC	; 236
 18a:	63 41       	sbci	r22, 0x13	; 19
 18c:	41 63       	ori	r20, 0x31	; 49
 18e:	22 00       	.word	0x0022	; ????
 190:	41 7f       	andi	r20, 0xF1	; 241
 192:	7f 41       	sbci	r23, 0x1F	; 31
 194:	63 7f       	andi	r22, 0xF3	; 243
 196:	1c 00       	.word	0x001c	; ????
 198:	41 7f       	andi	r20, 0xF1	; 241
 19a:	7f 49       	sbci	r23, 0x9F	; 159
 19c:	5d 41       	sbci	r21, 0x1D	; 29
 19e:	63 00       	.word	0x0063	; ????
 1a0:	41 7f       	andi	r20, 0xF1	; 241
 1a2:	7f 49       	sbci	r23, 0x9F	; 159
 1a4:	1d 01       	movw	r2, r26
 1a6:	03 00       	.word	0x0003	; ????
 1a8:	1c 3e       	cpi	r17, 0xEC	; 236
 1aa:	63 41       	sbci	r22, 0x13	; 19
 1ac:	51 73       	andi	r21, 0x31	; 49
 1ae:	72 00       	.word	0x0072	; ????
 1b0:	7f 7f       	andi	r23, 0xFF	; 255
 1b2:	08 08       	sbc	r0, r8
 1b4:	7f 7f       	andi	r23, 0xFF	; 255
 1b6:	00 00       	nop
 1b8:	00 41       	sbci	r16, 0x10	; 16
 1ba:	7f 7f       	andi	r23, 0xFF	; 255
 1bc:	41 00       	.word	0x0041	; ????
 1be:	00 00       	nop
 1c0:	30 70       	andi	r19, 0x00	; 0
 1c2:	40 41       	sbci	r20, 0x10	; 16
 1c4:	7f 3f       	cpi	r23, 0xFF	; 255
 1c6:	01 00       	.word	0x0001	; ????
 1c8:	41 7f       	andi	r20, 0xF1	; 241
 1ca:	7f 08       	sbc	r7, r15
 1cc:	1c 77       	andi	r17, 0x7C	; 124
 1ce:	63 00       	.word	0x0063	; ????
 1d0:	41 7f       	andi	r20, 0xF1	; 241
 1d2:	7f 41       	sbci	r23, 0x1F	; 31
 1d4:	40 60       	ori	r20, 0x00	; 0
 1d6:	70 00       	.word	0x0070	; ????
 1d8:	7f 7f       	andi	r23, 0xFF	; 255
 1da:	06 0c       	add	r0, r6
 1dc:	06 7f       	andi	r16, 0xF6	; 246
 1de:	7f 00       	.word	0x007f	; ????
 1e0:	7f 7f       	andi	r23, 0xFF	; 255
 1e2:	06 0c       	add	r0, r6
 1e4:	18 7f       	andi	r17, 0xF8	; 248
 1e6:	7f 00       	.word	0x007f	; ????
 1e8:	1c 3e       	cpi	r17, 0xEC	; 236
 1ea:	63 41       	sbci	r22, 0x13	; 19
 1ec:	63 3e       	cpi	r22, 0xE3	; 227
 1ee:	1c 00       	.word	0x001c	; ????
 1f0:	41 7f       	andi	r20, 0xF1	; 241
 1f2:	7f 49       	sbci	r23, 0x9F	; 159
 1f4:	09 0f       	add	r16, r25
 1f6:	06 00       	.word	0x0006	; ????
 1f8:	1e 3f       	cpi	r17, 0xFE	; 254
 1fa:	21 71       	andi	r18, 0x11	; 17
 1fc:	7f 5e       	subi	r23, 0xEF	; 239
 1fe:	00 00       	nop
 200:	41 7f       	andi	r20, 0xF1	; 241
 202:	7f 19       	sub	r23, r15
 204:	39 6f       	ori	r19, 0xF9	; 249
 206:	46 00       	.word	0x0046	; ????
 208:	26 67       	ori	r18, 0x76	; 118
 20a:	4d 59       	subi	r20, 0x9D	; 157
 20c:	7b 32       	cpi	r23, 0x2B	; 43
 20e:	00 00       	nop
 210:	03 41       	sbci	r16, 0x13	; 19
 212:	7f 7f       	andi	r23, 0xFF	; 255
 214:	41 03       	mulsu	r20, r17
 216:	00 00       	nop
 218:	7f 7f       	andi	r23, 0xFF	; 255
 21a:	40 40       	sbci	r20, 0x00	; 0
 21c:	7f 7f       	andi	r23, 0xFF	; 255
 21e:	00 00       	nop
 220:	1f 3f       	cpi	r17, 0xFF	; 255
 222:	60 60       	ori	r22, 0x00	; 0
 224:	3f 1f       	adc	r19, r31
 226:	00 00       	nop
 228:	7f 7f       	andi	r23, 0xFF	; 255
 22a:	30 18       	sub	r3, r0
 22c:	30 7f       	andi	r19, 0xF0	; 240
 22e:	7f 00       	.word	0x007f	; ????
 230:	63 77       	andi	r22, 0x73	; 115
 232:	1c 08       	sbc	r1, r12
 234:	1c 77       	andi	r17, 0x7C	; 124
 236:	63 00       	.word	0x0063	; ????
 238:	07 4f       	sbci	r16, 0xF7	; 247
 23a:	78 78       	andi	r23, 0x88	; 136
 23c:	4f 07       	cpc	r20, r31
 23e:	00 00       	nop
 240:	67 73       	andi	r22, 0x37	; 55
 242:	59 4d       	sbci	r21, 0xD9	; 217
 244:	47 63       	ori	r20, 0x37	; 55
 246:	71 00       	.word	0x0071	; ????
 248:	00 7f       	andi	r16, 0xF0	; 240
 24a:	7f 41       	sbci	r23, 0x1F	; 31
 24c:	41 00       	.word	0x0041	; ????
 24e:	00 00       	nop
 250:	01 03       	mulsu	r16, r17
 252:	06 0c       	add	r0, r6
 254:	18 30       	cpi	r17, 0x08	; 8
 256:	60 00       	.word	0x0060	; ????
 258:	00 41       	sbci	r16, 0x10	; 16
 25a:	41 7f       	andi	r20, 0xF1	; 241
 25c:	7f 00       	.word	0x007f	; ????
 25e:	00 00       	nop
 260:	08 0c       	add	r0, r8
 262:	06 03       	mulsu	r16, r22
 264:	06 0c       	add	r0, r6
 266:	08 00       	.word	0x0008	; ????
 268:	80 80       	ld	r8, Z
 26a:	80 80       	ld	r8, Z
 26c:	80 80       	ld	r8, Z
 26e:	80 80       	ld	r8, Z
 270:	00 00       	nop
 272:	03 07       	cpc	r16, r19
 274:	04 00       	.word	0x0004	; ????
 276:	00 00       	nop
 278:	20 74       	andi	r18, 0x40	; 64
 27a:	54 54       	subi	r21, 0x44	; 68
 27c:	3c 78       	andi	r19, 0x8C	; 140
 27e:	40 00       	.word	0x0040	; ????
 280:	41 3f       	cpi	r20, 0xF1	; 241
 282:	7f 44       	sbci	r23, 0x4F	; 79
 284:	44 7c       	andi	r20, 0xC4	; 196
 286:	38 00       	.word	0x0038	; ????
 288:	38 7c       	andi	r19, 0xC8	; 200
 28a:	44 44       	sbci	r20, 0x44	; 68
 28c:	6c 28       	or	r6, r12
 28e:	00 00       	nop
 290:	30 78       	andi	r19, 0x80	; 128
 292:	48 49       	sbci	r20, 0x98	; 152
 294:	3f 7f       	andi	r19, 0xFF	; 255
 296:	40 00       	.word	0x0040	; ????
 298:	38 7c       	andi	r19, 0xC8	; 200
 29a:	54 54       	subi	r21, 0x44	; 68
 29c:	5c 18       	sub	r5, r12
 29e:	00 00       	nop
 2a0:	48 7e       	andi	r20, 0xE8	; 232
 2a2:	7f 49       	sbci	r23, 0x9F	; 159
 2a4:	03 02       	muls	r16, r19
 2a6:	00 00       	nop
 2a8:	98 bc       	out	0x28, r9	; 40
 2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
 2ac:	f8 7c       	andi	r31, 0xC8	; 200
 2ae:	04 00       	.word	0x0004	; ????
 2b0:	41 7f       	andi	r20, 0xF1	; 241
 2b2:	7f 08       	sbc	r7, r15
 2b4:	04 7c       	andi	r16, 0xC4	; 196
 2b6:	78 00       	.word	0x0078	; ????
 2b8:	00 44       	sbci	r16, 0x40	; 64
 2ba:	7d 7d       	andi	r23, 0xDD	; 221
 2bc:	40 00       	.word	0x0040	; ????
 2be:	00 00       	nop
 2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <vfprintf+0xf4>
 2c2:	84 fd       	sbrc	r24, 4
 2c4:	7d 00       	.word	0x007d	; ????
 2c6:	00 00       	nop
 2c8:	41 7f       	andi	r20, 0xF1	; 241
 2ca:	7f 10       	cpse	r7, r15
 2cc:	38 6c       	ori	r19, 0xC8	; 200
 2ce:	44 00       	.word	0x0044	; ????
 2d0:	00 41       	sbci	r16, 0x10	; 16
 2d2:	7f 7f       	andi	r23, 0xFF	; 255
 2d4:	40 00       	.word	0x0040	; ????
 2d6:	00 00       	nop
 2d8:	7c 7c       	andi	r23, 0xCC	; 204
 2da:	0c 18       	sub	r0, r12
 2dc:	0c 7c       	andi	r16, 0xCC	; 204
 2de:	78 00       	.word	0x0078	; ????
 2e0:	7c 7c       	andi	r23, 0xCC	; 204
 2e2:	04 04       	cpc	r0, r4
 2e4:	7c 78       	andi	r23, 0x8C	; 140
 2e6:	00 00       	nop
 2e8:	38 7c       	andi	r19, 0xC8	; 200
 2ea:	44 44       	sbci	r20, 0x44	; 68
 2ec:	7c 38       	cpi	r23, 0x8C	; 140
 2ee:	00 00       	nop
 2f0:	84 fc       	sbrc	r8, 4
 2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
 2f4:	24 3c       	cpi	r18, 0xC4	; 196
 2f6:	18 00       	.word	0x0018	; ????
 2f8:	18 3c       	cpi	r17, 0xC8	; 200
 2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
 2fc:	f8 fc       	.word	0xfcf8	; ????
 2fe:	84 00       	.word	0x0084	; ????
 300:	44 7c       	andi	r20, 0xC4	; 196
 302:	78 44       	sbci	r23, 0x48	; 72
 304:	1c 18       	sub	r1, r12
 306:	00 00       	nop
 308:	48 5c       	subi	r20, 0xC8	; 200
 30a:	54 54       	subi	r21, 0x44	; 68
 30c:	74 24       	eor	r7, r4
 30e:	00 00       	nop
 310:	00 04       	cpc	r0, r0
 312:	3e 7f       	andi	r19, 0xFE	; 254
 314:	44 24       	eor	r4, r4
 316:	00 00       	nop
 318:	3c 7c       	andi	r19, 0xCC	; 204
 31a:	40 40       	sbci	r20, 0x00	; 0
 31c:	3c 7c       	andi	r19, 0xCC	; 204
 31e:	40 00       	.word	0x0040	; ????
 320:	1c 3c       	cpi	r17, 0xCC	; 204
 322:	60 60       	ori	r22, 0x00	; 0
 324:	3c 1c       	adc	r3, r12
 326:	00 00       	nop
 328:	3c 7c       	andi	r19, 0xCC	; 204
 32a:	60 30       	cpi	r22, 0x00	; 0
 32c:	60 7c       	andi	r22, 0xC0	; 192
 32e:	3c 00       	.word	0x003c	; ????
 330:	44 6c       	ori	r20, 0xC4	; 196
 332:	38 10       	cpse	r3, r8
 334:	38 6c       	ori	r19, 0xC8	; 200
 336:	44 00       	.word	0x0044	; ????
 338:	9c bc       	out	0x2c, r9	; 44
 33a:	a0 a0       	ldd	r10, Z+32	; 0x20
 33c:	fc 7c       	andi	r31, 0xCC	; 204
 33e:	00 00       	nop
 340:	4c 64       	ori	r20, 0x4C	; 76
 342:	74 5c       	subi	r23, 0xC4	; 196
 344:	4c 64       	ori	r20, 0x4C	; 76
 346:	00 00       	nop
 348:	08 08       	sbc	r0, r8
 34a:	3e 77       	andi	r19, 0x7E	; 126
 34c:	41 41       	sbci	r20, 0x11	; 17
 34e:	00 00       	nop
 350:	00 00       	nop
 352:	00 77       	andi	r16, 0x70	; 112
 354:	77 00       	.word	0x0077	; ????
 356:	00 00       	nop
 358:	41 41       	sbci	r20, 0x11	; 17
 35a:	77 3e       	cpi	r23, 0xE7	; 231
 35c:	08 08       	sbc	r0, r8
 35e:	00 00       	nop
 360:	02 03       	mulsu	r16, r18
 362:	01 03       	mulsu	r16, r17
 364:	02 03       	mulsu	r16, r18
 366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
 368:	11 24       	eor	r1, r1
 36a:	1f be       	out	0x3f, r1	; 63
 36c:	cf ef       	ldi	r28, 0xFF	; 255
 36e:	d4 e0       	ldi	r29, 0x04	; 4
 370:	de bf       	out	0x3e, r29	; 62
 372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
 374:	12 e0       	ldi	r17, 0x02	; 2
 376:	a0 e0       	ldi	r26, 0x00	; 0
 378:	b1 e0       	ldi	r27, 0x01	; 1
 37a:	e2 ee       	ldi	r30, 0xE2	; 226
 37c:	ff e0       	ldi	r31, 0x0F	; 15
 37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
 380:	05 90       	lpm	r0, Z+
 382:	0d 92       	st	X+, r0
 384:	a2 35       	cpi	r26, 0x52	; 82
 386:	b1 07       	cpc	r27, r17
 388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
 38a:	22 e0       	ldi	r18, 0x02	; 2
 38c:	a2 e5       	ldi	r26, 0x52	; 82
 38e:	b2 e0       	ldi	r27, 0x02	; 2
 390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
 392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
 394:	a0 36       	cpi	r26, 0x60	; 96
 396:	b2 07       	cpc	r27, r18
 398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
 39a:	0e 94 72 03 	call	0x6e4	; 0x6e4 <main>
 39e:	0c 94 ef 07 	jmp	0xfde	; 0xfde <_exit>

000003a2 <__bad_interrupt>:
 3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <USART_Transmit>:
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
}
 3a6:	5d 9b       	sbis	0x0b, 5	; 11
 3a8:	fe cf       	rjmp	.-4      	; 0x3a6 <USART_Transmit>
 3aa:	8c b9       	out	0x0c, r24	; 12
 3ac:	08 95       	ret

000003ae <USART_Receive>:
 3ae:	5f 9b       	sbis	0x0b, 7	; 11
 3b0:	fe cf       	rjmp	.-4      	; 0x3ae <USART_Receive>
 3b2:	8c b1       	in	r24, 0x0c	; 12
 3b4:	08 95       	ret

000003b6 <OLED_send_command>:
 3b6:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xda0>
 3ba:	08 95       	ret

000003bc <OLED_goto_line>:
 3bc:	88 30       	cpi	r24, 0x08	; 8
 3be:	18 f4       	brcc	.+6      	; 0x3c6 <OLED_goto_line+0xa>
 3c0:	80 55       	subi	r24, 0x50	; 80
 3c2:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 3c6:	08 95       	ret

000003c8 <OLED_goto_column>:
 3c8:	cf 93       	push	r28
 3ca:	88 23       	and	r24, r24
 3cc:	54 f0       	brlt	.+20     	; 0x3e2 <OLED_goto_column+0x1a>
 3ce:	c8 2f       	mov	r28, r24
 3d0:	c2 95       	swap	r28
 3d2:	cf 70       	andi	r28, 0x0F	; 15
 3d4:	8f 70       	andi	r24, 0x0F	; 15
 3d6:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 3da:	80 e1       	ldi	r24, 0x10	; 16
 3dc:	8c 0f       	add	r24, r28
 3de:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 3e2:	cf 91       	pop	r28
 3e4:	08 95       	ret

000003e6 <OLED_pos>:
 3e6:	cf 93       	push	r28
 3e8:	c6 2f       	mov	r28, r22
 3ea:	0e 94 de 01 	call	0x3bc	; 0x3bc <OLED_goto_line>
 3ee:	8c 2f       	mov	r24, r28
 3f0:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <OLED_goto_column>
 3f4:	cf 91       	pop	r28
 3f6:	08 95       	ret

000003f8 <OLED_home>:
 3f8:	80 e0       	ldi	r24, 0x00	; 0
 3fa:	0e 94 de 01 	call	0x3bc	; 0x3bc <OLED_goto_line>
 3fe:	80 e0       	ldi	r24, 0x00	; 0
 400:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <OLED_goto_column>
 404:	08 95       	ret

00000406 <OLED_send_data>:
 406:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xfa0>
 40a:	08 95       	ret

0000040c <OLED_print_arrow>:
 40c:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
 410:	80 e0       	ldi	r24, 0x00	; 0
 412:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
 416:	88 e1       	ldi	r24, 0x18	; 24
 418:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
 41c:	88 e1       	ldi	r24, 0x18	; 24
 41e:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
 422:	88 e1       	ldi	r24, 0x18	; 24
 424:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
 428:	8e e7       	ldi	r24, 0x7E	; 126
 42a:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
 42e:	8c e3       	ldi	r24, 0x3C	; 60
 430:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
 434:	88 e1       	ldi	r24, 0x18	; 24
 436:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
 43a:	80 e0       	ldi	r24, 0x00	; 0
 43c:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
 440:	08 95       	ret

00000442 <OLED_print_char>:
 442:	1f 93       	push	r17
 444:	cf 93       	push	r28
 446:	df 93       	push	r29
 448:	18 2f       	mov	r17, r24
 44a:	c0 e0       	ldi	r28, 0x00	; 0
 44c:	d0 e0       	ldi	r29, 0x00	; 0
 44e:	11 c0       	rjmp	.+34     	; 0x472 <OLED_print_char+0x30>
 450:	e1 2f       	mov	r30, r17
 452:	f0 e0       	ldi	r31, 0x00	; 0
 454:	b0 97       	sbiw	r30, 0x20	; 32
 456:	ee 0f       	add	r30, r30
 458:	ff 1f       	adc	r31, r31
 45a:	ee 0f       	add	r30, r30
 45c:	ff 1f       	adc	r31, r31
 45e:	ee 0f       	add	r30, r30
 460:	ff 1f       	adc	r31, r31
 462:	ec 0f       	add	r30, r28
 464:	fd 1f       	adc	r31, r29
 466:	e0 59       	subi	r30, 0x90	; 144
 468:	ff 4f       	sbci	r31, 0xFF	; 255
 46a:	84 91       	lpm	r24, Z
 46c:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
 470:	21 96       	adiw	r28, 0x01	; 1
 472:	c8 30       	cpi	r28, 0x08	; 8
 474:	d1 05       	cpc	r29, r1
 476:	64 f3       	brlt	.-40     	; 0x450 <OLED_print_char+0xe>
 478:	df 91       	pop	r29
 47a:	cf 91       	pop	r28
 47c:	1f 91       	pop	r17
 47e:	08 95       	ret

00000480 <OLED_print>:
 480:	ef 92       	push	r14
 482:	ff 92       	push	r15
 484:	0f 93       	push	r16
 486:	1f 93       	push	r17
 488:	cf 93       	push	r28
 48a:	df 93       	push	r29
 48c:	7c 01       	movw	r14, r24
 48e:	8b 01       	movw	r16, r22
 490:	c0 e0       	ldi	r28, 0x00	; 0
 492:	d0 e0       	ldi	r29, 0x00	; 0
 494:	07 c0       	rjmp	.+14     	; 0x4a4 <OLED_print+0x24>
 496:	f7 01       	movw	r30, r14
 498:	ec 0f       	add	r30, r28
 49a:	fd 1f       	adc	r31, r29
 49c:	80 81       	ld	r24, Z
 49e:	0e 94 21 02 	call	0x442	; 0x442 <OLED_print_char>
 4a2:	21 96       	adiw	r28, 0x01	; 1
 4a4:	c0 17       	cp	r28, r16
 4a6:	d1 07       	cpc	r29, r17
 4a8:	b4 f3       	brlt	.-20     	; 0x496 <OLED_print+0x16>
 4aa:	df 91       	pop	r29
 4ac:	cf 91       	pop	r28
 4ae:	1f 91       	pop	r17
 4b0:	0f 91       	pop	r16
 4b2:	ff 90       	pop	r15
 4b4:	ef 90       	pop	r14
 4b6:	08 95       	ret

000004b8 <OLED_clear_line>:
 4b8:	cf 93       	push	r28
 4ba:	df 93       	push	r29
 4bc:	0e 94 de 01 	call	0x3bc	; 0x3bc <OLED_goto_line>
 4c0:	c0 e0       	ldi	r28, 0x00	; 0
 4c2:	d0 e0       	ldi	r29, 0x00	; 0
 4c4:	04 c0       	rjmp	.+8      	; 0x4ce <OLED_clear_line+0x16>
 4c6:	80 e0       	ldi	r24, 0x00	; 0
 4c8:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
 4cc:	21 96       	adiw	r28, 0x01	; 1
 4ce:	c0 38       	cpi	r28, 0x80	; 128
 4d0:	d1 05       	cpc	r29, r1
 4d2:	cc f3       	brlt	.-14     	; 0x4c6 <OLED_clear_line+0xe>
 4d4:	df 91       	pop	r29
 4d6:	cf 91       	pop	r28
 4d8:	08 95       	ret

000004da <OLED_reset>:
 4da:	cf 93       	push	r28
 4dc:	df 93       	push	r29
 4de:	c0 e0       	ldi	r28, 0x00	; 0
 4e0:	d0 e0       	ldi	r29, 0x00	; 0
 4e2:	04 c0       	rjmp	.+8      	; 0x4ec <OLED_reset+0x12>
 4e4:	8c 2f       	mov	r24, r28
 4e6:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <OLED_clear_line>
 4ea:	21 96       	adiw	r28, 0x01	; 1
 4ec:	c8 30       	cpi	r28, 0x08	; 8
 4ee:	d1 05       	cpc	r29, r1
 4f0:	cc f3       	brlt	.-14     	; 0x4e4 <OLED_reset+0xa>
 4f2:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <OLED_home>
 4f6:	df 91       	pop	r29
 4f8:	cf 91       	pop	r28
 4fa:	08 95       	ret

000004fc <OLED_Init>:
 4fc:	8e ea       	ldi	r24, 0xAE	; 174
 4fe:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 502:	81 ea       	ldi	r24, 0xA1	; 161
 504:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 508:	8a ed       	ldi	r24, 0xDA	; 218
 50a:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 50e:	82 e1       	ldi	r24, 0x12	; 18
 510:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 514:	88 ec       	ldi	r24, 0xC8	; 200
 516:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 51a:	88 ea       	ldi	r24, 0xA8	; 168
 51c:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 520:	8f e3       	ldi	r24, 0x3F	; 63
 522:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 526:	85 ed       	ldi	r24, 0xD5	; 213
 528:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 52c:	80 e8       	ldi	r24, 0x80	; 128
 52e:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 532:	81 e8       	ldi	r24, 0x81	; 129
 534:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 538:	80 e5       	ldi	r24, 0x50	; 80
 53a:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 53e:	89 ed       	ldi	r24, 0xD9	; 217
 540:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 544:	81 e2       	ldi	r24, 0x21	; 33
 546:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 54a:	80 e2       	ldi	r24, 0x20	; 32
 54c:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 550:	82 e0       	ldi	r24, 0x02	; 2
 552:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 556:	8b ed       	ldi	r24, 0xDB	; 219
 558:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 55c:	80 e3       	ldi	r24, 0x30	; 48
 55e:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 562:	8d ea       	ldi	r24, 0xAD	; 173
 564:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 568:	80 e0       	ldi	r24, 0x00	; 0
 56a:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 56e:	84 ea       	ldi	r24, 0xA4	; 164
 570:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 574:	86 ea       	ldi	r24, 0xA6	; 166
 576:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 57a:	8f ea       	ldi	r24, 0xAF	; 175
 57c:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
 580:	08 95       	ret

00000582 <screen0>:
 582:	cf 93       	push	r28
 584:	df 93       	push	r29
 586:	0e 94 6d 02 	call	0x4da	; 0x4da <OLED_reset>
 58a:	6a e0       	ldi	r22, 0x0A	; 10
 58c:	80 e0       	ldi	r24, 0x00	; 0
 58e:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
 592:	69 e0       	ldi	r22, 0x09	; 9
 594:	70 e0       	ldi	r23, 0x00	; 0
 596:	8e e0       	ldi	r24, 0x0E	; 14
 598:	91 e0       	ldi	r25, 0x01	; 1
 59a:	0e 94 40 02 	call	0x480	; 0x480 <OLED_print>
 59e:	6a e0       	ldi	r22, 0x0A	; 10
 5a0:	81 e0       	ldi	r24, 0x01	; 1
 5a2:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
 5a6:	c0 e0       	ldi	r28, 0x00	; 0
 5a8:	d0 e0       	ldi	r29, 0x00	; 0
 5aa:	04 c0       	rjmp	.+8      	; 0x5b4 <screen0+0x32>
 5ac:	81 e0       	ldi	r24, 0x01	; 1
 5ae:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
 5b2:	21 96       	adiw	r28, 0x01	; 1
 5b4:	c8 34       	cpi	r28, 0x48	; 72
 5b6:	d1 05       	cpc	r29, r1
 5b8:	cc f3       	brlt	.-14     	; 0x5ac <screen0+0x2a>
 5ba:	6a e0       	ldi	r22, 0x0A	; 10
 5bc:	82 e0       	ldi	r24, 0x02	; 2
 5be:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
 5c2:	6a e0       	ldi	r22, 0x0A	; 10
 5c4:	70 e0       	ldi	r23, 0x00	; 0
 5c6:	88 e1       	ldi	r24, 0x18	; 24
 5c8:	91 e0       	ldi	r25, 0x01	; 1
 5ca:	0e 94 40 02 	call	0x480	; 0x480 <OLED_print>
 5ce:	6a e0       	ldi	r22, 0x0A	; 10
 5d0:	83 e0       	ldi	r24, 0x03	; 3
 5d2:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
 5d6:	67 e0       	ldi	r22, 0x07	; 7
 5d8:	70 e0       	ldi	r23, 0x00	; 0
 5da:	83 e2       	ldi	r24, 0x23	; 35
 5dc:	91 e0       	ldi	r25, 0x01	; 1
 5de:	0e 94 40 02 	call	0x480	; 0x480 <OLED_print>
 5e2:	df 91       	pop	r29
 5e4:	cf 91       	pop	r28
 5e6:	08 95       	ret

000005e8 <screen1>:
 5e8:	cf 93       	push	r28
 5ea:	df 93       	push	r29
 5ec:	0e 94 6d 02 	call	0x4da	; 0x4da <OLED_reset>
 5f0:	6a e0       	ldi	r22, 0x0A	; 10
 5f2:	80 e0       	ldi	r24, 0x00	; 0
 5f4:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
 5f8:	67 e0       	ldi	r22, 0x07	; 7
 5fa:	70 e0       	ldi	r23, 0x00	; 0
 5fc:	83 e2       	ldi	r24, 0x23	; 35
 5fe:	91 e0       	ldi	r25, 0x01	; 1
 600:	0e 94 40 02 	call	0x480	; 0x480 <OLED_print>
 604:	6a e0       	ldi	r22, 0x0A	; 10
 606:	81 e0       	ldi	r24, 0x01	; 1
 608:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
 60c:	c0 e0       	ldi	r28, 0x00	; 0
 60e:	d0 e0       	ldi	r29, 0x00	; 0
 610:	04 c0       	rjmp	.+8      	; 0x61a <screen1+0x32>
 612:	81 e0       	ldi	r24, 0x01	; 1
 614:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
 618:	21 96       	adiw	r28, 0x01	; 1
 61a:	c8 34       	cpi	r28, 0x48	; 72
 61c:	d1 05       	cpc	r29, r1
 61e:	cc f3       	brlt	.-14     	; 0x612 <screen1+0x2a>
 620:	c0 e0       	ldi	r28, 0x00	; 0
 622:	10 c0       	rjmp	.+32     	; 0x644 <screen1+0x5c>
 624:	6a e0       	ldi	r22, 0x0A	; 10
 626:	82 e0       	ldi	r24, 0x02	; 2
 628:	8c 0f       	add	r24, r28
 62a:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
 62e:	67 e0       	ldi	r22, 0x07	; 7
 630:	70 e0       	ldi	r23, 0x00	; 0
 632:	8b e2       	ldi	r24, 0x2B	; 43
 634:	91 e0       	ldi	r25, 0x01	; 1
 636:	0e 94 40 02 	call	0x480	; 0x480 <OLED_print>
 63a:	81 e3       	ldi	r24, 0x31	; 49
 63c:	8c 0f       	add	r24, r28
 63e:	0e 94 21 02 	call	0x442	; 0x442 <OLED_print_char>
 642:	cf 5f       	subi	r28, 0xFF	; 255
 644:	c4 30       	cpi	r28, 0x04	; 4
 646:	70 f3       	brcs	.-36     	; 0x624 <screen1+0x3c>
 648:	6a e0       	ldi	r22, 0x0A	; 10
 64a:	86 e0       	ldi	r24, 0x06	; 6
 64c:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
 650:	69 e0       	ldi	r22, 0x09	; 9
 652:	70 e0       	ldi	r23, 0x00	; 0
 654:	8e e0       	ldi	r24, 0x0E	; 14
 656:	91 e0       	ldi	r25, 0x01	; 1
 658:	0e 94 40 02 	call	0x480	; 0x480 <OLED_print>
 65c:	df 91       	pop	r29
 65e:	cf 91       	pop	r28
 660:	08 95       	ret

00000662 <Read_ADC>:
 662:	e0 e0       	ldi	r30, 0x00	; 0
 664:	f4 e1       	ldi	r31, 0x14	; 20
 666:	80 e1       	ldi	r24, 0x10	; 16
 668:	80 83       	st	Z, r24
 66a:	82 e1       	ldi	r24, 0x12	; 18
 66c:	80 83       	st	Z, r24
 66e:	81 e1       	ldi	r24, 0x11	; 17
 670:	80 83       	st	Z, r24
 672:	83 e0       	ldi	r24, 0x03	; 3
 674:	80 83       	st	Z, r24
 676:	8c ec       	ldi	r24, 0xCC	; 204
 678:	94 e0       	ldi	r25, 0x04	; 4
 67a:	01 97       	sbiw	r24, 0x01	; 1
 67c:	f1 f7       	brne	.-4      	; 0x67a <Read_ADC+0x18>
 67e:	00 c0       	rjmp	.+0      	; 0x680 <Read_ADC+0x1e>
 680:	00 00       	nop
 682:	80 81       	ld	r24, Z
 684:	80 93 59 02 	sts	0x0259, r24	; 0x800259 <analog0>
 688:	80 81       	ld	r24, Z
 68a:	80 93 58 02 	sts	0x0258, r24	; 0x800258 <analog1>
 68e:	80 81       	ld	r24, Z
 690:	80 93 57 02 	sts	0x0257, r24	; 0x800257 <analog2>
 694:	80 81       	ld	r24, Z
 696:	80 93 56 02 	sts	0x0256, r24	; 0x800256 <analog3>
 69a:	08 95       	ret

0000069c <USART_Init>:
 69c:	90 bd       	out	0x20, r25	; 32
 69e:	89 b9       	out	0x09, r24	; 9
 6a0:	88 e1       	ldi	r24, 0x18	; 24
 6a2:	8a b9       	out	0x0a, r24	; 10
 6a4:	8e ea       	ldi	r24, 0xAE	; 174
 6a6:	80 bd       	out	0x20, r24	; 32
 6a8:	08 95       	ret

000006aa <SRAM_Init>:

void SRAM_Init(void) {
	// Enable external memory interface
	MCUCR |= (1 << SRE);
 6aa:	85 b7       	in	r24, 0x35	; 53
 6ac:	80 68       	ori	r24, 0x80	; 128
 6ae:	85 bf       	out	0x35, r24	; 53
	// Mask PC7-PC4
	SFIOR |= (1 << XMM2);
 6b0:	80 b7       	in	r24, 0x30	; 48
 6b2:	80 62       	ori	r24, 0x20	; 32
 6b4:	80 bf       	out	0x30, r24	; 48
 6b6:	08 95       	ret

000006b8 <CLK_Init>:
}

void CLK_Init(int TOP) {
 6b8:	9c 01       	movw	r18, r24
	// Set PD4 as output
	DDRD |= (1 << DDD4);
 6ba:	91 b3       	in	r25, 0x11	; 17
 6bc:	90 61       	ori	r25, 0x10	; 16
 6be:	91 bb       	out	0x11, r25	; 17
	
	// Compare output mode: Toggle compare match
	TCCR3A |= (1 << COM3A0); 
 6c0:	eb e8       	ldi	r30, 0x8B	; 139
 6c2:	f0 e0       	ldi	r31, 0x00	; 0
 6c4:	90 81       	ld	r25, Z
 6c6:	90 64       	ori	r25, 0x40	; 64
 6c8:	90 83       	st	Z, r25
	
	// Mode 4, CTC
	TCCR3B |= (1 << WGM32);
 6ca:	ea e8       	ldi	r30, 0x8A	; 138
 6cc:	f0 e0       	ldi	r31, 0x00	; 0
 6ce:	90 81       	ld	r25, Z
 6d0:	98 60       	ori	r25, 0x08	; 8
 6d2:	90 83       	st	Z, r25
	
	// Set counter TOP value
	OCR3A = TOP;
 6d4:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
 6d8:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
	
	// Prescaler 1
	TCCR3B |= (1 << CS30);
 6dc:	80 81       	ld	r24, Z
 6de:	81 60       	ori	r24, 0x01	; 1
 6e0:	80 83       	st	Z, r24
 6e2:	08 95       	ret

000006e4 <main>:
int offset_x = 0;
int offset_y = 0;

int main(void)
{
	DDRA = 0xFF;
 6e4:	8f ef       	ldi	r24, 0xFF	; 255
 6e6:	8a bb       	out	0x1a, r24	; 26
	DDRE |= (0x02);
 6e8:	86 b1       	in	r24, 0x06	; 6
 6ea:	82 60       	ori	r24, 0x02	; 2
 6ec:	86 b9       	out	0x06, r24	; 6
	
	// Right and left button inputs
	DDRD &= !( (1 << PD2) | (1 << PD3) );
 6ee:	81 b3       	in	r24, 0x11	; 17
 6f0:	11 ba       	out	0x11, r1	; 17
	// Data/!Command output
	DDRE |= (1 << PE2);
 6f2:	86 b1       	in	r24, 0x06	; 6
 6f4:	84 60       	ori	r24, 0x04	; 4
 6f6:	86 b9       	out	0x06, r24	; 6
	// Joystick button
	DDRE &= !(1 << PE0);
 6f8:	86 b1       	in	r24, 0x06	; 6
 6fa:	16 b8       	out	0x06, r1	; 6
	
	USART_Init(MYUBRR);
 6fc:	8f e1       	ldi	r24, 0x1F	; 31
 6fe:	90 e0       	ldi	r25, 0x00	; 0
 700:	0e 94 4e 03 	call	0x69c	; 0x69c <USART_Init>
	CLK_Init(0);
 704:	80 e0       	ldi	r24, 0x00	; 0
 706:	90 e0       	ldi	r25, 0x00	; 0
 708:	0e 94 5c 03 	call	0x6b8	; 0x6b8 <CLK_Init>
	SRAM_Init();
 70c:	0e 94 55 03 	call	0x6aa	; 0x6aa <SRAM_Init>
	OLED_Init();
 710:	0e 94 7e 02 	call	0x4fc	; 0x4fc <OLED_Init>
	
	// Setup for printf
	stdout = &uart_stdio;
 714:	ea e5       	ldi	r30, 0x5A	; 90
 716:	f2 e0       	ldi	r31, 0x02	; 2
 718:	80 e0       	ldi	r24, 0x00	; 0
 71a:	91 e0       	ldi	r25, 0x01	; 1
 71c:	93 83       	std	Z+3, r25	; 0x03
 71e:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_stdio;
 720:	91 83       	std	Z+1, r25	; 0x01
 722:	80 83       	st	Z, r24
	char screen = 0;
	char prev_screen = 1;
	
	// OLED_send_command(0xA6);
	
	OLED_reset();
 724:	0e 94 6d 02 	call	0x4da	; 0x4da <OLED_reset>
	char ready_to_move = 1;
	char arrow_pos = 0;
	char min_pos = 0;
	char max_pos = 0;
	char screen = 0;
	char prev_screen = 1;
 728:	ee 24       	eor	r14, r14
 72a:	e3 94       	inc	r14
	char prev_joystick_button = 0;
	char ready_to_move = 1;
	char arrow_pos = 0;
	char min_pos = 0;
	char max_pos = 0;
	char screen = 0;
 72c:	c0 e0       	ldi	r28, 0x00	; 0
	char prev_button_right = 0;
	char prev_joystick_button = 0;
	char ready_to_move = 1;
	char arrow_pos = 0;
	char min_pos = 0;
	char max_pos = 0;
 72e:	d1 2c       	mov	r13, r1
	char prev_button_left = 0;
	char prev_button_right = 0;
	char prev_joystick_button = 0;
	char ready_to_move = 1;
	char arrow_pos = 0;
	char min_pos = 0;
 730:	10 e0       	ldi	r17, 0x00	; 0
	unsigned char received_char = 0;
	char prev_button_left = 0;
	char prev_button_right = 0;
	char prev_joystick_button = 0;
	char ready_to_move = 1;
	char arrow_pos = 0;
 732:	f1 2c       	mov	r15, r1
	
	unsigned char received_char = 0;
	char prev_button_left = 0;
	char prev_button_right = 0;
	char prev_joystick_button = 0;
	char ready_to_move = 1;
 734:	01 e0       	ldi	r16, 0x01	; 1
	stdin = &uart_stdio;
	
	unsigned char received_char = 0;
	char prev_button_left = 0;
	char prev_button_right = 0;
	char prev_joystick_button = 0;
 736:	20 e0       	ldi	r18, 0x00	; 0
 738:	04 c0       	rjmp	.+8      	; 0x742 <main+0x5e>
				OLED_print_arrow(arrow_pos, 0);
				ready_to_move = 0;
			}
			else if (direction == LEFT) {
				
				ready_to_move = 0;
 73a:	00 e0       	ldi	r16, 0x00	; 0
 73c:	01 c0       	rjmp	.+2      	; 0x740 <main+0x5c>
			}
			else if (direction == RIGHT) {
				
				ready_to_move = 0;
 73e:	00 e0       	ldi	r16, 0x00	; 0
 740:	2d 2f       	mov	r18, r29
		// printf("a\n");

		
		// received_char = USART_Receive();
		
		char button_left = !!(PIND & (1 << PIND3));
 742:	80 b3       	in	r24, 0x10	; 16
		char button_right = !!(PIND & (1 << PIND2));
 744:	80 b3       	in	r24, 0x10	; 16
		char joystick_button = !(PINE & (1 << PINE0));
 746:	85 b1       	in	r24, 0x05	; 5
 748:	d1 e0       	ldi	r29, 0x01	; 1
 74a:	98 2f       	mov	r25, r24
 74c:	91 70       	andi	r25, 0x01	; 1
 74e:	80 fd       	sbrc	r24, 0
 750:	d0 e0       	ldi	r29, 0x00	; 0
		
		if (button_right && !prev_button_right)
			button_right_pressed = 1;
		if (button_left && !prev_button_left)
			button_left_pressed = 1;
		if (joystick_button && !prev_joystick_button)
 752:	91 11       	cpse	r25, r1
 754:	04 c0       	rjmp	.+8      	; 0x75e <main+0x7a>
 756:	22 23       	and	r18, r18
 758:	21 f0       	breq	.+8      	; 0x762 <main+0x7e>
		
		char button_left = !!(PIND & (1 << PIND3));
		char button_right = !!(PIND & (1 << PIND2));
		char joystick_button = !(PINE & (1 << PINE0));
		
		char button_right_pressed, button_left_pressed, joystick_button_pressed = 0;
 75a:	c1 2c       	mov	r12, r1
 75c:	04 c0       	rjmp	.+8      	; 0x766 <main+0x82>
 75e:	c1 2c       	mov	r12, r1
 760:	02 c0       	rjmp	.+4      	; 0x766 <main+0x82>
		if (button_right && !prev_button_right)
			button_right_pressed = 1;
		if (button_left && !prev_button_left)
			button_left_pressed = 1;
		if (joystick_button && !prev_joystick_button)
			joystick_button_pressed = 1;
 762:	cc 24       	eor	r12, r12
 764:	c3 94       	inc	r12
		
		
		if (screen != prev_screen) {
 766:	ce 15       	cp	r28, r14
 768:	c1 f0       	breq	.+48     	; 0x79a <main+0xb6>
			if (screen == 0) {
 76a:	c1 11       	cpse	r28, r1
 76c:	07 c0       	rjmp	.+14     	; 0x77c <main+0x98>
				screen0();
 76e:	0e 94 c1 02 	call	0x582	; 0x582 <screen0>
				min_pos = 2;
				max_pos = 3;
 772:	0f 2e       	mov	r0, r31
 774:	f3 e0       	ldi	r31, 0x03	; 3
 776:	df 2e       	mov	r13, r31
 778:	f0 2d       	mov	r31, r0
		
		
		if (screen != prev_screen) {
			if (screen == 0) {
				screen0();
				min_pos = 2;
 77a:	12 e0       	ldi	r17, 0x02	; 2
				max_pos = 3;
			}
			if (screen == 1) {
 77c:	c1 30       	cpi	r28, 0x01	; 1
 77e:	39 f4       	brne	.+14     	; 0x78e <main+0xaa>
				screen1();
 780:	0e 94 f4 02 	call	0x5e8	; 0x5e8 <screen1>
				min_pos = 2;
				max_pos = 6;
 784:	0f 2e       	mov	r0, r31
 786:	f6 e0       	ldi	r31, 0x06	; 6
 788:	df 2e       	mov	r13, r31
 78a:	f0 2d       	mov	r31, r0
				min_pos = 2;
				max_pos = 3;
			}
			if (screen == 1) {
				screen1();
				min_pos = 2;
 78c:	12 e0       	ldi	r17, 0x02	; 2
				max_pos = 6;
			}
			arrow_pos = min_pos;
			OLED_print_arrow(arrow_pos, 0);
 78e:	60 e0       	ldi	r22, 0x00	; 0
 790:	81 2f       	mov	r24, r17
 792:	0e 94 06 02 	call	0x40c	; 0x40c <OLED_print_arrow>
			prev_screen = screen;
 796:	ec 2e       	mov	r14, r28
			if (screen == 1) {
				screen1();
				min_pos = 2;
				max_pos = 6;
			}
			arrow_pos = min_pos;
 798:	f1 2e       	mov	r15, r17
			OLED_print_arrow(arrow_pos, 0);
			prev_screen = screen;
		} 
		
		
		if (screen == 0 && joystick_button_pressed) {
 79a:	c1 11       	cpse	r28, r1
 79c:	11 c0       	rjmp	.+34     	; 0x7c0 <main+0xdc>
 79e:	cc 20       	and	r12, r12
 7a0:	79 f0       	breq	.+30     	; 0x7c0 <main+0xdc>
			if (arrow_pos == min_pos) {
 7a2:	f1 12       	cpse	r15, r17
 7a4:	04 c0       	rjmp	.+8      	; 0x7ae <main+0xca>
				printf("Button pressed\n");
 7a6:	8f e2       	ldi	r24, 0x2F	; 47
 7a8:	92 e0       	ldi	r25, 0x02	; 2
 7aa:	0e 94 f7 04 	call	0x9ee	; 0x9ee <puts>
			}
			if (arrow_pos == min_pos + 1) {
 7ae:	2f 2d       	mov	r18, r15
 7b0:	30 e0       	ldi	r19, 0x00	; 0
 7b2:	81 2f       	mov	r24, r17
 7b4:	90 e0       	ldi	r25, 0x00	; 0
 7b6:	01 96       	adiw	r24, 0x01	; 1
 7b8:	28 17       	cp	r18, r24
 7ba:	39 07       	cpc	r19, r25
 7bc:	e1 f4       	brne	.+56     	; 0x7f6 <main+0x112>
 7be:	18 c0       	rjmp	.+48     	; 0x7f0 <main+0x10c>
				screen = 1;
			}
		}
		else if (screen == 1 && joystick_button_pressed) {
 7c0:	c1 30       	cpi	r28, 0x01	; 1
 7c2:	c9 f4       	brne	.+50     	; 0x7f6 <main+0x112>
 7c4:	cc 20       	and	r12, r12
 7c6:	b9 f0       	breq	.+46     	; 0x7f6 <main+0x112>

			if (arrow_pos == max_pos) {
 7c8:	fd 14       	cp	r15, r13
 7ca:	a1 f0       	breq	.+40     	; 0x7f4 <main+0x110>
				screen = 0;
			}
			else {
				printf("Option %d selected\n", arrow_pos-min_pos+1);
 7cc:	8f 2d       	mov	r24, r15
 7ce:	90 e0       	ldi	r25, 0x00	; 0
 7d0:	81 1b       	sub	r24, r17
 7d2:	91 09       	sbc	r25, r1
 7d4:	01 96       	adiw	r24, 0x01	; 1
 7d6:	9f 93       	push	r25
 7d8:	8f 93       	push	r24
 7da:	8e e3       	ldi	r24, 0x3E	; 62
 7dc:	92 e0       	ldi	r25, 0x02	; 2
 7de:	9f 93       	push	r25
 7e0:	8f 93       	push	r24
 7e2:	0e 94 e1 04 	call	0x9c2	; 0x9c2 <printf>
 7e6:	0f 90       	pop	r0
 7e8:	0f 90       	pop	r0
 7ea:	0f 90       	pop	r0
 7ec:	0f 90       	pop	r0
 7ee:	03 c0       	rjmp	.+6      	; 0x7f6 <main+0x112>
		if (screen == 0 && joystick_button_pressed) {
			if (arrow_pos == min_pos) {
				printf("Button pressed\n");
			}
			if (arrow_pos == min_pos + 1) {
				screen = 1;
 7f0:	c1 e0       	ldi	r28, 0x01	; 1
 7f2:	01 c0       	rjmp	.+2      	; 0x7f6 <main+0x112>
			}
		}
		else if (screen == 1 && joystick_button_pressed) {

			if (arrow_pos == max_pos) {
				screen = 0;
 7f4:	c0 e0       	ldi	r28, 0x00	; 0
				printf("Option %d selected\n", arrow_pos-min_pos+1);
			}
		}
		
		
		Read_ADC();
 7f6:	0e 94 31 03 	call	0x662	; 0x662 <Read_ADC>
		int x = (100*(analog0 - 128))/128 - offset_x;
 7fa:	20 91 59 02 	lds	r18, 0x0259	; 0x800259 <analog0>
 7fe:	30 e0       	ldi	r19, 0x00	; 0
 800:	20 58       	subi	r18, 0x80	; 128
 802:	31 09       	sbc	r19, r1
 804:	44 e6       	ldi	r20, 0x64	; 100
 806:	42 9f       	mul	r20, r18
 808:	c0 01       	movw	r24, r0
 80a:	43 9f       	mul	r20, r19
 80c:	90 0d       	add	r25, r0
 80e:	11 24       	eor	r1, r1
 810:	99 23       	and	r25, r25
 812:	14 f4       	brge	.+4      	; 0x818 <main+0x134>
 814:	81 58       	subi	r24, 0x81	; 129
 816:	9f 4f       	sbci	r25, 0xFF	; 255
 818:	88 0f       	add	r24, r24
 81a:	89 2f       	mov	r24, r25
 81c:	88 1f       	adc	r24, r24
 81e:	99 0b       	sbc	r25, r25
 820:	20 91 54 02 	lds	r18, 0x0254	; 0x800254 <offset_x>
 824:	30 91 55 02 	lds	r19, 0x0255	; 0x800255 <offset_x+0x1>
 828:	82 1b       	sub	r24, r18
 82a:	93 0b       	sbc	r25, r19
		int y = (100*(analog1 - 128))/128 - offset_y;
 82c:	40 91 58 02 	lds	r20, 0x0258	; 0x800258 <analog1>
 830:	50 e0       	ldi	r21, 0x00	; 0
 832:	40 58       	subi	r20, 0x80	; 128
 834:	51 09       	sbc	r21, r1
 836:	64 e6       	ldi	r22, 0x64	; 100
 838:	64 9f       	mul	r22, r20
 83a:	90 01       	movw	r18, r0
 83c:	65 9f       	mul	r22, r21
 83e:	30 0d       	add	r19, r0
 840:	11 24       	eor	r1, r1
 842:	33 23       	and	r19, r19
 844:	14 f4       	brge	.+4      	; 0x84a <main+0x166>
 846:	21 58       	subi	r18, 0x81	; 129
 848:	3f 4f       	sbci	r19, 0xFF	; 255
 84a:	22 0f       	add	r18, r18
 84c:	23 2f       	mov	r18, r19
 84e:	22 1f       	adc	r18, r18
 850:	33 0b       	sbc	r19, r19
 852:	40 91 52 02 	lds	r20, 0x0252	; 0x800252 <__data_end>
 856:	50 91 53 02 	lds	r21, 0x0253	; 0x800253 <__data_end+0x1>
 85a:	24 1b       	sub	r18, r20
 85c:	35 0b       	sbc	r19, r21

		unsigned int direction = CENTER;
		if      (x > 0 && abs(y) < abs(x)) direction = RIGHT; 
 85e:	18 16       	cp	r1, r24
 860:	19 06       	cpc	r1, r25
 862:	8c f4       	brge	.+34     	; 0x886 <main+0x1a2>
 864:	a9 01       	movw	r20, r18
 866:	33 23       	and	r19, r19
 868:	24 f4       	brge	.+8      	; 0x872 <main+0x18e>
 86a:	44 27       	eor	r20, r20
 86c:	55 27       	eor	r21, r21
 86e:	42 1b       	sub	r20, r18
 870:	53 0b       	sbc	r21, r19
 872:	bc 01       	movw	r22, r24
 874:	99 23       	and	r25, r25
 876:	24 f4       	brge	.+8      	; 0x880 <main+0x19c>
 878:	66 27       	eor	r22, r22
 87a:	77 27       	eor	r23, r23
 87c:	68 1b       	sub	r22, r24
 87e:	79 0b       	sbc	r23, r25
 880:	46 17       	cp	r20, r22
 882:	57 07       	cpc	r21, r23
 884:	ec f1       	brlt	.+122    	; 0x900 <main+0x21c>
		else if (y > 0 && abs(x) < abs(y)) direction = UP;
 886:	12 16       	cp	r1, r18
 888:	13 06       	cpc	r1, r19
 88a:	8c f4       	brge	.+34     	; 0x8ae <main+0x1ca>
 88c:	ac 01       	movw	r20, r24
 88e:	99 23       	and	r25, r25
 890:	24 f4       	brge	.+8      	; 0x89a <main+0x1b6>
 892:	44 27       	eor	r20, r20
 894:	55 27       	eor	r21, r21
 896:	48 1b       	sub	r20, r24
 898:	59 0b       	sbc	r21, r25
 89a:	b9 01       	movw	r22, r18
 89c:	33 23       	and	r19, r19
 89e:	24 f4       	brge	.+8      	; 0x8a8 <main+0x1c4>
 8a0:	66 27       	eor	r22, r22
 8a2:	77 27       	eor	r23, r23
 8a4:	62 1b       	sub	r22, r18
 8a6:	73 0b       	sbc	r23, r19
 8a8:	46 17       	cp	r20, r22
 8aa:	57 07       	cpc	r21, r23
 8ac:	64 f1       	brlt	.+88     	; 0x906 <main+0x222>
		else if (x < 0 && abs(y) < abs(x)) direction = LEFT;
 8ae:	99 23       	and	r25, r25
 8b0:	8c f4       	brge	.+34     	; 0x8d4 <main+0x1f0>
 8b2:	a9 01       	movw	r20, r18
 8b4:	33 23       	and	r19, r19
 8b6:	24 f4       	brge	.+8      	; 0x8c0 <main+0x1dc>
 8b8:	44 27       	eor	r20, r20
 8ba:	55 27       	eor	r21, r21
 8bc:	42 1b       	sub	r20, r18
 8be:	53 0b       	sbc	r21, r19
 8c0:	bc 01       	movw	r22, r24
 8c2:	99 23       	and	r25, r25
 8c4:	24 f4       	brge	.+8      	; 0x8ce <main+0x1ea>
 8c6:	66 27       	eor	r22, r22
 8c8:	77 27       	eor	r23, r23
 8ca:	68 1b       	sub	r22, r24
 8cc:	79 0b       	sbc	r23, r25
 8ce:	46 17       	cp	r20, r22
 8d0:	57 07       	cpc	r21, r23
 8d2:	e4 f0       	brlt	.+56     	; 0x90c <main+0x228>
		else if (y < 0 && abs(x) < abs(y)) direction = DOWN; 
 8d4:	33 23       	and	r19, r19
 8d6:	ec f4       	brge	.+58     	; 0x912 <main+0x22e>
 8d8:	ac 01       	movw	r20, r24
 8da:	99 23       	and	r25, r25
 8dc:	24 f4       	brge	.+8      	; 0x8e6 <main+0x202>
 8de:	44 27       	eor	r20, r20
 8e0:	55 27       	eor	r21, r21
 8e2:	48 1b       	sub	r20, r24
 8e4:	59 0b       	sbc	r21, r25
 8e6:	b9 01       	movw	r22, r18
 8e8:	33 23       	and	r19, r19
 8ea:	24 f4       	brge	.+8      	; 0x8f4 <main+0x210>
 8ec:	66 27       	eor	r22, r22
 8ee:	77 27       	eor	r23, r23
 8f0:	62 1b       	sub	r22, r18
 8f2:	73 0b       	sbc	r23, r19
 8f4:	46 17       	cp	r20, r22
 8f6:	57 07       	cpc	r21, r23
 8f8:	7c f0       	brlt	.+30     	; 0x918 <main+0x234>
		
		Read_ADC();
		int x = (100*(analog0 - 128))/128 - offset_x;
		int y = (100*(analog1 - 128))/128 - offset_y;

		unsigned int direction = CENTER;
 8fa:	40 e0       	ldi	r20, 0x00	; 0
 8fc:	50 e0       	ldi	r21, 0x00	; 0
 8fe:	0e c0       	rjmp	.+28     	; 0x91c <main+0x238>
		if      (x > 0 && abs(y) < abs(x)) direction = RIGHT; 
 900:	44 e0       	ldi	r20, 0x04	; 4
 902:	50 e0       	ldi	r21, 0x00	; 0
 904:	0b c0       	rjmp	.+22     	; 0x91c <main+0x238>
		else if (y > 0 && abs(x) < abs(y)) direction = UP;
 906:	41 e0       	ldi	r20, 0x01	; 1
 908:	50 e0       	ldi	r21, 0x00	; 0
 90a:	08 c0       	rjmp	.+16     	; 0x91c <main+0x238>
		else if (x < 0 && abs(y) < abs(x)) direction = LEFT;
 90c:	43 e0       	ldi	r20, 0x03	; 3
 90e:	50 e0       	ldi	r21, 0x00	; 0
 910:	05 c0       	rjmp	.+10     	; 0x91c <main+0x238>
		
		Read_ADC();
		int x = (100*(analog0 - 128))/128 - offset_x;
		int y = (100*(analog1 - 128))/128 - offset_y;

		unsigned int direction = CENTER;
 912:	40 e0       	ldi	r20, 0x00	; 0
 914:	50 e0       	ldi	r21, 0x00	; 0
 916:	02 c0       	rjmp	.+4      	; 0x91c <main+0x238>
		if      (x > 0 && abs(y) < abs(x)) direction = RIGHT; 
		else if (y > 0 && abs(x) < abs(y)) direction = UP;
		else if (x < 0 && abs(y) < abs(x)) direction = LEFT;
		else if (y < 0 && abs(x) < abs(y)) direction = DOWN; 
 918:	42 e0       	ldi	r20, 0x02	; 2
 91a:	50 e0       	ldi	r21, 0x00	; 0
		
		if (x*x + y*y < 80*80) direction = DEAD;
 91c:	88 9f       	mul	r24, r24
 91e:	b0 01       	movw	r22, r0
 920:	89 9f       	mul	r24, r25
 922:	70 0d       	add	r23, r0
 924:	70 0d       	add	r23, r0
 926:	11 24       	eor	r1, r1
 928:	22 9f       	mul	r18, r18
 92a:	c0 01       	movw	r24, r0
 92c:	23 9f       	mul	r18, r19
 92e:	90 0d       	add	r25, r0
 930:	90 0d       	add	r25, r0
 932:	11 24       	eor	r1, r1
 934:	86 0f       	add	r24, r22
 936:	97 1f       	adc	r25, r23
 938:	81 15       	cp	r24, r1
 93a:	29 e1       	ldi	r18, 0x19	; 25
 93c:	92 07       	cpc	r25, r18
 93e:	14 f4       	brge	.+4      	; 0x944 <main+0x260>
 940:	45 e0       	ldi	r20, 0x05	; 5
 942:	50 e0       	ldi	r21, 0x00	; 0
		if (x*x + y*y < 60*60) direction = CENTER;
 944:	80 31       	cpi	r24, 0x10	; 16
 946:	9e 40       	sbci	r25, 0x0E	; 14
 948:	14 f4       	brge	.+4      	; 0x94e <main+0x26a>
 94a:	40 e0       	ldi	r20, 0x00	; 0
 94c:	50 e0       	ldi	r21, 0x00	; 0
		
		
		if (direction == CENTER)
 94e:	41 15       	cp	r20, r1
 950:	51 05       	cpc	r21, r1
 952:	09 f4       	brne	.+2      	; 0x956 <main+0x272>
			ready_to_move = 1;
 954:	01 e0       	ldi	r16, 0x01	; 1
		
		if (ready_to_move) {
 956:	00 23       	and	r16, r16
 958:	09 f4       	brne	.+2      	; 0x95c <main+0x278>
 95a:	f2 ce       	rjmp	.-540    	; 0x740 <main+0x5c>
			if (direction == UP) {
 95c:	41 30       	cpi	r20, 0x01	; 1
 95e:	51 05       	cpc	r21, r1
 960:	91 f4       	brne	.+36     	; 0x986 <main+0x2a2>
				OLED_goto_column(0);
 962:	80 e0       	ldi	r24, 0x00	; 0
 964:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <OLED_goto_column>
				OLED_print(" ", 1);
 968:	61 e0       	ldi	r22, 0x01	; 1
 96a:	70 e0       	ldi	r23, 0x00	; 0
 96c:	81 e3       	ldi	r24, 0x31	; 49
 96e:	91 e0       	ldi	r25, 0x01	; 1
 970:	0e 94 40 02 	call	0x480	; 0x480 <OLED_print>
				if (arrow_pos > min_pos) 
 974:	1f 15       	cp	r17, r15
 976:	08 f4       	brcc	.+2      	; 0x97a <main+0x296>
					arrow_pos -= 1;
 978:	fa 94       	dec	r15
				OLED_print_arrow(arrow_pos, 0);
 97a:	60 e0       	ldi	r22, 0x00	; 0
 97c:	8f 2d       	mov	r24, r15
 97e:	0e 94 06 02 	call	0x40c	; 0x40c <OLED_print_arrow>
				ready_to_move = 0;
 982:	00 e0       	ldi	r16, 0x00	; 0
 984:	dd ce       	rjmp	.-582    	; 0x740 <main+0x5c>
			}
			else if (direction == DOWN) {
 986:	42 30       	cpi	r20, 0x02	; 2
 988:	51 05       	cpc	r21, r1
 98a:	91 f4       	brne	.+36     	; 0x9b0 <main+0x2cc>
				OLED_goto_column(0);
 98c:	80 e0       	ldi	r24, 0x00	; 0
 98e:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <OLED_goto_column>
				OLED_print(" ", 1);
 992:	61 e0       	ldi	r22, 0x01	; 1
 994:	70 e0       	ldi	r23, 0x00	; 0
 996:	81 e3       	ldi	r24, 0x31	; 49
 998:	91 e0       	ldi	r25, 0x01	; 1
 99a:	0e 94 40 02 	call	0x480	; 0x480 <OLED_print>
				if (arrow_pos < max_pos) 
 99e:	fd 14       	cp	r15, r13
 9a0:	08 f4       	brcc	.+2      	; 0x9a4 <main+0x2c0>
					arrow_pos += 1;
 9a2:	f3 94       	inc	r15
				OLED_print_arrow(arrow_pos, 0);
 9a4:	60 e0       	ldi	r22, 0x00	; 0
 9a6:	8f 2d       	mov	r24, r15
 9a8:	0e 94 06 02 	call	0x40c	; 0x40c <OLED_print_arrow>
				ready_to_move = 0;
 9ac:	00 e0       	ldi	r16, 0x00	; 0
 9ae:	c8 ce       	rjmp	.-624    	; 0x740 <main+0x5c>
			}
			else if (direction == LEFT) {
 9b0:	43 30       	cpi	r20, 0x03	; 3
 9b2:	51 05       	cpc	r21, r1
 9b4:	09 f4       	brne	.+2      	; 0x9b8 <main+0x2d4>
 9b6:	c1 ce       	rjmp	.-638    	; 0x73a <main+0x56>
				
				ready_to_move = 0;
			}
			else if (direction == RIGHT) {
 9b8:	44 30       	cpi	r20, 0x04	; 4
 9ba:	51 05       	cpc	r21, r1
 9bc:	09 f0       	breq	.+2      	; 0x9c0 <main+0x2dc>
 9be:	c0 ce       	rjmp	.-640    	; 0x740 <main+0x5c>
 9c0:	be ce       	rjmp	.-644    	; 0x73e <main+0x5a>

000009c2 <printf>:
 9c2:	a0 e0       	ldi	r26, 0x00	; 0
 9c4:	b0 e0       	ldi	r27, 0x00	; 0
 9c6:	e7 ee       	ldi	r30, 0xE7	; 231
 9c8:	f4 e0       	ldi	r31, 0x04	; 4
 9ca:	0c 94 c8 07 	jmp	0xf90	; 0xf90 <__prologue_saves__+0x20>
 9ce:	ae 01       	movw	r20, r28
 9d0:	4b 5f       	subi	r20, 0xFB	; 251
 9d2:	5f 4f       	sbci	r21, 0xFF	; 255
 9d4:	fa 01       	movw	r30, r20
 9d6:	61 91       	ld	r22, Z+
 9d8:	71 91       	ld	r23, Z+
 9da:	af 01       	movw	r20, r30
 9dc:	80 91 5c 02 	lds	r24, 0x025C	; 0x80025c <__iob+0x2>
 9e0:	90 91 5d 02 	lds	r25, 0x025D	; 0x80025d <__iob+0x3>
 9e4:	0e 94 27 05 	call	0xa4e	; 0xa4e <vfprintf>
 9e8:	e2 e0       	ldi	r30, 0x02	; 2
 9ea:	0c 94 e4 07 	jmp	0xfc8	; 0xfc8 <__epilogue_restores__+0x20>

000009ee <puts>:
 9ee:	0f 93       	push	r16
 9f0:	1f 93       	push	r17
 9f2:	cf 93       	push	r28
 9f4:	df 93       	push	r29
 9f6:	e0 91 5c 02 	lds	r30, 0x025C	; 0x80025c <__iob+0x2>
 9fa:	f0 91 5d 02 	lds	r31, 0x025D	; 0x80025d <__iob+0x3>
 9fe:	23 81       	ldd	r18, Z+3	; 0x03
 a00:	21 ff       	sbrs	r18, 1
 a02:	1b c0       	rjmp	.+54     	; 0xa3a <puts+0x4c>
 a04:	8c 01       	movw	r16, r24
 a06:	d0 e0       	ldi	r29, 0x00	; 0
 a08:	c0 e0       	ldi	r28, 0x00	; 0
 a0a:	f8 01       	movw	r30, r16
 a0c:	81 91       	ld	r24, Z+
 a0e:	8f 01       	movw	r16, r30
 a10:	60 91 5c 02 	lds	r22, 0x025C	; 0x80025c <__iob+0x2>
 a14:	70 91 5d 02 	lds	r23, 0x025D	; 0x80025d <__iob+0x3>
 a18:	db 01       	movw	r26, r22
 a1a:	18 96       	adiw	r26, 0x08	; 8
 a1c:	ed 91       	ld	r30, X+
 a1e:	fc 91       	ld	r31, X
 a20:	19 97       	sbiw	r26, 0x09	; 9
 a22:	88 23       	and	r24, r24
 a24:	31 f0       	breq	.+12     	; 0xa32 <puts+0x44>
 a26:	09 95       	icall
 a28:	89 2b       	or	r24, r25
 a2a:	79 f3       	breq	.-34     	; 0xa0a <puts+0x1c>
 a2c:	df ef       	ldi	r29, 0xFF	; 255
 a2e:	cf ef       	ldi	r28, 0xFF	; 255
 a30:	ec cf       	rjmp	.-40     	; 0xa0a <puts+0x1c>
 a32:	8a e0       	ldi	r24, 0x0A	; 10
 a34:	09 95       	icall
 a36:	89 2b       	or	r24, r25
 a38:	19 f0       	breq	.+6      	; 0xa40 <puts+0x52>
 a3a:	8f ef       	ldi	r24, 0xFF	; 255
 a3c:	9f ef       	ldi	r25, 0xFF	; 255
 a3e:	02 c0       	rjmp	.+4      	; 0xa44 <puts+0x56>
 a40:	8d 2f       	mov	r24, r29
 a42:	9c 2f       	mov	r25, r28
 a44:	df 91       	pop	r29
 a46:	cf 91       	pop	r28
 a48:	1f 91       	pop	r17
 a4a:	0f 91       	pop	r16
 a4c:	08 95       	ret

00000a4e <vfprintf>:
 a4e:	ab e0       	ldi	r26, 0x0B	; 11
 a50:	b0 e0       	ldi	r27, 0x00	; 0
 a52:	ed e2       	ldi	r30, 0x2D	; 45
 a54:	f5 e0       	ldi	r31, 0x05	; 5
 a56:	0c 94 b8 07 	jmp	0xf70	; 0xf70 <__prologue_saves__>
 a5a:	6c 01       	movw	r12, r24
 a5c:	7b 01       	movw	r14, r22
 a5e:	8a 01       	movw	r16, r20
 a60:	fc 01       	movw	r30, r24
 a62:	17 82       	std	Z+7, r1	; 0x07
 a64:	16 82       	std	Z+6, r1	; 0x06
 a66:	83 81       	ldd	r24, Z+3	; 0x03
 a68:	81 ff       	sbrs	r24, 1
 a6a:	cc c1       	rjmp	.+920    	; 0xe04 <vfprintf+0x3b6>
 a6c:	ce 01       	movw	r24, r28
 a6e:	01 96       	adiw	r24, 0x01	; 1
 a70:	3c 01       	movw	r6, r24
 a72:	f6 01       	movw	r30, r12
 a74:	93 81       	ldd	r25, Z+3	; 0x03
 a76:	f7 01       	movw	r30, r14
 a78:	93 fd       	sbrc	r25, 3
 a7a:	85 91       	lpm	r24, Z+
 a7c:	93 ff       	sbrs	r25, 3
 a7e:	81 91       	ld	r24, Z+
 a80:	7f 01       	movw	r14, r30
 a82:	88 23       	and	r24, r24
 a84:	09 f4       	brne	.+2      	; 0xa88 <vfprintf+0x3a>
 a86:	ba c1       	rjmp	.+884    	; 0xdfc <vfprintf+0x3ae>
 a88:	85 32       	cpi	r24, 0x25	; 37
 a8a:	39 f4       	brne	.+14     	; 0xa9a <vfprintf+0x4c>
 a8c:	93 fd       	sbrc	r25, 3
 a8e:	85 91       	lpm	r24, Z+
 a90:	93 ff       	sbrs	r25, 3
 a92:	81 91       	ld	r24, Z+
 a94:	7f 01       	movw	r14, r30
 a96:	85 32       	cpi	r24, 0x25	; 37
 a98:	29 f4       	brne	.+10     	; 0xaa4 <vfprintf+0x56>
 a9a:	b6 01       	movw	r22, r12
 a9c:	90 e0       	ldi	r25, 0x00	; 0
 a9e:	0e 94 1e 07 	call	0xe3c	; 0xe3c <fputc>
 aa2:	e7 cf       	rjmp	.-50     	; 0xa72 <vfprintf+0x24>
 aa4:	91 2c       	mov	r9, r1
 aa6:	21 2c       	mov	r2, r1
 aa8:	31 2c       	mov	r3, r1
 aaa:	ff e1       	ldi	r31, 0x1F	; 31
 aac:	f3 15       	cp	r31, r3
 aae:	d8 f0       	brcs	.+54     	; 0xae6 <vfprintf+0x98>
 ab0:	8b 32       	cpi	r24, 0x2B	; 43
 ab2:	79 f0       	breq	.+30     	; 0xad2 <vfprintf+0x84>
 ab4:	38 f4       	brcc	.+14     	; 0xac4 <vfprintf+0x76>
 ab6:	80 32       	cpi	r24, 0x20	; 32
 ab8:	79 f0       	breq	.+30     	; 0xad8 <vfprintf+0x8a>
 aba:	83 32       	cpi	r24, 0x23	; 35
 abc:	a1 f4       	brne	.+40     	; 0xae6 <vfprintf+0x98>
 abe:	23 2d       	mov	r18, r3
 ac0:	20 61       	ori	r18, 0x10	; 16
 ac2:	1d c0       	rjmp	.+58     	; 0xafe <vfprintf+0xb0>
 ac4:	8d 32       	cpi	r24, 0x2D	; 45
 ac6:	61 f0       	breq	.+24     	; 0xae0 <vfprintf+0x92>
 ac8:	80 33       	cpi	r24, 0x30	; 48
 aca:	69 f4       	brne	.+26     	; 0xae6 <vfprintf+0x98>
 acc:	23 2d       	mov	r18, r3
 ace:	21 60       	ori	r18, 0x01	; 1
 ad0:	16 c0       	rjmp	.+44     	; 0xafe <vfprintf+0xb0>
 ad2:	83 2d       	mov	r24, r3
 ad4:	82 60       	ori	r24, 0x02	; 2
 ad6:	38 2e       	mov	r3, r24
 ad8:	e3 2d       	mov	r30, r3
 ada:	e4 60       	ori	r30, 0x04	; 4
 adc:	3e 2e       	mov	r3, r30
 ade:	2a c0       	rjmp	.+84     	; 0xb34 <vfprintf+0xe6>
 ae0:	f3 2d       	mov	r31, r3
 ae2:	f8 60       	ori	r31, 0x08	; 8
 ae4:	1d c0       	rjmp	.+58     	; 0xb20 <vfprintf+0xd2>
 ae6:	37 fc       	sbrc	r3, 7
 ae8:	2d c0       	rjmp	.+90     	; 0xb44 <vfprintf+0xf6>
 aea:	20 ed       	ldi	r18, 0xD0	; 208
 aec:	28 0f       	add	r18, r24
 aee:	2a 30       	cpi	r18, 0x0A	; 10
 af0:	40 f0       	brcs	.+16     	; 0xb02 <vfprintf+0xb4>
 af2:	8e 32       	cpi	r24, 0x2E	; 46
 af4:	b9 f4       	brne	.+46     	; 0xb24 <vfprintf+0xd6>
 af6:	36 fc       	sbrc	r3, 6
 af8:	81 c1       	rjmp	.+770    	; 0xdfc <vfprintf+0x3ae>
 afa:	23 2d       	mov	r18, r3
 afc:	20 64       	ori	r18, 0x40	; 64
 afe:	32 2e       	mov	r3, r18
 b00:	19 c0       	rjmp	.+50     	; 0xb34 <vfprintf+0xe6>
 b02:	36 fe       	sbrs	r3, 6
 b04:	06 c0       	rjmp	.+12     	; 0xb12 <vfprintf+0xc4>
 b06:	8a e0       	ldi	r24, 0x0A	; 10
 b08:	98 9e       	mul	r9, r24
 b0a:	20 0d       	add	r18, r0
 b0c:	11 24       	eor	r1, r1
 b0e:	92 2e       	mov	r9, r18
 b10:	11 c0       	rjmp	.+34     	; 0xb34 <vfprintf+0xe6>
 b12:	ea e0       	ldi	r30, 0x0A	; 10
 b14:	2e 9e       	mul	r2, r30
 b16:	20 0d       	add	r18, r0
 b18:	11 24       	eor	r1, r1
 b1a:	22 2e       	mov	r2, r18
 b1c:	f3 2d       	mov	r31, r3
 b1e:	f0 62       	ori	r31, 0x20	; 32
 b20:	3f 2e       	mov	r3, r31
 b22:	08 c0       	rjmp	.+16     	; 0xb34 <vfprintf+0xe6>
 b24:	8c 36       	cpi	r24, 0x6C	; 108
 b26:	21 f4       	brne	.+8      	; 0xb30 <vfprintf+0xe2>
 b28:	83 2d       	mov	r24, r3
 b2a:	80 68       	ori	r24, 0x80	; 128
 b2c:	38 2e       	mov	r3, r24
 b2e:	02 c0       	rjmp	.+4      	; 0xb34 <vfprintf+0xe6>
 b30:	88 36       	cpi	r24, 0x68	; 104
 b32:	41 f4       	brne	.+16     	; 0xb44 <vfprintf+0xf6>
 b34:	f7 01       	movw	r30, r14
 b36:	93 fd       	sbrc	r25, 3
 b38:	85 91       	lpm	r24, Z+
 b3a:	93 ff       	sbrs	r25, 3
 b3c:	81 91       	ld	r24, Z+
 b3e:	7f 01       	movw	r14, r30
 b40:	81 11       	cpse	r24, r1
 b42:	b3 cf       	rjmp	.-154    	; 0xaaa <vfprintf+0x5c>
 b44:	98 2f       	mov	r25, r24
 b46:	9f 7d       	andi	r25, 0xDF	; 223
 b48:	95 54       	subi	r25, 0x45	; 69
 b4a:	93 30       	cpi	r25, 0x03	; 3
 b4c:	28 f4       	brcc	.+10     	; 0xb58 <vfprintf+0x10a>
 b4e:	0c 5f       	subi	r16, 0xFC	; 252
 b50:	1f 4f       	sbci	r17, 0xFF	; 255
 b52:	9f e3       	ldi	r25, 0x3F	; 63
 b54:	99 83       	std	Y+1, r25	; 0x01
 b56:	0d c0       	rjmp	.+26     	; 0xb72 <vfprintf+0x124>
 b58:	83 36       	cpi	r24, 0x63	; 99
 b5a:	31 f0       	breq	.+12     	; 0xb68 <vfprintf+0x11a>
 b5c:	83 37       	cpi	r24, 0x73	; 115
 b5e:	71 f0       	breq	.+28     	; 0xb7c <vfprintf+0x12e>
 b60:	83 35       	cpi	r24, 0x53	; 83
 b62:	09 f0       	breq	.+2      	; 0xb66 <vfprintf+0x118>
 b64:	59 c0       	rjmp	.+178    	; 0xc18 <vfprintf+0x1ca>
 b66:	21 c0       	rjmp	.+66     	; 0xbaa <vfprintf+0x15c>
 b68:	f8 01       	movw	r30, r16
 b6a:	80 81       	ld	r24, Z
 b6c:	89 83       	std	Y+1, r24	; 0x01
 b6e:	0e 5f       	subi	r16, 0xFE	; 254
 b70:	1f 4f       	sbci	r17, 0xFF	; 255
 b72:	88 24       	eor	r8, r8
 b74:	83 94       	inc	r8
 b76:	91 2c       	mov	r9, r1
 b78:	53 01       	movw	r10, r6
 b7a:	13 c0       	rjmp	.+38     	; 0xba2 <vfprintf+0x154>
 b7c:	28 01       	movw	r4, r16
 b7e:	f2 e0       	ldi	r31, 0x02	; 2
 b80:	4f 0e       	add	r4, r31
 b82:	51 1c       	adc	r5, r1
 b84:	f8 01       	movw	r30, r16
 b86:	a0 80       	ld	r10, Z
 b88:	b1 80       	ldd	r11, Z+1	; 0x01
 b8a:	36 fe       	sbrs	r3, 6
 b8c:	03 c0       	rjmp	.+6      	; 0xb94 <vfprintf+0x146>
 b8e:	69 2d       	mov	r22, r9
 b90:	70 e0       	ldi	r23, 0x00	; 0
 b92:	02 c0       	rjmp	.+4      	; 0xb98 <vfprintf+0x14a>
 b94:	6f ef       	ldi	r22, 0xFF	; 255
 b96:	7f ef       	ldi	r23, 0xFF	; 255
 b98:	c5 01       	movw	r24, r10
 b9a:	0e 94 13 07 	call	0xe26	; 0xe26 <strnlen>
 b9e:	4c 01       	movw	r8, r24
 ba0:	82 01       	movw	r16, r4
 ba2:	f3 2d       	mov	r31, r3
 ba4:	ff 77       	andi	r31, 0x7F	; 127
 ba6:	3f 2e       	mov	r3, r31
 ba8:	16 c0       	rjmp	.+44     	; 0xbd6 <vfprintf+0x188>
 baa:	28 01       	movw	r4, r16
 bac:	22 e0       	ldi	r18, 0x02	; 2
 bae:	42 0e       	add	r4, r18
 bb0:	51 1c       	adc	r5, r1
 bb2:	f8 01       	movw	r30, r16
 bb4:	a0 80       	ld	r10, Z
 bb6:	b1 80       	ldd	r11, Z+1	; 0x01
 bb8:	36 fe       	sbrs	r3, 6
 bba:	03 c0       	rjmp	.+6      	; 0xbc2 <vfprintf+0x174>
 bbc:	69 2d       	mov	r22, r9
 bbe:	70 e0       	ldi	r23, 0x00	; 0
 bc0:	02 c0       	rjmp	.+4      	; 0xbc6 <vfprintf+0x178>
 bc2:	6f ef       	ldi	r22, 0xFF	; 255
 bc4:	7f ef       	ldi	r23, 0xFF	; 255
 bc6:	c5 01       	movw	r24, r10
 bc8:	0e 94 08 07 	call	0xe10	; 0xe10 <strnlen_P>
 bcc:	4c 01       	movw	r8, r24
 bce:	f3 2d       	mov	r31, r3
 bd0:	f0 68       	ori	r31, 0x80	; 128
 bd2:	3f 2e       	mov	r3, r31
 bd4:	82 01       	movw	r16, r4
 bd6:	33 fc       	sbrc	r3, 3
 bd8:	1b c0       	rjmp	.+54     	; 0xc10 <vfprintf+0x1c2>
 bda:	82 2d       	mov	r24, r2
 bdc:	90 e0       	ldi	r25, 0x00	; 0
 bde:	88 16       	cp	r8, r24
 be0:	99 06       	cpc	r9, r25
 be2:	b0 f4       	brcc	.+44     	; 0xc10 <vfprintf+0x1c2>
 be4:	b6 01       	movw	r22, r12
 be6:	80 e2       	ldi	r24, 0x20	; 32
 be8:	90 e0       	ldi	r25, 0x00	; 0
 bea:	0e 94 1e 07 	call	0xe3c	; 0xe3c <fputc>
 bee:	2a 94       	dec	r2
 bf0:	f4 cf       	rjmp	.-24     	; 0xbda <vfprintf+0x18c>
 bf2:	f5 01       	movw	r30, r10
 bf4:	37 fc       	sbrc	r3, 7
 bf6:	85 91       	lpm	r24, Z+
 bf8:	37 fe       	sbrs	r3, 7
 bfa:	81 91       	ld	r24, Z+
 bfc:	5f 01       	movw	r10, r30
 bfe:	b6 01       	movw	r22, r12
 c00:	90 e0       	ldi	r25, 0x00	; 0
 c02:	0e 94 1e 07 	call	0xe3c	; 0xe3c <fputc>
 c06:	21 10       	cpse	r2, r1
 c08:	2a 94       	dec	r2
 c0a:	21 e0       	ldi	r18, 0x01	; 1
 c0c:	82 1a       	sub	r8, r18
 c0e:	91 08       	sbc	r9, r1
 c10:	81 14       	cp	r8, r1
 c12:	91 04       	cpc	r9, r1
 c14:	71 f7       	brne	.-36     	; 0xbf2 <vfprintf+0x1a4>
 c16:	e8 c0       	rjmp	.+464    	; 0xde8 <vfprintf+0x39a>
 c18:	84 36       	cpi	r24, 0x64	; 100
 c1a:	11 f0       	breq	.+4      	; 0xc20 <vfprintf+0x1d2>
 c1c:	89 36       	cpi	r24, 0x69	; 105
 c1e:	41 f5       	brne	.+80     	; 0xc70 <vfprintf+0x222>
 c20:	f8 01       	movw	r30, r16
 c22:	37 fe       	sbrs	r3, 7
 c24:	07 c0       	rjmp	.+14     	; 0xc34 <vfprintf+0x1e6>
 c26:	60 81       	ld	r22, Z
 c28:	71 81       	ldd	r23, Z+1	; 0x01
 c2a:	82 81       	ldd	r24, Z+2	; 0x02
 c2c:	93 81       	ldd	r25, Z+3	; 0x03
 c2e:	0c 5f       	subi	r16, 0xFC	; 252
 c30:	1f 4f       	sbci	r17, 0xFF	; 255
 c32:	08 c0       	rjmp	.+16     	; 0xc44 <vfprintf+0x1f6>
 c34:	60 81       	ld	r22, Z
 c36:	71 81       	ldd	r23, Z+1	; 0x01
 c38:	07 2e       	mov	r0, r23
 c3a:	00 0c       	add	r0, r0
 c3c:	88 0b       	sbc	r24, r24
 c3e:	99 0b       	sbc	r25, r25
 c40:	0e 5f       	subi	r16, 0xFE	; 254
 c42:	1f 4f       	sbci	r17, 0xFF	; 255
 c44:	f3 2d       	mov	r31, r3
 c46:	ff 76       	andi	r31, 0x6F	; 111
 c48:	3f 2e       	mov	r3, r31
 c4a:	97 ff       	sbrs	r25, 7
 c4c:	09 c0       	rjmp	.+18     	; 0xc60 <vfprintf+0x212>
 c4e:	90 95       	com	r25
 c50:	80 95       	com	r24
 c52:	70 95       	com	r23
 c54:	61 95       	neg	r22
 c56:	7f 4f       	sbci	r23, 0xFF	; 255
 c58:	8f 4f       	sbci	r24, 0xFF	; 255
 c5a:	9f 4f       	sbci	r25, 0xFF	; 255
 c5c:	f0 68       	ori	r31, 0x80	; 128
 c5e:	3f 2e       	mov	r3, r31
 c60:	2a e0       	ldi	r18, 0x0A	; 10
 c62:	30 e0       	ldi	r19, 0x00	; 0
 c64:	a3 01       	movw	r20, r6
 c66:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <__ultoa_invert>
 c6a:	88 2e       	mov	r8, r24
 c6c:	86 18       	sub	r8, r6
 c6e:	45 c0       	rjmp	.+138    	; 0xcfa <vfprintf+0x2ac>
 c70:	85 37       	cpi	r24, 0x75	; 117
 c72:	31 f4       	brne	.+12     	; 0xc80 <vfprintf+0x232>
 c74:	23 2d       	mov	r18, r3
 c76:	2f 7e       	andi	r18, 0xEF	; 239
 c78:	b2 2e       	mov	r11, r18
 c7a:	2a e0       	ldi	r18, 0x0A	; 10
 c7c:	30 e0       	ldi	r19, 0x00	; 0
 c7e:	25 c0       	rjmp	.+74     	; 0xcca <vfprintf+0x27c>
 c80:	93 2d       	mov	r25, r3
 c82:	99 7f       	andi	r25, 0xF9	; 249
 c84:	b9 2e       	mov	r11, r25
 c86:	8f 36       	cpi	r24, 0x6F	; 111
 c88:	c1 f0       	breq	.+48     	; 0xcba <vfprintf+0x26c>
 c8a:	18 f4       	brcc	.+6      	; 0xc92 <vfprintf+0x244>
 c8c:	88 35       	cpi	r24, 0x58	; 88
 c8e:	79 f0       	breq	.+30     	; 0xcae <vfprintf+0x260>
 c90:	b5 c0       	rjmp	.+362    	; 0xdfc <vfprintf+0x3ae>
 c92:	80 37       	cpi	r24, 0x70	; 112
 c94:	19 f0       	breq	.+6      	; 0xc9c <vfprintf+0x24e>
 c96:	88 37       	cpi	r24, 0x78	; 120
 c98:	21 f0       	breq	.+8      	; 0xca2 <vfprintf+0x254>
 c9a:	b0 c0       	rjmp	.+352    	; 0xdfc <vfprintf+0x3ae>
 c9c:	e9 2f       	mov	r30, r25
 c9e:	e0 61       	ori	r30, 0x10	; 16
 ca0:	be 2e       	mov	r11, r30
 ca2:	b4 fe       	sbrs	r11, 4
 ca4:	0d c0       	rjmp	.+26     	; 0xcc0 <vfprintf+0x272>
 ca6:	fb 2d       	mov	r31, r11
 ca8:	f4 60       	ori	r31, 0x04	; 4
 caa:	bf 2e       	mov	r11, r31
 cac:	09 c0       	rjmp	.+18     	; 0xcc0 <vfprintf+0x272>
 cae:	34 fe       	sbrs	r3, 4
 cb0:	0a c0       	rjmp	.+20     	; 0xcc6 <vfprintf+0x278>
 cb2:	29 2f       	mov	r18, r25
 cb4:	26 60       	ori	r18, 0x06	; 6
 cb6:	b2 2e       	mov	r11, r18
 cb8:	06 c0       	rjmp	.+12     	; 0xcc6 <vfprintf+0x278>
 cba:	28 e0       	ldi	r18, 0x08	; 8
 cbc:	30 e0       	ldi	r19, 0x00	; 0
 cbe:	05 c0       	rjmp	.+10     	; 0xcca <vfprintf+0x27c>
 cc0:	20 e1       	ldi	r18, 0x10	; 16
 cc2:	30 e0       	ldi	r19, 0x00	; 0
 cc4:	02 c0       	rjmp	.+4      	; 0xcca <vfprintf+0x27c>
 cc6:	20 e1       	ldi	r18, 0x10	; 16
 cc8:	32 e0       	ldi	r19, 0x02	; 2
 cca:	f8 01       	movw	r30, r16
 ccc:	b7 fe       	sbrs	r11, 7
 cce:	07 c0       	rjmp	.+14     	; 0xcde <vfprintf+0x290>
 cd0:	60 81       	ld	r22, Z
 cd2:	71 81       	ldd	r23, Z+1	; 0x01
 cd4:	82 81       	ldd	r24, Z+2	; 0x02
 cd6:	93 81       	ldd	r25, Z+3	; 0x03
 cd8:	0c 5f       	subi	r16, 0xFC	; 252
 cda:	1f 4f       	sbci	r17, 0xFF	; 255
 cdc:	06 c0       	rjmp	.+12     	; 0xcea <vfprintf+0x29c>
 cde:	60 81       	ld	r22, Z
 ce0:	71 81       	ldd	r23, Z+1	; 0x01
 ce2:	80 e0       	ldi	r24, 0x00	; 0
 ce4:	90 e0       	ldi	r25, 0x00	; 0
 ce6:	0e 5f       	subi	r16, 0xFE	; 254
 ce8:	1f 4f       	sbci	r17, 0xFF	; 255
 cea:	a3 01       	movw	r20, r6
 cec:	0e 94 5a 07 	call	0xeb4	; 0xeb4 <__ultoa_invert>
 cf0:	88 2e       	mov	r8, r24
 cf2:	86 18       	sub	r8, r6
 cf4:	fb 2d       	mov	r31, r11
 cf6:	ff 77       	andi	r31, 0x7F	; 127
 cf8:	3f 2e       	mov	r3, r31
 cfa:	36 fe       	sbrs	r3, 6
 cfc:	0d c0       	rjmp	.+26     	; 0xd18 <vfprintf+0x2ca>
 cfe:	23 2d       	mov	r18, r3
 d00:	2e 7f       	andi	r18, 0xFE	; 254
 d02:	a2 2e       	mov	r10, r18
 d04:	89 14       	cp	r8, r9
 d06:	58 f4       	brcc	.+22     	; 0xd1e <vfprintf+0x2d0>
 d08:	34 fe       	sbrs	r3, 4
 d0a:	0b c0       	rjmp	.+22     	; 0xd22 <vfprintf+0x2d4>
 d0c:	32 fc       	sbrc	r3, 2
 d0e:	09 c0       	rjmp	.+18     	; 0xd22 <vfprintf+0x2d4>
 d10:	83 2d       	mov	r24, r3
 d12:	8e 7e       	andi	r24, 0xEE	; 238
 d14:	a8 2e       	mov	r10, r24
 d16:	05 c0       	rjmp	.+10     	; 0xd22 <vfprintf+0x2d4>
 d18:	b8 2c       	mov	r11, r8
 d1a:	a3 2c       	mov	r10, r3
 d1c:	03 c0       	rjmp	.+6      	; 0xd24 <vfprintf+0x2d6>
 d1e:	b8 2c       	mov	r11, r8
 d20:	01 c0       	rjmp	.+2      	; 0xd24 <vfprintf+0x2d6>
 d22:	b9 2c       	mov	r11, r9
 d24:	a4 fe       	sbrs	r10, 4
 d26:	0f c0       	rjmp	.+30     	; 0xd46 <vfprintf+0x2f8>
 d28:	fe 01       	movw	r30, r28
 d2a:	e8 0d       	add	r30, r8
 d2c:	f1 1d       	adc	r31, r1
 d2e:	80 81       	ld	r24, Z
 d30:	80 33       	cpi	r24, 0x30	; 48
 d32:	21 f4       	brne	.+8      	; 0xd3c <vfprintf+0x2ee>
 d34:	9a 2d       	mov	r25, r10
 d36:	99 7e       	andi	r25, 0xE9	; 233
 d38:	a9 2e       	mov	r10, r25
 d3a:	09 c0       	rjmp	.+18     	; 0xd4e <vfprintf+0x300>
 d3c:	a2 fe       	sbrs	r10, 2
 d3e:	06 c0       	rjmp	.+12     	; 0xd4c <vfprintf+0x2fe>
 d40:	b3 94       	inc	r11
 d42:	b3 94       	inc	r11
 d44:	04 c0       	rjmp	.+8      	; 0xd4e <vfprintf+0x300>
 d46:	8a 2d       	mov	r24, r10
 d48:	86 78       	andi	r24, 0x86	; 134
 d4a:	09 f0       	breq	.+2      	; 0xd4e <vfprintf+0x300>
 d4c:	b3 94       	inc	r11
 d4e:	a3 fc       	sbrc	r10, 3
 d50:	11 c0       	rjmp	.+34     	; 0xd74 <vfprintf+0x326>
 d52:	a0 fe       	sbrs	r10, 0
 d54:	06 c0       	rjmp	.+12     	; 0xd62 <vfprintf+0x314>
 d56:	b2 14       	cp	r11, r2
 d58:	88 f4       	brcc	.+34     	; 0xd7c <vfprintf+0x32e>
 d5a:	28 0c       	add	r2, r8
 d5c:	92 2c       	mov	r9, r2
 d5e:	9b 18       	sub	r9, r11
 d60:	0e c0       	rjmp	.+28     	; 0xd7e <vfprintf+0x330>
 d62:	b2 14       	cp	r11, r2
 d64:	60 f4       	brcc	.+24     	; 0xd7e <vfprintf+0x330>
 d66:	b6 01       	movw	r22, r12
 d68:	80 e2       	ldi	r24, 0x20	; 32
 d6a:	90 e0       	ldi	r25, 0x00	; 0
 d6c:	0e 94 1e 07 	call	0xe3c	; 0xe3c <fputc>
 d70:	b3 94       	inc	r11
 d72:	f7 cf       	rjmp	.-18     	; 0xd62 <vfprintf+0x314>
 d74:	b2 14       	cp	r11, r2
 d76:	18 f4       	brcc	.+6      	; 0xd7e <vfprintf+0x330>
 d78:	2b 18       	sub	r2, r11
 d7a:	02 c0       	rjmp	.+4      	; 0xd80 <vfprintf+0x332>
 d7c:	98 2c       	mov	r9, r8
 d7e:	21 2c       	mov	r2, r1
 d80:	a4 fe       	sbrs	r10, 4
 d82:	10 c0       	rjmp	.+32     	; 0xda4 <vfprintf+0x356>
 d84:	b6 01       	movw	r22, r12
 d86:	80 e3       	ldi	r24, 0x30	; 48
 d88:	90 e0       	ldi	r25, 0x00	; 0
 d8a:	0e 94 1e 07 	call	0xe3c	; 0xe3c <fputc>
 d8e:	a2 fe       	sbrs	r10, 2
 d90:	17 c0       	rjmp	.+46     	; 0xdc0 <vfprintf+0x372>
 d92:	a1 fc       	sbrc	r10, 1
 d94:	03 c0       	rjmp	.+6      	; 0xd9c <vfprintf+0x34e>
 d96:	88 e7       	ldi	r24, 0x78	; 120
 d98:	90 e0       	ldi	r25, 0x00	; 0
 d9a:	02 c0       	rjmp	.+4      	; 0xda0 <vfprintf+0x352>
 d9c:	88 e5       	ldi	r24, 0x58	; 88
 d9e:	90 e0       	ldi	r25, 0x00	; 0
 da0:	b6 01       	movw	r22, r12
 da2:	0c c0       	rjmp	.+24     	; 0xdbc <vfprintf+0x36e>
 da4:	8a 2d       	mov	r24, r10
 da6:	86 78       	andi	r24, 0x86	; 134
 da8:	59 f0       	breq	.+22     	; 0xdc0 <vfprintf+0x372>
 daa:	a1 fe       	sbrs	r10, 1
 dac:	02 c0       	rjmp	.+4      	; 0xdb2 <vfprintf+0x364>
 dae:	8b e2       	ldi	r24, 0x2B	; 43
 db0:	01 c0       	rjmp	.+2      	; 0xdb4 <vfprintf+0x366>
 db2:	80 e2       	ldi	r24, 0x20	; 32
 db4:	a7 fc       	sbrc	r10, 7
 db6:	8d e2       	ldi	r24, 0x2D	; 45
 db8:	b6 01       	movw	r22, r12
 dba:	90 e0       	ldi	r25, 0x00	; 0
 dbc:	0e 94 1e 07 	call	0xe3c	; 0xe3c <fputc>
 dc0:	89 14       	cp	r8, r9
 dc2:	38 f4       	brcc	.+14     	; 0xdd2 <vfprintf+0x384>
 dc4:	b6 01       	movw	r22, r12
 dc6:	80 e3       	ldi	r24, 0x30	; 48
 dc8:	90 e0       	ldi	r25, 0x00	; 0
 dca:	0e 94 1e 07 	call	0xe3c	; 0xe3c <fputc>
 dce:	9a 94       	dec	r9
 dd0:	f7 cf       	rjmp	.-18     	; 0xdc0 <vfprintf+0x372>
 dd2:	8a 94       	dec	r8
 dd4:	f3 01       	movw	r30, r6
 dd6:	e8 0d       	add	r30, r8
 dd8:	f1 1d       	adc	r31, r1
 dda:	80 81       	ld	r24, Z
 ddc:	b6 01       	movw	r22, r12
 dde:	90 e0       	ldi	r25, 0x00	; 0
 de0:	0e 94 1e 07 	call	0xe3c	; 0xe3c <fputc>
 de4:	81 10       	cpse	r8, r1
 de6:	f5 cf       	rjmp	.-22     	; 0xdd2 <vfprintf+0x384>
 de8:	22 20       	and	r2, r2
 dea:	09 f4       	brne	.+2      	; 0xdee <vfprintf+0x3a0>
 dec:	42 ce       	rjmp	.-892    	; 0xa72 <vfprintf+0x24>
 dee:	b6 01       	movw	r22, r12
 df0:	80 e2       	ldi	r24, 0x20	; 32
 df2:	90 e0       	ldi	r25, 0x00	; 0
 df4:	0e 94 1e 07 	call	0xe3c	; 0xe3c <fputc>
 df8:	2a 94       	dec	r2
 dfa:	f6 cf       	rjmp	.-20     	; 0xde8 <vfprintf+0x39a>
 dfc:	f6 01       	movw	r30, r12
 dfe:	86 81       	ldd	r24, Z+6	; 0x06
 e00:	97 81       	ldd	r25, Z+7	; 0x07
 e02:	02 c0       	rjmp	.+4      	; 0xe08 <vfprintf+0x3ba>
 e04:	8f ef       	ldi	r24, 0xFF	; 255
 e06:	9f ef       	ldi	r25, 0xFF	; 255
 e08:	2b 96       	adiw	r28, 0x0b	; 11
 e0a:	e2 e1       	ldi	r30, 0x12	; 18
 e0c:	0c 94 d4 07 	jmp	0xfa8	; 0xfa8 <__epilogue_restores__>

00000e10 <strnlen_P>:
 e10:	fc 01       	movw	r30, r24
 e12:	05 90       	lpm	r0, Z+
 e14:	61 50       	subi	r22, 0x01	; 1
 e16:	70 40       	sbci	r23, 0x00	; 0
 e18:	01 10       	cpse	r0, r1
 e1a:	d8 f7       	brcc	.-10     	; 0xe12 <strnlen_P+0x2>
 e1c:	80 95       	com	r24
 e1e:	90 95       	com	r25
 e20:	8e 0f       	add	r24, r30
 e22:	9f 1f       	adc	r25, r31
 e24:	08 95       	ret

00000e26 <strnlen>:
 e26:	fc 01       	movw	r30, r24
 e28:	61 50       	subi	r22, 0x01	; 1
 e2a:	70 40       	sbci	r23, 0x00	; 0
 e2c:	01 90       	ld	r0, Z+
 e2e:	01 10       	cpse	r0, r1
 e30:	d8 f7       	brcc	.-10     	; 0xe28 <strnlen+0x2>
 e32:	80 95       	com	r24
 e34:	90 95       	com	r25
 e36:	8e 0f       	add	r24, r30
 e38:	9f 1f       	adc	r25, r31
 e3a:	08 95       	ret

00000e3c <fputc>:
 e3c:	0f 93       	push	r16
 e3e:	1f 93       	push	r17
 e40:	cf 93       	push	r28
 e42:	df 93       	push	r29
 e44:	fb 01       	movw	r30, r22
 e46:	23 81       	ldd	r18, Z+3	; 0x03
 e48:	21 fd       	sbrc	r18, 1
 e4a:	03 c0       	rjmp	.+6      	; 0xe52 <fputc+0x16>
 e4c:	8f ef       	ldi	r24, 0xFF	; 255
 e4e:	9f ef       	ldi	r25, 0xFF	; 255
 e50:	2c c0       	rjmp	.+88     	; 0xeaa <fputc+0x6e>
 e52:	22 ff       	sbrs	r18, 2
 e54:	16 c0       	rjmp	.+44     	; 0xe82 <fputc+0x46>
 e56:	46 81       	ldd	r20, Z+6	; 0x06
 e58:	57 81       	ldd	r21, Z+7	; 0x07
 e5a:	24 81       	ldd	r18, Z+4	; 0x04
 e5c:	35 81       	ldd	r19, Z+5	; 0x05
 e5e:	42 17       	cp	r20, r18
 e60:	53 07       	cpc	r21, r19
 e62:	44 f4       	brge	.+16     	; 0xe74 <fputc+0x38>
 e64:	a0 81       	ld	r26, Z
 e66:	b1 81       	ldd	r27, Z+1	; 0x01
 e68:	9d 01       	movw	r18, r26
 e6a:	2f 5f       	subi	r18, 0xFF	; 255
 e6c:	3f 4f       	sbci	r19, 0xFF	; 255
 e6e:	31 83       	std	Z+1, r19	; 0x01
 e70:	20 83       	st	Z, r18
 e72:	8c 93       	st	X, r24
 e74:	26 81       	ldd	r18, Z+6	; 0x06
 e76:	37 81       	ldd	r19, Z+7	; 0x07
 e78:	2f 5f       	subi	r18, 0xFF	; 255
 e7a:	3f 4f       	sbci	r19, 0xFF	; 255
 e7c:	37 83       	std	Z+7, r19	; 0x07
 e7e:	26 83       	std	Z+6, r18	; 0x06
 e80:	14 c0       	rjmp	.+40     	; 0xeaa <fputc+0x6e>
 e82:	8b 01       	movw	r16, r22
 e84:	ec 01       	movw	r28, r24
 e86:	fb 01       	movw	r30, r22
 e88:	00 84       	ldd	r0, Z+8	; 0x08
 e8a:	f1 85       	ldd	r31, Z+9	; 0x09
 e8c:	e0 2d       	mov	r30, r0
 e8e:	09 95       	icall
 e90:	89 2b       	or	r24, r25
 e92:	e1 f6       	brne	.-72     	; 0xe4c <fputc+0x10>
 e94:	d8 01       	movw	r26, r16
 e96:	16 96       	adiw	r26, 0x06	; 6
 e98:	8d 91       	ld	r24, X+
 e9a:	9c 91       	ld	r25, X
 e9c:	17 97       	sbiw	r26, 0x07	; 7
 e9e:	01 96       	adiw	r24, 0x01	; 1
 ea0:	17 96       	adiw	r26, 0x07	; 7
 ea2:	9c 93       	st	X, r25
 ea4:	8e 93       	st	-X, r24
 ea6:	16 97       	sbiw	r26, 0x06	; 6
 ea8:	ce 01       	movw	r24, r28
 eaa:	df 91       	pop	r29
 eac:	cf 91       	pop	r28
 eae:	1f 91       	pop	r17
 eb0:	0f 91       	pop	r16
 eb2:	08 95       	ret

00000eb4 <__ultoa_invert>:
 eb4:	fa 01       	movw	r30, r20
 eb6:	aa 27       	eor	r26, r26
 eb8:	28 30       	cpi	r18, 0x08	; 8
 eba:	51 f1       	breq	.+84     	; 0xf10 <__ultoa_invert+0x5c>
 ebc:	20 31       	cpi	r18, 0x10	; 16
 ebe:	81 f1       	breq	.+96     	; 0xf20 <__ultoa_invert+0x6c>
 ec0:	e8 94       	clt
 ec2:	6f 93       	push	r22
 ec4:	6e 7f       	andi	r22, 0xFE	; 254
 ec6:	6e 5f       	subi	r22, 0xFE	; 254
 ec8:	7f 4f       	sbci	r23, 0xFF	; 255
 eca:	8f 4f       	sbci	r24, 0xFF	; 255
 ecc:	9f 4f       	sbci	r25, 0xFF	; 255
 ece:	af 4f       	sbci	r26, 0xFF	; 255
 ed0:	b1 e0       	ldi	r27, 0x01	; 1
 ed2:	3e d0       	rcall	.+124    	; 0xf50 <__ultoa_invert+0x9c>
 ed4:	b4 e0       	ldi	r27, 0x04	; 4
 ed6:	3c d0       	rcall	.+120    	; 0xf50 <__ultoa_invert+0x9c>
 ed8:	67 0f       	add	r22, r23
 eda:	78 1f       	adc	r23, r24
 edc:	89 1f       	adc	r24, r25
 ede:	9a 1f       	adc	r25, r26
 ee0:	a1 1d       	adc	r26, r1
 ee2:	68 0f       	add	r22, r24
 ee4:	79 1f       	adc	r23, r25
 ee6:	8a 1f       	adc	r24, r26
 ee8:	91 1d       	adc	r25, r1
 eea:	a1 1d       	adc	r26, r1
 eec:	6a 0f       	add	r22, r26
 eee:	71 1d       	adc	r23, r1
 ef0:	81 1d       	adc	r24, r1
 ef2:	91 1d       	adc	r25, r1
 ef4:	a1 1d       	adc	r26, r1
 ef6:	20 d0       	rcall	.+64     	; 0xf38 <__ultoa_invert+0x84>
 ef8:	09 f4       	brne	.+2      	; 0xefc <__ultoa_invert+0x48>
 efa:	68 94       	set
 efc:	3f 91       	pop	r19
 efe:	2a e0       	ldi	r18, 0x0A	; 10
 f00:	26 9f       	mul	r18, r22
 f02:	11 24       	eor	r1, r1
 f04:	30 19       	sub	r19, r0
 f06:	30 5d       	subi	r19, 0xD0	; 208
 f08:	31 93       	st	Z+, r19
 f0a:	de f6       	brtc	.-74     	; 0xec2 <__ultoa_invert+0xe>
 f0c:	cf 01       	movw	r24, r30
 f0e:	08 95       	ret
 f10:	46 2f       	mov	r20, r22
 f12:	47 70       	andi	r20, 0x07	; 7
 f14:	40 5d       	subi	r20, 0xD0	; 208
 f16:	41 93       	st	Z+, r20
 f18:	b3 e0       	ldi	r27, 0x03	; 3
 f1a:	0f d0       	rcall	.+30     	; 0xf3a <__ultoa_invert+0x86>
 f1c:	c9 f7       	brne	.-14     	; 0xf10 <__ultoa_invert+0x5c>
 f1e:	f6 cf       	rjmp	.-20     	; 0xf0c <__ultoa_invert+0x58>
 f20:	46 2f       	mov	r20, r22
 f22:	4f 70       	andi	r20, 0x0F	; 15
 f24:	40 5d       	subi	r20, 0xD0	; 208
 f26:	4a 33       	cpi	r20, 0x3A	; 58
 f28:	18 f0       	brcs	.+6      	; 0xf30 <__ultoa_invert+0x7c>
 f2a:	49 5d       	subi	r20, 0xD9	; 217
 f2c:	31 fd       	sbrc	r19, 1
 f2e:	40 52       	subi	r20, 0x20	; 32
 f30:	41 93       	st	Z+, r20
 f32:	02 d0       	rcall	.+4      	; 0xf38 <__ultoa_invert+0x84>
 f34:	a9 f7       	brne	.-22     	; 0xf20 <__ultoa_invert+0x6c>
 f36:	ea cf       	rjmp	.-44     	; 0xf0c <__ultoa_invert+0x58>
 f38:	b4 e0       	ldi	r27, 0x04	; 4
 f3a:	a6 95       	lsr	r26
 f3c:	97 95       	ror	r25
 f3e:	87 95       	ror	r24
 f40:	77 95       	ror	r23
 f42:	67 95       	ror	r22
 f44:	ba 95       	dec	r27
 f46:	c9 f7       	brne	.-14     	; 0xf3a <__ultoa_invert+0x86>
 f48:	00 97       	sbiw	r24, 0x00	; 0
 f4a:	61 05       	cpc	r22, r1
 f4c:	71 05       	cpc	r23, r1
 f4e:	08 95       	ret
 f50:	9b 01       	movw	r18, r22
 f52:	ac 01       	movw	r20, r24
 f54:	0a 2e       	mov	r0, r26
 f56:	06 94       	lsr	r0
 f58:	57 95       	ror	r21
 f5a:	47 95       	ror	r20
 f5c:	37 95       	ror	r19
 f5e:	27 95       	ror	r18
 f60:	ba 95       	dec	r27
 f62:	c9 f7       	brne	.-14     	; 0xf56 <__ultoa_invert+0xa2>
 f64:	62 0f       	add	r22, r18
 f66:	73 1f       	adc	r23, r19
 f68:	84 1f       	adc	r24, r20
 f6a:	95 1f       	adc	r25, r21
 f6c:	a0 1d       	adc	r26, r0
 f6e:	08 95       	ret

00000f70 <__prologue_saves__>:
 f70:	2f 92       	push	r2
 f72:	3f 92       	push	r3
 f74:	4f 92       	push	r4
 f76:	5f 92       	push	r5
 f78:	6f 92       	push	r6
 f7a:	7f 92       	push	r7
 f7c:	8f 92       	push	r8
 f7e:	9f 92       	push	r9
 f80:	af 92       	push	r10
 f82:	bf 92       	push	r11
 f84:	cf 92       	push	r12
 f86:	df 92       	push	r13
 f88:	ef 92       	push	r14
 f8a:	ff 92       	push	r15
 f8c:	0f 93       	push	r16
 f8e:	1f 93       	push	r17
 f90:	cf 93       	push	r28
 f92:	df 93       	push	r29
 f94:	cd b7       	in	r28, 0x3d	; 61
 f96:	de b7       	in	r29, 0x3e	; 62
 f98:	ca 1b       	sub	r28, r26
 f9a:	db 0b       	sbc	r29, r27
 f9c:	0f b6       	in	r0, 0x3f	; 63
 f9e:	f8 94       	cli
 fa0:	de bf       	out	0x3e, r29	; 62
 fa2:	0f be       	out	0x3f, r0	; 63
 fa4:	cd bf       	out	0x3d, r28	; 61
 fa6:	09 94       	ijmp

00000fa8 <__epilogue_restores__>:
 fa8:	2a 88       	ldd	r2, Y+18	; 0x12
 faa:	39 88       	ldd	r3, Y+17	; 0x11
 fac:	48 88       	ldd	r4, Y+16	; 0x10
 fae:	5f 84       	ldd	r5, Y+15	; 0x0f
 fb0:	6e 84       	ldd	r6, Y+14	; 0x0e
 fb2:	7d 84       	ldd	r7, Y+13	; 0x0d
 fb4:	8c 84       	ldd	r8, Y+12	; 0x0c
 fb6:	9b 84       	ldd	r9, Y+11	; 0x0b
 fb8:	aa 84       	ldd	r10, Y+10	; 0x0a
 fba:	b9 84       	ldd	r11, Y+9	; 0x09
 fbc:	c8 84       	ldd	r12, Y+8	; 0x08
 fbe:	df 80       	ldd	r13, Y+7	; 0x07
 fc0:	ee 80       	ldd	r14, Y+6	; 0x06
 fc2:	fd 80       	ldd	r15, Y+5	; 0x05
 fc4:	0c 81       	ldd	r16, Y+4	; 0x04
 fc6:	1b 81       	ldd	r17, Y+3	; 0x03
 fc8:	aa 81       	ldd	r26, Y+2	; 0x02
 fca:	b9 81       	ldd	r27, Y+1	; 0x01
 fcc:	ce 0f       	add	r28, r30
 fce:	d1 1d       	adc	r29, r1
 fd0:	0f b6       	in	r0, 0x3f	; 63
 fd2:	f8 94       	cli
 fd4:	de bf       	out	0x3e, r29	; 62
 fd6:	0f be       	out	0x3f, r0	; 63
 fd8:	cd bf       	out	0x3d, r28	; 61
 fda:	ed 01       	movw	r28, r26
 fdc:	08 95       	ret

00000fde <_exit>:
 fde:	f8 94       	cli

00000fe0 <__stop_program>:
 fe0:	ff cf       	rjmp	.-2      	; 0xfe0 <__stop_program>
