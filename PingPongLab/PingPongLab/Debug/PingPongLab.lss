
PingPongLab.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000001ca  00800100  0000142e  000014c2  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000142e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000010  008002ca  008002ca  0000168c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000168c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000016e8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00001724  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001df5  00000000  00000000  00001874  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000009d5  00000000  00000000  00003669  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000f0e  00000000  00000000  0000403e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000404  00000000  00000000  00004f4c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007a4  00000000  00000000  00005350  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001092  00000000  00000000  00005af4  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  00006b86  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b4 01 	jmp	0x368	; 0x368 <__ctors_end>
       4:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       8:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
       c:	0c 94 f0 03 	jmp	0x7e0	; 0x7e0 <__vector_3>
      10:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      14:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      18:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      1c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      20:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      24:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      28:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      2c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      30:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      34:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      38:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      3c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      40:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      44:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      48:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      4c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      50:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      54:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      58:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      5c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      60:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      64:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      68:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>
      6c:	0c 94 d1 01 	jmp	0x3a2	; 0x3a2 <__bad_interrupt>

00000070 <__trampolines_end>:
	...
      78:	00 06       	cpc	r0, r16
      7a:	5f 5f       	subi	r21, 0xFF	; 255
      7c:	06 00       	.word	0x0006	; ????
      7e:	00 00       	nop
      80:	00 07       	cpc	r16, r16
      82:	07 00       	.word	0x0007	; ????
      84:	07 07       	cpc	r16, r23
      86:	00 00       	nop
      88:	14 7f       	andi	r17, 0xF4	; 244
      8a:	7f 14       	cp	r7, r15
      8c:	7f 7f       	andi	r23, 0xFF	; 255
      8e:	14 00       	.word	0x0014	; ????
      90:	24 2e       	mov	r2, r20
      92:	6b 6b       	ori	r22, 0xBB	; 187
      94:	3a 12       	cpse	r3, r26
      96:	00 00       	nop
      98:	46 66       	ori	r20, 0x66	; 102
      9a:	30 18       	sub	r3, r0
      9c:	0c 66       	ori	r16, 0x6C	; 108
      9e:	62 00       	.word	0x0062	; ????
      a0:	30 7a       	andi	r19, 0xA0	; 160
      a2:	4f 5d       	subi	r20, 0xDF	; 223
      a4:	37 7a       	andi	r19, 0xA7	; 167
      a6:	48 00       	.word	0x0048	; ????
      a8:	04 07       	cpc	r16, r20
      aa:	03 00       	.word	0x0003	; ????
      ac:	00 00       	nop
      ae:	00 00       	nop
      b0:	00 1c       	adc	r0, r0
      b2:	3e 63       	ori	r19, 0x3E	; 62
      b4:	41 00       	.word	0x0041	; ????
      b6:	00 00       	nop
      b8:	00 41       	sbci	r16, 0x10	; 16
      ba:	63 3e       	cpi	r22, 0xE3	; 227
      bc:	1c 00       	.word	0x001c	; ????
      be:	00 00       	nop
      c0:	08 2a       	or	r0, r24
      c2:	3e 1c       	adc	r3, r14
      c4:	1c 3e       	cpi	r17, 0xEC	; 236
      c6:	2a 08       	sbc	r2, r10
      c8:	08 08       	sbc	r0, r8
      ca:	3e 3e       	cpi	r19, 0xEE	; 238
      cc:	08 08       	sbc	r0, r8
      ce:	00 00       	nop
      d0:	00 a0       	ldd	r0, Z+32	; 0x20
      d2:	e0 60       	ori	r30, 0x00	; 0
      d4:	00 00       	nop
      d6:	00 00       	nop
      d8:	08 08       	sbc	r0, r8
      da:	08 08       	sbc	r0, r8
      dc:	08 08       	sbc	r0, r8
      de:	00 00       	nop
      e0:	00 00       	nop
      e2:	60 60       	ori	r22, 0x00	; 0
      e4:	00 00       	nop
      e6:	00 00       	nop
      e8:	60 30       	cpi	r22, 0x00	; 0
      ea:	18 0c       	add	r1, r8
      ec:	06 03       	mulsu	r16, r22
      ee:	01 00       	.word	0x0001	; ????
      f0:	3e 7f       	andi	r19, 0xFE	; 254
      f2:	59 4d       	sbci	r21, 0xD9	; 217
      f4:	7f 3e       	cpi	r23, 0xEF	; 239
      f6:	00 00       	nop
      f8:	42 42       	sbci	r20, 0x22	; 34
      fa:	7f 7f       	andi	r23, 0xFF	; 255
      fc:	40 40       	sbci	r20, 0x00	; 0
      fe:	00 00       	nop
     100:	62 73       	andi	r22, 0x32	; 50
     102:	59 49       	sbci	r21, 0x99	; 153
     104:	6f 66       	ori	r22, 0x6F	; 111
     106:	00 00       	nop
     108:	22 63       	ori	r18, 0x32	; 50
     10a:	49 49       	sbci	r20, 0x99	; 153
     10c:	7f 36       	cpi	r23, 0x6F	; 111
     10e:	00 00       	nop
     110:	18 1c       	adc	r1, r8
     112:	16 13       	cpse	r17, r22
     114:	7f 7f       	andi	r23, 0xFF	; 255
     116:	10 00       	.word	0x0010	; ????
     118:	27 67       	ori	r18, 0x77	; 119
     11a:	45 45       	sbci	r20, 0x55	; 85
     11c:	7d 39       	cpi	r23, 0x9D	; 157
     11e:	00 00       	nop
     120:	3c 7e       	andi	r19, 0xEC	; 236
     122:	4b 49       	sbci	r20, 0x9B	; 155
     124:	79 30       	cpi	r23, 0x09	; 9
     126:	00 00       	nop
     128:	03 63       	ori	r16, 0x33	; 51
     12a:	71 19       	sub	r23, r1
     12c:	0f 07       	cpc	r16, r31
     12e:	00 00       	nop
     130:	36 7f       	andi	r19, 0xF6	; 246
     132:	49 49       	sbci	r20, 0x99	; 153
     134:	7f 36       	cpi	r23, 0x6F	; 111
     136:	00 00       	nop
     138:	06 4f       	sbci	r16, 0xF6	; 246
     13a:	49 69       	ori	r20, 0x99	; 153
     13c:	3f 1e       	adc	r3, r31
     13e:	00 00       	nop
     140:	00 00       	nop
     142:	6c 6c       	ori	r22, 0xCC	; 204
     144:	00 00       	nop
     146:	00 00       	nop
     148:	00 a0       	ldd	r0, Z+32	; 0x20
     14a:	ec 6c       	ori	r30, 0xCC	; 204
     14c:	00 00       	nop
     14e:	00 00       	nop
     150:	08 1c       	adc	r0, r8
     152:	36 63       	ori	r19, 0x36	; 54
     154:	41 00       	.word	0x0041	; ????
     156:	00 00       	nop
     158:	14 14       	cp	r1, r4
     15a:	14 14       	cp	r1, r4
     15c:	14 14       	cp	r1, r4
     15e:	00 00       	nop
     160:	00 41       	sbci	r16, 0x10	; 16
     162:	63 36       	cpi	r22, 0x63	; 99
     164:	1c 08       	sbc	r1, r12
     166:	00 00       	nop
     168:	02 03       	mulsu	r16, r18
     16a:	51 59       	subi	r21, 0x91	; 145
     16c:	0f 06       	cpc	r0, r31
     16e:	00 00       	nop
     170:	3e 7f       	andi	r19, 0xFE	; 254
     172:	41 5d       	subi	r20, 0xD1	; 209
     174:	5d 1f       	adc	r21, r29
     176:	1e 00       	.word	0x001e	; ????
     178:	7c 7e       	andi	r23, 0xEC	; 236
     17a:	13 13       	cpse	r17, r19
     17c:	7e 7c       	andi	r23, 0xCE	; 206
     17e:	00 00       	nop
     180:	41 7f       	andi	r20, 0xF1	; 241
     182:	7f 49       	sbci	r23, 0x9F	; 159
     184:	49 7f       	andi	r20, 0xF9	; 249
     186:	36 00       	.word	0x0036	; ????
     188:	1c 3e       	cpi	r17, 0xEC	; 236
     18a:	63 41       	sbci	r22, 0x13	; 19
     18c:	41 63       	ori	r20, 0x31	; 49
     18e:	22 00       	.word	0x0022	; ????
     190:	41 7f       	andi	r20, 0xF1	; 241
     192:	7f 41       	sbci	r23, 0x1F	; 31
     194:	63 7f       	andi	r22, 0xF3	; 243
     196:	1c 00       	.word	0x001c	; ????
     198:	41 7f       	andi	r20, 0xF1	; 241
     19a:	7f 49       	sbci	r23, 0x9F	; 159
     19c:	5d 41       	sbci	r21, 0x1D	; 29
     19e:	63 00       	.word	0x0063	; ????
     1a0:	41 7f       	andi	r20, 0xF1	; 241
     1a2:	7f 49       	sbci	r23, 0x9F	; 159
     1a4:	1d 01       	movw	r2, r26
     1a6:	03 00       	.word	0x0003	; ????
     1a8:	1c 3e       	cpi	r17, 0xEC	; 236
     1aa:	63 41       	sbci	r22, 0x13	; 19
     1ac:	51 73       	andi	r21, 0x31	; 49
     1ae:	72 00       	.word	0x0072	; ????
     1b0:	7f 7f       	andi	r23, 0xFF	; 255
     1b2:	08 08       	sbc	r0, r8
     1b4:	7f 7f       	andi	r23, 0xFF	; 255
     1b6:	00 00       	nop
     1b8:	00 41       	sbci	r16, 0x10	; 16
     1ba:	7f 7f       	andi	r23, 0xFF	; 255
     1bc:	41 00       	.word	0x0041	; ????
     1be:	00 00       	nop
     1c0:	30 70       	andi	r19, 0x00	; 0
     1c2:	40 41       	sbci	r20, 0x10	; 16
     1c4:	7f 3f       	cpi	r23, 0xFF	; 255
     1c6:	01 00       	.word	0x0001	; ????
     1c8:	41 7f       	andi	r20, 0xF1	; 241
     1ca:	7f 08       	sbc	r7, r15
     1cc:	1c 77       	andi	r17, 0x7C	; 124
     1ce:	63 00       	.word	0x0063	; ????
     1d0:	41 7f       	andi	r20, 0xF1	; 241
     1d2:	7f 41       	sbci	r23, 0x1F	; 31
     1d4:	40 60       	ori	r20, 0x00	; 0
     1d6:	70 00       	.word	0x0070	; ????
     1d8:	7f 7f       	andi	r23, 0xFF	; 255
     1da:	06 0c       	add	r0, r6
     1dc:	06 7f       	andi	r16, 0xF6	; 246
     1de:	7f 00       	.word	0x007f	; ????
     1e0:	7f 7f       	andi	r23, 0xFF	; 255
     1e2:	06 0c       	add	r0, r6
     1e4:	18 7f       	andi	r17, 0xF8	; 248
     1e6:	7f 00       	.word	0x007f	; ????
     1e8:	1c 3e       	cpi	r17, 0xEC	; 236
     1ea:	63 41       	sbci	r22, 0x13	; 19
     1ec:	63 3e       	cpi	r22, 0xE3	; 227
     1ee:	1c 00       	.word	0x001c	; ????
     1f0:	41 7f       	andi	r20, 0xF1	; 241
     1f2:	7f 49       	sbci	r23, 0x9F	; 159
     1f4:	09 0f       	add	r16, r25
     1f6:	06 00       	.word	0x0006	; ????
     1f8:	1e 3f       	cpi	r17, 0xFE	; 254
     1fa:	21 71       	andi	r18, 0x11	; 17
     1fc:	7f 5e       	subi	r23, 0xEF	; 239
     1fe:	00 00       	nop
     200:	41 7f       	andi	r20, 0xF1	; 241
     202:	7f 19       	sub	r23, r15
     204:	39 6f       	ori	r19, 0xF9	; 249
     206:	46 00       	.word	0x0046	; ????
     208:	26 67       	ori	r18, 0x76	; 118
     20a:	4d 59       	subi	r20, 0x9D	; 157
     20c:	7b 32       	cpi	r23, 0x2B	; 43
     20e:	00 00       	nop
     210:	03 41       	sbci	r16, 0x13	; 19
     212:	7f 7f       	andi	r23, 0xFF	; 255
     214:	41 03       	mulsu	r20, r17
     216:	00 00       	nop
     218:	7f 7f       	andi	r23, 0xFF	; 255
     21a:	40 40       	sbci	r20, 0x00	; 0
     21c:	7f 7f       	andi	r23, 0xFF	; 255
     21e:	00 00       	nop
     220:	1f 3f       	cpi	r17, 0xFF	; 255
     222:	60 60       	ori	r22, 0x00	; 0
     224:	3f 1f       	adc	r19, r31
     226:	00 00       	nop
     228:	7f 7f       	andi	r23, 0xFF	; 255
     22a:	30 18       	sub	r3, r0
     22c:	30 7f       	andi	r19, 0xF0	; 240
     22e:	7f 00       	.word	0x007f	; ????
     230:	63 77       	andi	r22, 0x73	; 115
     232:	1c 08       	sbc	r1, r12
     234:	1c 77       	andi	r17, 0x7C	; 124
     236:	63 00       	.word	0x0063	; ????
     238:	07 4f       	sbci	r16, 0xF7	; 247
     23a:	78 78       	andi	r23, 0x88	; 136
     23c:	4f 07       	cpc	r20, r31
     23e:	00 00       	nop
     240:	67 73       	andi	r22, 0x37	; 55
     242:	59 4d       	sbci	r21, 0xD9	; 217
     244:	47 63       	ori	r20, 0x37	; 55
     246:	71 00       	.word	0x0071	; ????
     248:	00 7f       	andi	r16, 0xF0	; 240
     24a:	7f 41       	sbci	r23, 0x1F	; 31
     24c:	41 00       	.word	0x0041	; ????
     24e:	00 00       	nop
     250:	01 03       	mulsu	r16, r17
     252:	06 0c       	add	r0, r6
     254:	18 30       	cpi	r17, 0x08	; 8
     256:	60 00       	.word	0x0060	; ????
     258:	00 41       	sbci	r16, 0x10	; 16
     25a:	41 7f       	andi	r20, 0xF1	; 241
     25c:	7f 00       	.word	0x007f	; ????
     25e:	00 00       	nop
     260:	08 0c       	add	r0, r8
     262:	06 03       	mulsu	r16, r22
     264:	06 0c       	add	r0, r6
     266:	08 00       	.word	0x0008	; ????
     268:	80 80       	ld	r8, Z
     26a:	80 80       	ld	r8, Z
     26c:	80 80       	ld	r8, Z
     26e:	80 80       	ld	r8, Z
     270:	00 00       	nop
     272:	03 07       	cpc	r16, r19
     274:	04 00       	.word	0x0004	; ????
     276:	00 00       	nop
     278:	20 74       	andi	r18, 0x40	; 64
     27a:	54 54       	subi	r21, 0x44	; 68
     27c:	3c 78       	andi	r19, 0x8C	; 140
     27e:	40 00       	.word	0x0040	; ????
     280:	41 3f       	cpi	r20, 0xF1	; 241
     282:	7f 44       	sbci	r23, 0x4F	; 79
     284:	44 7c       	andi	r20, 0xC4	; 196
     286:	38 00       	.word	0x0038	; ????
     288:	38 7c       	andi	r19, 0xC8	; 200
     28a:	44 44       	sbci	r20, 0x44	; 68
     28c:	6c 28       	or	r6, r12
     28e:	00 00       	nop
     290:	30 78       	andi	r19, 0x80	; 128
     292:	48 49       	sbci	r20, 0x98	; 152
     294:	3f 7f       	andi	r19, 0xFF	; 255
     296:	40 00       	.word	0x0040	; ????
     298:	38 7c       	andi	r19, 0xC8	; 200
     29a:	54 54       	subi	r21, 0x44	; 68
     29c:	5c 18       	sub	r5, r12
     29e:	00 00       	nop
     2a0:	48 7e       	andi	r20, 0xE8	; 232
     2a2:	7f 49       	sbci	r23, 0x9F	; 159
     2a4:	03 02       	muls	r16, r19
     2a6:	00 00       	nop
     2a8:	98 bc       	out	0x28, r9	; 40
     2aa:	a4 a4       	ldd	r10, Z+44	; 0x2c
     2ac:	f8 7c       	andi	r31, 0xC8	; 200
     2ae:	04 00       	.word	0x0004	; ????
     2b0:	41 7f       	andi	r20, 0xF1	; 241
     2b2:	7f 08       	sbc	r7, r15
     2b4:	04 7c       	andi	r16, 0xC4	; 196
     2b6:	78 00       	.word	0x0078	; ????
     2b8:	00 44       	sbci	r16, 0x40	; 64
     2ba:	7d 7d       	andi	r23, 0xDD	; 221
     2bc:	40 00       	.word	0x0040	; ????
     2be:	00 00       	nop
     2c0:	40 c4       	rjmp	.+2176   	; 0xb42 <main+0x1e2>
     2c2:	84 fd       	sbrc	r24, 4
     2c4:	7d 00       	.word	0x007d	; ????
     2c6:	00 00       	nop
     2c8:	41 7f       	andi	r20, 0xF1	; 241
     2ca:	7f 10       	cpse	r7, r15
     2cc:	38 6c       	ori	r19, 0xC8	; 200
     2ce:	44 00       	.word	0x0044	; ????
     2d0:	00 41       	sbci	r16, 0x10	; 16
     2d2:	7f 7f       	andi	r23, 0xFF	; 255
     2d4:	40 00       	.word	0x0040	; ????
     2d6:	00 00       	nop
     2d8:	7c 7c       	andi	r23, 0xCC	; 204
     2da:	0c 18       	sub	r0, r12
     2dc:	0c 7c       	andi	r16, 0xCC	; 204
     2de:	78 00       	.word	0x0078	; ????
     2e0:	7c 7c       	andi	r23, 0xCC	; 204
     2e2:	04 04       	cpc	r0, r4
     2e4:	7c 78       	andi	r23, 0x8C	; 140
     2e6:	00 00       	nop
     2e8:	38 7c       	andi	r19, 0xC8	; 200
     2ea:	44 44       	sbci	r20, 0x44	; 68
     2ec:	7c 38       	cpi	r23, 0x8C	; 140
     2ee:	00 00       	nop
     2f0:	84 fc       	sbrc	r8, 4
     2f2:	f8 a4       	ldd	r15, Y+40	; 0x28
     2f4:	24 3c       	cpi	r18, 0xC4	; 196
     2f6:	18 00       	.word	0x0018	; ????
     2f8:	18 3c       	cpi	r17, 0xC8	; 200
     2fa:	24 a4       	ldd	r2, Z+44	; 0x2c
     2fc:	f8 fc       	.word	0xfcf8	; ????
     2fe:	84 00       	.word	0x0084	; ????
     300:	44 7c       	andi	r20, 0xC4	; 196
     302:	78 44       	sbci	r23, 0x48	; 72
     304:	1c 18       	sub	r1, r12
     306:	00 00       	nop
     308:	48 5c       	subi	r20, 0xC8	; 200
     30a:	54 54       	subi	r21, 0x44	; 68
     30c:	74 24       	eor	r7, r4
     30e:	00 00       	nop
     310:	00 04       	cpc	r0, r0
     312:	3e 7f       	andi	r19, 0xFE	; 254
     314:	44 24       	eor	r4, r4
     316:	00 00       	nop
     318:	3c 7c       	andi	r19, 0xCC	; 204
     31a:	40 40       	sbci	r20, 0x00	; 0
     31c:	3c 7c       	andi	r19, 0xCC	; 204
     31e:	40 00       	.word	0x0040	; ????
     320:	1c 3c       	cpi	r17, 0xCC	; 204
     322:	60 60       	ori	r22, 0x00	; 0
     324:	3c 1c       	adc	r3, r12
     326:	00 00       	nop
     328:	3c 7c       	andi	r19, 0xCC	; 204
     32a:	60 30       	cpi	r22, 0x00	; 0
     32c:	60 7c       	andi	r22, 0xC0	; 192
     32e:	3c 00       	.word	0x003c	; ????
     330:	44 6c       	ori	r20, 0xC4	; 196
     332:	38 10       	cpse	r3, r8
     334:	38 6c       	ori	r19, 0xC8	; 200
     336:	44 00       	.word	0x0044	; ????
     338:	9c bc       	out	0x2c, r9	; 44
     33a:	a0 a0       	ldd	r10, Z+32	; 0x20
     33c:	fc 7c       	andi	r31, 0xCC	; 204
     33e:	00 00       	nop
     340:	4c 64       	ori	r20, 0x4C	; 76
     342:	74 5c       	subi	r23, 0xC4	; 196
     344:	4c 64       	ori	r20, 0x4C	; 76
     346:	00 00       	nop
     348:	08 08       	sbc	r0, r8
     34a:	3e 77       	andi	r19, 0x7E	; 126
     34c:	41 41       	sbci	r20, 0x11	; 17
     34e:	00 00       	nop
     350:	00 00       	nop
     352:	00 77       	andi	r16, 0x70	; 112
     354:	77 00       	.word	0x0077	; ????
     356:	00 00       	nop
     358:	41 41       	sbci	r20, 0x11	; 17
     35a:	77 3e       	cpi	r23, 0xE7	; 231
     35c:	08 08       	sbc	r0, r8
     35e:	00 00       	nop
     360:	02 03       	mulsu	r16, r18
     362:	01 03       	mulsu	r16, r17
     364:	02 03       	mulsu	r16, r18
     366:	01 00       	.word	0x0001	; ????

00000368 <__ctors_end>:
     368:	11 24       	eor	r1, r1
     36a:	1f be       	out	0x3f, r1	; 63
     36c:	cf ef       	ldi	r28, 0xFF	; 255
     36e:	d4 e0       	ldi	r29, 0x04	; 4
     370:	de bf       	out	0x3e, r29	; 62
     372:	cd bf       	out	0x3d, r28	; 61

00000374 <__do_copy_data>:
     374:	12 e0       	ldi	r17, 0x02	; 2
     376:	a0 e0       	ldi	r26, 0x00	; 0
     378:	b1 e0       	ldi	r27, 0x01	; 1
     37a:	ee e2       	ldi	r30, 0x2E	; 46
     37c:	f4 e1       	ldi	r31, 0x14	; 20
     37e:	02 c0       	rjmp	.+4      	; 0x384 <__do_copy_data+0x10>
     380:	05 90       	lpm	r0, Z+
     382:	0d 92       	st	X+, r0
     384:	aa 3c       	cpi	r26, 0xCA	; 202
     386:	b1 07       	cpc	r27, r17
     388:	d9 f7       	brne	.-10     	; 0x380 <__do_copy_data+0xc>

0000038a <__do_clear_bss>:
     38a:	22 e0       	ldi	r18, 0x02	; 2
     38c:	aa ec       	ldi	r26, 0xCA	; 202
     38e:	b2 e0       	ldi	r27, 0x02	; 2
     390:	01 c0       	rjmp	.+2      	; 0x394 <.do_clear_bss_start>

00000392 <.do_clear_bss_loop>:
     392:	1d 92       	st	X+, r1

00000394 <.do_clear_bss_start>:
     394:	aa 3d       	cpi	r26, 0xDA	; 218
     396:	b2 07       	cpc	r27, r18
     398:	e1 f7       	brne	.-8      	; 0x392 <.do_clear_bss_loop>
     39a:	0e 94 b0 04 	call	0x960	; 0x960 <main>
     39e:	0c 94 15 0a 	jmp	0x142a	; 0x142a <_exit>

000003a2 <__bad_interrupt>:
     3a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000003a6 <USART_Transmit>:
			printf("Retrieval phase error: ext_ram[%4d] = %02X (should be %02X)\n", i, retreived_value, some_value);
			retrieval_errors++;
		}
	}
	printf("SRAM test completed with \n%4d errors in write phase and \n%4d errors in retrieval phase\n\n", write_errors, retrieval_errors);
}
     3a6:	5d 9b       	sbis	0x0b, 5	; 11
     3a8:	fe cf       	rjmp	.-4      	; 0x3a6 <USART_Transmit>
     3aa:	8c b9       	out	0x0c, r24	; 12
     3ac:	08 95       	ret

000003ae <USART_Receive>:
     3ae:	5f 9b       	sbis	0x0b, 7	; 11
     3b0:	fe cf       	rjmp	.-4      	; 0x3ae <USART_Receive>
     3b2:	8c b1       	in	r24, 0x0c	; 12
     3b4:	08 95       	ret

000003b6 <OLED_send_command>:
     3b6:	80 93 00 10 	sts	0x1000, r24	; 0x801000 <__bss_end+0xd26>
     3ba:	08 95       	ret

000003bc <OLED_goto_line>:
     3bc:	88 30       	cpi	r24, 0x08	; 8
     3be:	18 f4       	brcc	.+6      	; 0x3c6 <OLED_goto_line+0xa>
     3c0:	80 55       	subi	r24, 0x50	; 80
     3c2:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     3c6:	08 95       	ret

000003c8 <OLED_goto_column>:
     3c8:	cf 93       	push	r28
     3ca:	88 23       	and	r24, r24
     3cc:	54 f0       	brlt	.+20     	; 0x3e2 <OLED_goto_column+0x1a>
     3ce:	c8 2f       	mov	r28, r24
     3d0:	c2 95       	swap	r28
     3d2:	cf 70       	andi	r28, 0x0F	; 15
     3d4:	8f 70       	andi	r24, 0x0F	; 15
     3d6:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     3da:	80 e1       	ldi	r24, 0x10	; 16
     3dc:	8c 0f       	add	r24, r28
     3de:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     3e2:	cf 91       	pop	r28
     3e4:	08 95       	ret

000003e6 <OLED_pos>:
     3e6:	cf 93       	push	r28
     3e8:	c6 2f       	mov	r28, r22
     3ea:	0e 94 de 01 	call	0x3bc	; 0x3bc <OLED_goto_line>
     3ee:	8c 2f       	mov	r24, r28
     3f0:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <OLED_goto_column>
     3f4:	cf 91       	pop	r28
     3f6:	08 95       	ret

000003f8 <OLED_home>:
     3f8:	80 e0       	ldi	r24, 0x00	; 0
     3fa:	0e 94 de 01 	call	0x3bc	; 0x3bc <OLED_goto_line>
     3fe:	80 e0       	ldi	r24, 0x00	; 0
     400:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <OLED_goto_column>
     404:	08 95       	ret

00000406 <OLED_send_data>:
     406:	80 93 00 12 	sts	0x1200, r24	; 0x801200 <__bss_end+0xf26>
     40a:	08 95       	ret

0000040c <OLED_print_arrow>:
     40c:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
     410:	80 e0       	ldi	r24, 0x00	; 0
     412:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
     416:	88 e1       	ldi	r24, 0x18	; 24
     418:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
     41c:	88 e1       	ldi	r24, 0x18	; 24
     41e:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
     422:	88 e1       	ldi	r24, 0x18	; 24
     424:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
     428:	8e e7       	ldi	r24, 0x7E	; 126
     42a:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
     42e:	8c e3       	ldi	r24, 0x3C	; 60
     430:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
     434:	88 e1       	ldi	r24, 0x18	; 24
     436:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
     43a:	80 e0       	ldi	r24, 0x00	; 0
     43c:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
     440:	08 95       	ret

00000442 <OLED_print_char>:
     442:	1f 93       	push	r17
     444:	cf 93       	push	r28
     446:	df 93       	push	r29
     448:	18 2f       	mov	r17, r24
     44a:	c0 e0       	ldi	r28, 0x00	; 0
     44c:	d0 e0       	ldi	r29, 0x00	; 0
     44e:	11 c0       	rjmp	.+34     	; 0x472 <OLED_print_char+0x30>
     450:	e1 2f       	mov	r30, r17
     452:	f0 e0       	ldi	r31, 0x00	; 0
     454:	b0 97       	sbiw	r30, 0x20	; 32
     456:	ee 0f       	add	r30, r30
     458:	ff 1f       	adc	r31, r31
     45a:	ee 0f       	add	r30, r30
     45c:	ff 1f       	adc	r31, r31
     45e:	ee 0f       	add	r30, r30
     460:	ff 1f       	adc	r31, r31
     462:	ec 0f       	add	r30, r28
     464:	fd 1f       	adc	r31, r29
     466:	e0 59       	subi	r30, 0x90	; 144
     468:	ff 4f       	sbci	r31, 0xFF	; 255
     46a:	84 91       	lpm	r24, Z
     46c:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
     470:	21 96       	adiw	r28, 0x01	; 1
     472:	c8 30       	cpi	r28, 0x08	; 8
     474:	d1 05       	cpc	r29, r1
     476:	64 f3       	brlt	.-40     	; 0x450 <OLED_print_char+0xe>
     478:	df 91       	pop	r29
     47a:	cf 91       	pop	r28
     47c:	1f 91       	pop	r17
     47e:	08 95       	ret

00000480 <OLED_print>:
     480:	ef 92       	push	r14
     482:	ff 92       	push	r15
     484:	0f 93       	push	r16
     486:	1f 93       	push	r17
     488:	cf 93       	push	r28
     48a:	df 93       	push	r29
     48c:	7c 01       	movw	r14, r24
     48e:	8b 01       	movw	r16, r22
     490:	c0 e0       	ldi	r28, 0x00	; 0
     492:	d0 e0       	ldi	r29, 0x00	; 0
     494:	07 c0       	rjmp	.+14     	; 0x4a4 <OLED_print+0x24>
     496:	f7 01       	movw	r30, r14
     498:	ec 0f       	add	r30, r28
     49a:	fd 1f       	adc	r31, r29
     49c:	80 81       	ld	r24, Z
     49e:	0e 94 21 02 	call	0x442	; 0x442 <OLED_print_char>
     4a2:	21 96       	adiw	r28, 0x01	; 1
     4a4:	c0 17       	cp	r28, r16
     4a6:	d1 07       	cpc	r29, r17
     4a8:	b4 f3       	brlt	.-20     	; 0x496 <OLED_print+0x16>
     4aa:	df 91       	pop	r29
     4ac:	cf 91       	pop	r28
     4ae:	1f 91       	pop	r17
     4b0:	0f 91       	pop	r16
     4b2:	ff 90       	pop	r15
     4b4:	ef 90       	pop	r14
     4b6:	08 95       	ret

000004b8 <OLED_clear_line>:
     4b8:	cf 93       	push	r28
     4ba:	df 93       	push	r29
     4bc:	0e 94 de 01 	call	0x3bc	; 0x3bc <OLED_goto_line>
     4c0:	c0 e0       	ldi	r28, 0x00	; 0
     4c2:	d0 e0       	ldi	r29, 0x00	; 0
     4c4:	04 c0       	rjmp	.+8      	; 0x4ce <OLED_clear_line+0x16>
     4c6:	80 e0       	ldi	r24, 0x00	; 0
     4c8:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
     4cc:	21 96       	adiw	r28, 0x01	; 1
     4ce:	c0 38       	cpi	r28, 0x80	; 128
     4d0:	d1 05       	cpc	r29, r1
     4d2:	cc f3       	brlt	.-14     	; 0x4c6 <OLED_clear_line+0xe>
     4d4:	df 91       	pop	r29
     4d6:	cf 91       	pop	r28
     4d8:	08 95       	ret

000004da <OLED_reset>:
     4da:	cf 93       	push	r28
     4dc:	df 93       	push	r29
     4de:	c0 e0       	ldi	r28, 0x00	; 0
     4e0:	d0 e0       	ldi	r29, 0x00	; 0
     4e2:	04 c0       	rjmp	.+8      	; 0x4ec <OLED_reset+0x12>
     4e4:	8c 2f       	mov	r24, r28
     4e6:	0e 94 5c 02 	call	0x4b8	; 0x4b8 <OLED_clear_line>
     4ea:	21 96       	adiw	r28, 0x01	; 1
     4ec:	c8 30       	cpi	r28, 0x08	; 8
     4ee:	d1 05       	cpc	r29, r1
     4f0:	cc f3       	brlt	.-14     	; 0x4e4 <OLED_reset+0xa>
     4f2:	0e 94 fc 01 	call	0x3f8	; 0x3f8 <OLED_home>
     4f6:	df 91       	pop	r29
     4f8:	cf 91       	pop	r28
     4fa:	08 95       	ret

000004fc <OLED_Init>:
     4fc:	8e ea       	ldi	r24, 0xAE	; 174
     4fe:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     502:	81 ea       	ldi	r24, 0xA1	; 161
     504:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     508:	8a ed       	ldi	r24, 0xDA	; 218
     50a:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     50e:	82 e1       	ldi	r24, 0x12	; 18
     510:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     514:	88 ec       	ldi	r24, 0xC8	; 200
     516:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     51a:	88 ea       	ldi	r24, 0xA8	; 168
     51c:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     520:	8f e3       	ldi	r24, 0x3F	; 63
     522:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     526:	85 ed       	ldi	r24, 0xD5	; 213
     528:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     52c:	80 e8       	ldi	r24, 0x80	; 128
     52e:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     532:	81 e8       	ldi	r24, 0x81	; 129
     534:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     538:	80 e5       	ldi	r24, 0x50	; 80
     53a:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     53e:	89 ed       	ldi	r24, 0xD9	; 217
     540:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     544:	81 e2       	ldi	r24, 0x21	; 33
     546:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     54a:	80 e2       	ldi	r24, 0x20	; 32
     54c:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     550:	82 e0       	ldi	r24, 0x02	; 2
     552:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     556:	8b ed       	ldi	r24, 0xDB	; 219
     558:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     55c:	80 e3       	ldi	r24, 0x30	; 48
     55e:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     562:	8d ea       	ldi	r24, 0xAD	; 173
     564:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     568:	80 e0       	ldi	r24, 0x00	; 0
     56a:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     56e:	84 ea       	ldi	r24, 0xA4	; 164
     570:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     574:	86 ea       	ldi	r24, 0xA6	; 166
     576:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     57a:	8f ea       	ldi	r24, 0xAF	; 175
     57c:	0e 94 db 01 	call	0x3b6	; 0x3b6 <OLED_send_command>
     580:	08 95       	ret

00000582 <SPI_Init>:
     582:	87 b3       	in	r24, 0x17	; 23
     584:	80 6b       	ori	r24, 0xB0	; 176
     586:	87 bb       	out	0x17, r24	; 23
     588:	87 b3       	in	r24, 0x17	; 23
     58a:	8f 7b       	andi	r24, 0xBF	; 191
     58c:	87 bb       	out	0x17, r24	; 23
     58e:	8d b1       	in	r24, 0x0d	; 13
     590:	81 65       	ori	r24, 0x51	; 81
     592:	8d b9       	out	0x0d, r24	; 13
     594:	08 95       	ret

00000596 <SPI_write>:
     596:	8f b9       	out	0x0f, r24	; 15
     598:	77 9b       	sbis	0x0e, 7	; 14
     59a:	fe cf       	rjmp	.-4      	; 0x598 <SPI_write+0x2>
     59c:	08 95       	ret

0000059e <SPI_read>:
     59e:	8f ef       	ldi	r24, 0xFF	; 255
     5a0:	8f b9       	out	0x0f, r24	; 15
     5a2:	77 9b       	sbis	0x0e, 7	; 14
     5a4:	fe cf       	rjmp	.-4      	; 0x5a2 <SPI_read+0x4>
     5a6:	8f b1       	in	r24, 0x0f	; 15
     5a8:	08 95       	ret

000005aa <MCP_active>:
     5aa:	88 b3       	in	r24, 0x18	; 24
     5ac:	8f 7e       	andi	r24, 0xEF	; 239
     5ae:	88 bb       	out	0x18, r24	; 24
     5b0:	08 95       	ret

000005b2 <MCP_deactive>:
     5b2:	88 b3       	in	r24, 0x18	; 24
     5b4:	80 61       	ori	r24, 0x10	; 16
     5b6:	88 bb       	out	0x18, r24	; 24
     5b8:	08 95       	ret

000005ba <MCP_read>:
     5ba:	cf 93       	push	r28
     5bc:	c8 2f       	mov	r28, r24
     5be:	0e 94 d5 02 	call	0x5aa	; 0x5aa <MCP_active>
     5c2:	83 e0       	ldi	r24, 0x03	; 3
     5c4:	0e 94 cb 02 	call	0x596	; 0x596 <SPI_write>
     5c8:	8c 2f       	mov	r24, r28
     5ca:	0e 94 cb 02 	call	0x596	; 0x596 <SPI_write>
     5ce:	0e 94 cf 02 	call	0x59e	; 0x59e <SPI_read>
     5d2:	c8 2f       	mov	r28, r24
     5d4:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <MCP_deactive>
     5d8:	8c 2f       	mov	r24, r28
     5da:	cf 91       	pop	r28
     5dc:	08 95       	ret

000005de <MCP_write>:
     5de:	cf 93       	push	r28
     5e0:	df 93       	push	r29
     5e2:	d8 2f       	mov	r29, r24
     5e4:	c6 2f       	mov	r28, r22
     5e6:	0e 94 d5 02 	call	0x5aa	; 0x5aa <MCP_active>
     5ea:	82 e0       	ldi	r24, 0x02	; 2
     5ec:	0e 94 cb 02 	call	0x596	; 0x596 <SPI_write>
     5f0:	8d 2f       	mov	r24, r29
     5f2:	0e 94 cb 02 	call	0x596	; 0x596 <SPI_write>
     5f6:	8c 2f       	mov	r24, r28
     5f8:	0e 94 cb 02 	call	0x596	; 0x596 <SPI_write>
     5fc:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <MCP_deactive>
     600:	df 91       	pop	r29
     602:	cf 91       	pop	r28
     604:	08 95       	ret

00000606 <MCP_status>:
     606:	cf 93       	push	r28
     608:	0e 94 d5 02 	call	0x5aa	; 0x5aa <MCP_active>
     60c:	80 ea       	ldi	r24, 0xA0	; 160
     60e:	0e 94 cb 02 	call	0x596	; 0x596 <SPI_write>
     612:	0e 94 cf 02 	call	0x59e	; 0x59e <SPI_read>
     616:	c8 2f       	mov	r28, r24
     618:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <MCP_deactive>
     61c:	8c 2f       	mov	r24, r28
     61e:	cf 91       	pop	r28
     620:	08 95       	ret

00000622 <MCP_bitmod>:
     622:	1f 93       	push	r17
     624:	cf 93       	push	r28
     626:	df 93       	push	r29
     628:	18 2f       	mov	r17, r24
     62a:	d6 2f       	mov	r29, r22
     62c:	c4 2f       	mov	r28, r20
     62e:	0e 94 d5 02 	call	0x5aa	; 0x5aa <MCP_active>
     632:	85 e0       	ldi	r24, 0x05	; 5
     634:	0e 94 cb 02 	call	0x596	; 0x596 <SPI_write>
     638:	81 2f       	mov	r24, r17
     63a:	0e 94 cb 02 	call	0x596	; 0x596 <SPI_write>
     63e:	8d 2f       	mov	r24, r29
     640:	0e 94 cb 02 	call	0x596	; 0x596 <SPI_write>
     644:	8c 2f       	mov	r24, r28
     646:	0e 94 cb 02 	call	0x596	; 0x596 <SPI_write>
     64a:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <MCP_deactive>
     64e:	df 91       	pop	r29
     650:	cf 91       	pop	r28
     652:	1f 91       	pop	r17
     654:	08 95       	ret

00000656 <MCP_reset>:
     656:	0e 94 d5 02 	call	0x5aa	; 0x5aa <MCP_active>
     65a:	80 ec       	ldi	r24, 0xC0	; 192
     65c:	0e 94 cb 02 	call	0x596	; 0x596 <SPI_write>
     660:	0e 94 d9 02 	call	0x5b2	; 0x5b2 <MCP_deactive>
     664:	08 95       	ret

00000666 <CAN_Init>:
     666:	0e 94 2b 03 	call	0x656	; 0x656 <MCP_reset>
     66a:	65 ec       	ldi	r22, 0xC5	; 197
     66c:	8a e2       	ldi	r24, 0x2A	; 42
     66e:	0e 94 ef 02 	call	0x5de	; 0x5de <MCP_write>
     672:	6f e3       	ldi	r22, 0x3F	; 63
     674:	89 e2       	ldi	r24, 0x29	; 41
     676:	0e 94 ef 02 	call	0x5de	; 0x5de <MCP_write>
     67a:	60 e0       	ldi	r22, 0x00	; 0
     67c:	8f e0       	ldi	r24, 0x0F	; 15
     67e:	0e 94 ef 02 	call	0x5de	; 0x5de <MCP_write>
     682:	41 e0       	ldi	r20, 0x01	; 1
     684:	61 e0       	ldi	r22, 0x01	; 1
     686:	8b e2       	ldi	r24, 0x2B	; 43
     688:	0e 94 11 03 	call	0x622	; 0x622 <MCP_bitmod>
     68c:	40 ec       	ldi	r20, 0xC0	; 192
     68e:	60 ec       	ldi	r22, 0xC0	; 192
     690:	80 e6       	ldi	r24, 0x60	; 96
     692:	0e 94 11 03 	call	0x622	; 0x622 <MCP_bitmod>
     696:	08 95       	ret

00000698 <CAN_send>:
     698:	ef 92       	push	r14
     69a:	ff 92       	push	r15
     69c:	0f 93       	push	r16
     69e:	1f 93       	push	r17
     6a0:	cf 93       	push	r28
     6a2:	df 93       	push	r29
     6a4:	cd b7       	in	r28, 0x3d	; 61
     6a6:	de b7       	in	r29, 0x3e	; 62
     6a8:	2c 97       	sbiw	r28, 0x0c	; 12
     6aa:	0f b6       	in	r0, 0x3f	; 63
     6ac:	f8 94       	cli
     6ae:	de bf       	out	0x3e, r29	; 62
     6b0:	0f be       	out	0x3f, r0	; 63
     6b2:	cd bf       	out	0x3d, r28	; 61
     6b4:	e9 82       	std	Y+1, r14	; 0x01
     6b6:	fa 82       	std	Y+2, r15	; 0x02
     6b8:	0b 83       	std	Y+3, r16	; 0x03
     6ba:	1c 83       	std	Y+4, r17	; 0x04
     6bc:	2d 83       	std	Y+5, r18	; 0x05
     6be:	3e 83       	std	Y+6, r19	; 0x06
     6c0:	4f 83       	std	Y+7, r20	; 0x07
     6c2:	58 87       	std	Y+8, r21	; 0x08
     6c4:	69 87       	std	Y+9, r22	; 0x09
     6c6:	7a 87       	std	Y+10, r23	; 0x0a
     6c8:	8b 87       	std	Y+11, r24	; 0x0b
     6ca:	9c 87       	std	Y+12, r25	; 0x0c
     6cc:	09 81       	ldd	r16, Y+1	; 0x01
     6ce:	1a 81       	ldd	r17, Y+2	; 0x02
     6d0:	b8 01       	movw	r22, r16
     6d2:	76 95       	lsr	r23
     6d4:	67 95       	ror	r22
     6d6:	76 95       	lsr	r23
     6d8:	67 95       	ror	r22
     6da:	76 95       	lsr	r23
     6dc:	67 95       	ror	r22
     6de:	81 e3       	ldi	r24, 0x31	; 49
     6e0:	0e 94 ef 02 	call	0x5de	; 0x5de <MCP_write>
     6e4:	60 2f       	mov	r22, r16
     6e6:	62 95       	swap	r22
     6e8:	66 0f       	add	r22, r22
     6ea:	60 7e       	andi	r22, 0xE0	; 224
     6ec:	82 e3       	ldi	r24, 0x32	; 50
     6ee:	0e 94 ef 02 	call	0x5de	; 0x5de <MCP_write>
     6f2:	60 e0       	ldi	r22, 0x00	; 0
     6f4:	85 e3       	ldi	r24, 0x35	; 53
     6f6:	0e 94 ef 02 	call	0x5de	; 0x5de <MCP_write>
     6fa:	fc 84       	ldd	r15, Y+12	; 0x0c
     6fc:	4f 2d       	mov	r20, r15
     6fe:	6f e0       	ldi	r22, 0x0F	; 15
     700:	85 e3       	ldi	r24, 0x35	; 53
     702:	0e 94 11 03 	call	0x622	; 0x622 <MCP_bitmod>
     706:	00 e0       	ldi	r16, 0x00	; 0
     708:	10 e0       	ldi	r17, 0x00	; 0
     70a:	0d c0       	rjmp	.+26     	; 0x726 <CAN_send+0x8e>
     70c:	e3 e0       	ldi	r30, 0x03	; 3
     70e:	f0 e0       	ldi	r31, 0x00	; 0
     710:	ec 0f       	add	r30, r28
     712:	fd 1f       	adc	r31, r29
     714:	e0 0f       	add	r30, r16
     716:	f1 1f       	adc	r31, r17
     718:	60 81       	ld	r22, Z
     71a:	86 e3       	ldi	r24, 0x36	; 54
     71c:	80 0f       	add	r24, r16
     71e:	0e 94 ef 02 	call	0x5de	; 0x5de <MCP_write>
     722:	0f 5f       	subi	r16, 0xFF	; 255
     724:	1f 4f       	sbci	r17, 0xFF	; 255
     726:	8f 2d       	mov	r24, r15
     728:	90 e0       	ldi	r25, 0x00	; 0
     72a:	08 17       	cp	r16, r24
     72c:	19 07       	cpc	r17, r25
     72e:	74 f3       	brlt	.-36     	; 0x70c <CAN_send+0x74>
     730:	4f ef       	ldi	r20, 0xFF	; 255
     732:	68 e0       	ldi	r22, 0x08	; 8
     734:	80 e3       	ldi	r24, 0x30	; 48
     736:	0e 94 11 03 	call	0x622	; 0x622 <MCP_bitmod>
     73a:	2c 96       	adiw	r28, 0x0c	; 12
     73c:	0f b6       	in	r0, 0x3f	; 63
     73e:	f8 94       	cli
     740:	de bf       	out	0x3e, r29	; 62
     742:	0f be       	out	0x3f, r0	; 63
     744:	cd bf       	out	0x3d, r28	; 61
     746:	df 91       	pop	r29
     748:	cf 91       	pop	r28
     74a:	1f 91       	pop	r17
     74c:	0f 91       	pop	r16
     74e:	ff 90       	pop	r15
     750:	ef 90       	pop	r14
     752:	08 95       	ret

00000754 <CAN_receive>:
     754:	ef 92       	push	r14
     756:	ff 92       	push	r15
     758:	1f 93       	push	r17
     75a:	cf 93       	push	r28
     75c:	df 93       	push	r29
     75e:	7c 01       	movw	r14, r24
     760:	81 e6       	ldi	r24, 0x61	; 97
     762:	0e 94 dd 02 	call	0x5ba	; 0x5ba <MCP_read>
     766:	c8 2f       	mov	r28, r24
     768:	82 e6       	ldi	r24, 0x62	; 98
     76a:	0e 94 dd 02 	call	0x5ba	; 0x5ba <MCP_read>
     76e:	2c 2f       	mov	r18, r28
     770:	30 e0       	ldi	r19, 0x00	; 0
     772:	32 2f       	mov	r19, r18
     774:	22 27       	eor	r18, r18
     776:	28 2b       	or	r18, r24
     778:	35 95       	asr	r19
     77a:	27 95       	ror	r18
     77c:	35 95       	asr	r19
     77e:	27 95       	ror	r18
     780:	35 95       	asr	r19
     782:	27 95       	ror	r18
     784:	35 95       	asr	r19
     786:	27 95       	ror	r18
     788:	35 95       	asr	r19
     78a:	27 95       	ror	r18
     78c:	f7 01       	movw	r30, r14
     78e:	31 83       	std	Z+1, r19	; 0x01
     790:	20 83       	st	Z, r18
     792:	85 e6       	ldi	r24, 0x65	; 101
     794:	0e 94 dd 02 	call	0x5ba	; 0x5ba <MCP_read>
     798:	18 2f       	mov	r17, r24
     79a:	1f 70       	andi	r17, 0x0F	; 15
     79c:	19 30       	cpi	r17, 0x09	; 9
     79e:	08 f0       	brcs	.+2      	; 0x7a2 <CAN_receive+0x4e>
     7a0:	18 e0       	ldi	r17, 0x08	; 8
     7a2:	f7 01       	movw	r30, r14
     7a4:	13 87       	std	Z+11, r17	; 0x0b
     7a6:	c0 e0       	ldi	r28, 0x00	; 0
     7a8:	d0 e0       	ldi	r29, 0x00	; 0
     7aa:	09 c0       	rjmp	.+18     	; 0x7be <CAN_receive+0x6a>
     7ac:	8c 2f       	mov	r24, r28
     7ae:	8a 59       	subi	r24, 0x9A	; 154
     7b0:	0e 94 dd 02 	call	0x5ba	; 0x5ba <MCP_read>
     7b4:	f7 01       	movw	r30, r14
     7b6:	ec 0f       	add	r30, r28
     7b8:	fd 1f       	adc	r31, r29
     7ba:	82 83       	std	Z+2, r24	; 0x02
     7bc:	21 96       	adiw	r28, 0x01	; 1
     7be:	81 2f       	mov	r24, r17
     7c0:	90 e0       	ldi	r25, 0x00	; 0
     7c2:	c8 17       	cp	r28, r24
     7c4:	d9 07       	cpc	r29, r25
     7c6:	94 f3       	brlt	.-28     	; 0x7ac <CAN_receive+0x58>
     7c8:	40 e0       	ldi	r20, 0x00	; 0
     7ca:	63 e0       	ldi	r22, 0x03	; 3
     7cc:	8c e2       	ldi	r24, 0x2C	; 44
     7ce:	0e 94 11 03 	call	0x622	; 0x622 <MCP_bitmod>
     7d2:	c7 01       	movw	r24, r14
     7d4:	df 91       	pop	r29
     7d6:	cf 91       	pop	r28
     7d8:	1f 91       	pop	r17
     7da:	ff 90       	pop	r15
     7dc:	ef 90       	pop	r14
     7de:	08 95       	ret

000007e0 <__vector_3>:
     7e0:	1f 92       	push	r1
     7e2:	0f 92       	push	r0
     7e4:	0f b6       	in	r0, 0x3f	; 63
     7e6:	0f 92       	push	r0
     7e8:	11 24       	eor	r1, r1
     7ea:	8f 93       	push	r24
     7ec:	81 e0       	ldi	r24, 0x01	; 1
     7ee:	80 93 cb 02 	sts	0x02CB, r24	; 0x8002cb <interrupt_flag>
     7f2:	8f 91       	pop	r24
     7f4:	0f 90       	pop	r0
     7f6:	0f be       	out	0x3f, r0	; 63
     7f8:	0f 90       	pop	r0
     7fa:	1f 90       	pop	r1
     7fc:	18 95       	reti

000007fe <screen0>:
     7fe:	cf 93       	push	r28
     800:	df 93       	push	r29
     802:	0e 94 6d 02 	call	0x4da	; 0x4da <OLED_reset>
     806:	6a e0       	ldi	r22, 0x0A	; 10
     808:	80 e0       	ldi	r24, 0x00	; 0
     80a:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
     80e:	69 e0       	ldi	r22, 0x09	; 9
     810:	70 e0       	ldi	r23, 0x00	; 0
     812:	8e e0       	ldi	r24, 0x0E	; 14
     814:	91 e0       	ldi	r25, 0x01	; 1
     816:	0e 94 40 02 	call	0x480	; 0x480 <OLED_print>
     81a:	6a e0       	ldi	r22, 0x0A	; 10
     81c:	81 e0       	ldi	r24, 0x01	; 1
     81e:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
     822:	c0 e0       	ldi	r28, 0x00	; 0
     824:	d0 e0       	ldi	r29, 0x00	; 0
     826:	04 c0       	rjmp	.+8      	; 0x830 <screen0+0x32>
     828:	81 e0       	ldi	r24, 0x01	; 1
     82a:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
     82e:	21 96       	adiw	r28, 0x01	; 1
     830:	c8 34       	cpi	r28, 0x48	; 72
     832:	d1 05       	cpc	r29, r1
     834:	cc f3       	brlt	.-14     	; 0x828 <screen0+0x2a>
     836:	6a e0       	ldi	r22, 0x0A	; 10
     838:	82 e0       	ldi	r24, 0x02	; 2
     83a:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
     83e:	6a e0       	ldi	r22, 0x0A	; 10
     840:	70 e0       	ldi	r23, 0x00	; 0
     842:	88 e1       	ldi	r24, 0x18	; 24
     844:	91 e0       	ldi	r25, 0x01	; 1
     846:	0e 94 40 02 	call	0x480	; 0x480 <OLED_print>
     84a:	6a e0       	ldi	r22, 0x0A	; 10
     84c:	83 e0       	ldi	r24, 0x03	; 3
     84e:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
     852:	67 e0       	ldi	r22, 0x07	; 7
     854:	70 e0       	ldi	r23, 0x00	; 0
     856:	83 e2       	ldi	r24, 0x23	; 35
     858:	91 e0       	ldi	r25, 0x01	; 1
     85a:	0e 94 40 02 	call	0x480	; 0x480 <OLED_print>
     85e:	df 91       	pop	r29
     860:	cf 91       	pop	r28
     862:	08 95       	ret

00000864 <screen1>:
     864:	cf 93       	push	r28
     866:	df 93       	push	r29
     868:	0e 94 6d 02 	call	0x4da	; 0x4da <OLED_reset>
     86c:	6a e0       	ldi	r22, 0x0A	; 10
     86e:	80 e0       	ldi	r24, 0x00	; 0
     870:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
     874:	67 e0       	ldi	r22, 0x07	; 7
     876:	70 e0       	ldi	r23, 0x00	; 0
     878:	83 e2       	ldi	r24, 0x23	; 35
     87a:	91 e0       	ldi	r25, 0x01	; 1
     87c:	0e 94 40 02 	call	0x480	; 0x480 <OLED_print>
     880:	6a e0       	ldi	r22, 0x0A	; 10
     882:	81 e0       	ldi	r24, 0x01	; 1
     884:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
     888:	c0 e0       	ldi	r28, 0x00	; 0
     88a:	d0 e0       	ldi	r29, 0x00	; 0
     88c:	04 c0       	rjmp	.+8      	; 0x896 <screen1+0x32>
     88e:	81 e0       	ldi	r24, 0x01	; 1
     890:	0e 94 03 02 	call	0x406	; 0x406 <OLED_send_data>
     894:	21 96       	adiw	r28, 0x01	; 1
     896:	c8 34       	cpi	r28, 0x48	; 72
     898:	d1 05       	cpc	r29, r1
     89a:	cc f3       	brlt	.-14     	; 0x88e <screen1+0x2a>
     89c:	c0 e0       	ldi	r28, 0x00	; 0
     89e:	10 c0       	rjmp	.+32     	; 0x8c0 <screen1+0x5c>
     8a0:	6a e0       	ldi	r22, 0x0A	; 10
     8a2:	82 e0       	ldi	r24, 0x02	; 2
     8a4:	8c 0f       	add	r24, r28
     8a6:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
     8aa:	67 e0       	ldi	r22, 0x07	; 7
     8ac:	70 e0       	ldi	r23, 0x00	; 0
     8ae:	8b e2       	ldi	r24, 0x2B	; 43
     8b0:	91 e0       	ldi	r25, 0x01	; 1
     8b2:	0e 94 40 02 	call	0x480	; 0x480 <OLED_print>
     8b6:	81 e3       	ldi	r24, 0x31	; 49
     8b8:	8c 0f       	add	r24, r28
     8ba:	0e 94 21 02 	call	0x442	; 0x442 <OLED_print_char>
     8be:	cf 5f       	subi	r28, 0xFF	; 255
     8c0:	c4 30       	cpi	r28, 0x04	; 4
     8c2:	70 f3       	brcs	.-36     	; 0x8a0 <screen1+0x3c>
     8c4:	6a e0       	ldi	r22, 0x0A	; 10
     8c6:	86 e0       	ldi	r24, 0x06	; 6
     8c8:	0e 94 f3 01 	call	0x3e6	; 0x3e6 <OLED_pos>
     8cc:	66 e0       	ldi	r22, 0x06	; 6
     8ce:	70 e0       	ldi	r23, 0x00	; 0
     8d0:	83 e3       	ldi	r24, 0x33	; 51
     8d2:	91 e0       	ldi	r25, 0x01	; 1
     8d4:	0e 94 40 02 	call	0x480	; 0x480 <OLED_print>
     8d8:	df 91       	pop	r29
     8da:	cf 91       	pop	r28
     8dc:	08 95       	ret

000008de <Read_ADC>:
     8de:	e0 e0       	ldi	r30, 0x00	; 0
     8e0:	f4 e1       	ldi	r31, 0x14	; 20
     8e2:	80 e1       	ldi	r24, 0x10	; 16
     8e4:	80 83       	st	Z, r24
     8e6:	82 e1       	ldi	r24, 0x12	; 18
     8e8:	80 83       	st	Z, r24
     8ea:	81 e1       	ldi	r24, 0x11	; 17
     8ec:	80 83       	st	Z, r24
     8ee:	83 e0       	ldi	r24, 0x03	; 3
     8f0:	80 83       	st	Z, r24
     8f2:	8c ec       	ldi	r24, 0xCC	; 204
     8f4:	94 e0       	ldi	r25, 0x04	; 4
     8f6:	01 97       	sbiw	r24, 0x01	; 1
     8f8:	f1 f7       	brne	.-4      	; 0x8f6 <Read_ADC+0x18>
     8fa:	00 c0       	rjmp	.+0      	; 0x8fc <Read_ADC+0x1e>
     8fc:	00 00       	nop
     8fe:	80 81       	ld	r24, Z
     900:	80 93 d3 02 	sts	0x02D3, r24	; 0x8002d3 <analog0>
     904:	80 81       	ld	r24, Z
     906:	80 93 d2 02 	sts	0x02D2, r24	; 0x8002d2 <analog1>
     90a:	80 81       	ld	r24, Z
     90c:	80 93 d1 02 	sts	0x02D1, r24	; 0x8002d1 <analog2>
     910:	80 81       	ld	r24, Z
     912:	80 93 d0 02 	sts	0x02D0, r24	; 0x8002d0 <analog3>
     916:	08 95       	ret

00000918 <USART_Init>:
     918:	90 bd       	out	0x20, r25	; 32
     91a:	89 b9       	out	0x09, r24	; 9
     91c:	88 e1       	ldi	r24, 0x18	; 24
     91e:	8a b9       	out	0x0a, r24	; 10
     920:	8e ea       	ldi	r24, 0xAE	; 174
     922:	80 bd       	out	0x20, r24	; 32
     924:	08 95       	ret

00000926 <SRAM_Init>:

void SRAM_Init(void) {
	// Enable external memory interface
	MCUCR |= (1 << SRE);
     926:	85 b7       	in	r24, 0x35	; 53
     928:	80 68       	ori	r24, 0x80	; 128
     92a:	85 bf       	out	0x35, r24	; 53
	// Mask PC7-PC4
	SFIOR |= (1 << XMM2);
     92c:	80 b7       	in	r24, 0x30	; 48
     92e:	80 62       	ori	r24, 0x20	; 32
     930:	80 bf       	out	0x30, r24	; 48
     932:	08 95       	ret

00000934 <CLK_Init>:
}

void CLK_Init(int TOP) {
     934:	9c 01       	movw	r18, r24
	// Set PD4 as output
	DDRD |= (1 << DDD4);
     936:	91 b3       	in	r25, 0x11	; 17
     938:	90 61       	ori	r25, 0x10	; 16
     93a:	91 bb       	out	0x11, r25	; 17
	
	// Compare output mode: Toggle compare match
	TCCR3A |= (1 << COM3A0); 
     93c:	eb e8       	ldi	r30, 0x8B	; 139
     93e:	f0 e0       	ldi	r31, 0x00	; 0
     940:	90 81       	ld	r25, Z
     942:	90 64       	ori	r25, 0x40	; 64
     944:	90 83       	st	Z, r25
	
	// Mode 4, CTC
	TCCR3B |= (1 << WGM32);
     946:	ea e8       	ldi	r30, 0x8A	; 138
     948:	f0 e0       	ldi	r31, 0x00	; 0
     94a:	90 81       	ld	r25, Z
     94c:	98 60       	ori	r25, 0x08	; 8
     94e:	90 83       	st	Z, r25
	
	// Set counter TOP value
	OCR3A = TOP;
     950:	30 93 87 00 	sts	0x0087, r19	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fc087>
     954:	20 93 86 00 	sts	0x0086, r18	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fc086>
	
	// Prescaler 1
	TCCR3B |= (1 << CS30);
     958:	80 81       	ld	r24, Z
     95a:	81 60       	ori	r24, 0x01	; 1
     95c:	80 83       	st	Z, r24
     95e:	08 95       	ret

00000960 <main>:
	interrupt_flag = 1;
}


int main(void)
{
     960:	cf 93       	push	r28
     962:	df 93       	push	r29
     964:	cd b7       	in	r28, 0x3d	; 61
     966:	de b7       	in	r29, 0x3e	; 62
     968:	a5 97       	sbiw	r28, 0x25	; 37
     96a:	0f b6       	in	r0, 0x3f	; 63
     96c:	f8 94       	cli
     96e:	de bf       	out	0x3e, r29	; 62
     970:	0f be       	out	0x3f, r0	; 63
     972:	cd bf       	out	0x3d, r28	; 61
	DDRA = 0xFF;
     974:	8f ef       	ldi	r24, 0xFF	; 255
     976:	8a bb       	out	0x1a, r24	; 26
	DDRE |= (0x02);
     978:	86 b1       	in	r24, 0x06	; 6
     97a:	82 60       	ori	r24, 0x02	; 2
     97c:	86 b9       	out	0x06, r24	; 6
	
	// Right and left button inputs
	DDRD &= !( (1 << PD2) | (1 << PD3) );
     97e:	81 b3       	in	r24, 0x11	; 17
     980:	11 ba       	out	0x11, r1	; 17
	// Joystick button
	DDRE &= !(1 << PE2);
     982:	86 b1       	in	r24, 0x06	; 6
     984:	16 b8       	out	0x06, r1	; 6
	
	// Set interrupt pin as input
	DDRE &= ~(1 << PE0);
     986:	86 b1       	in	r24, 0x06	; 6
     988:	8e 7f       	andi	r24, 0xFE	; 254
     98a:	86 b9       	out	0x06, r24	; 6
	// Disable interrupt, clear Interrupt Enable in GICR
	GICR &= 0b00000111;
     98c:	8b b7       	in	r24, 0x3b	; 59
     98e:	87 70       	andi	r24, 0x07	; 7
     990:	8b bf       	out	0x3b, r24	; 59
	// Set ISC2 bit in EMCUCR
	EMCUCR &= ~(1 << ISC2); // 1 for rising edge, 0 for falling edge
     992:	86 b7       	in	r24, 0x36	; 54
     994:	8e 7f       	andi	r24, 0xFE	; 254
     996:	86 bf       	out	0x36, r24	; 54
	// Clear INT2 flag, write 1 to INTF2 in GIFR
	GIFR |= (1 << INTF2);
     998:	8a b7       	in	r24, 0x3a	; 58
     99a:	80 62       	ori	r24, 0x20	; 32
     99c:	8a bf       	out	0x3a, r24	; 58
	// Enable interrupt, set Interrupt Enable in GICR
	GICR |= (1 << INT2);
     99e:	8b b7       	in	r24, 0x3b	; 59
     9a0:	80 62       	ori	r24, 0x20	; 32
     9a2:	8b bf       	out	0x3b, r24	; 59
	// Enable I-bit in SREG to enable interrupts
	sei();
     9a4:	78 94       	sei
	
	USART_Init(MYUBRR);
     9a6:	8f e1       	ldi	r24, 0x1F	; 31
     9a8:	90 e0       	ldi	r25, 0x00	; 0
     9aa:	0e 94 8c 04 	call	0x918	; 0x918 <USART_Init>
	CLK_Init(0);
     9ae:	80 e0       	ldi	r24, 0x00	; 0
     9b0:	90 e0       	ldi	r25, 0x00	; 0
     9b2:	0e 94 9a 04 	call	0x934	; 0x934 <CLK_Init>
	SRAM_Init();
     9b6:	0e 94 93 04 	call	0x926	; 0x926 <SRAM_Init>
	OLED_Init();
     9ba:	0e 94 7e 02 	call	0x4fc	; 0x4fc <OLED_Init>
	SPI_Init();
     9be:	0e 94 c1 02 	call	0x582	; 0x582 <SPI_Init>
	CAN_Init();
     9c2:	0e 94 33 03 	call	0x666	; 0x666 <CAN_Init>
	
	// Setup for printf
	stdout = &uart_stdio;
     9c6:	e4 ed       	ldi	r30, 0xD4	; 212
     9c8:	f2 e0       	ldi	r31, 0x02	; 2
     9ca:	80 e0       	ldi	r24, 0x00	; 0
     9cc:	91 e0       	ldi	r25, 0x01	; 1
     9ce:	93 83       	std	Z+3, r25	; 0x03
     9d0:	82 83       	std	Z+2, r24	; 0x02
	stdin = &uart_stdio;
     9d2:	91 83       	std	Z+1, r25	; 0x01
     9d4:	80 83       	st	Z, r24
	char min_pos = 0;
	char max_pos = 0;
	char screen = 0;
	char prev_screen = 1;
	
	OLED_reset();	
     9d6:	0e 94 6d 02 	call	0x4da	; 0x4da <OLED_reset>
	
	message msg, msg_received;
	msg.ID = 42;
     9da:	8a e2       	ldi	r24, 0x2A	; 42
     9dc:	90 e0       	ldi	r25, 0x00	; 0
     9de:	9a 83       	std	Y+2, r25	; 0x02
     9e0:	89 83       	std	Y+1, r24	; 0x01
	msg.length = 7;
     9e2:	87 e0       	ldi	r24, 0x07	; 7
     9e4:	8c 87       	std	Y+12, r24	; 0x0c
	strcpy(msg.data, "TEST123");
     9e6:	88 e0       	ldi	r24, 0x08	; 8
     9e8:	e6 e3       	ldi	r30, 0x36	; 54
     9ea:	f2 e0       	ldi	r31, 0x02	; 2
     9ec:	de 01       	movw	r26, r28
     9ee:	13 96       	adiw	r26, 0x03	; 3
     9f0:	01 90       	ld	r0, Z+
     9f2:	0d 92       	st	X+, r0
     9f4:	8a 95       	dec	r24
     9f6:	e1 f7       	brne	.-8      	; 0x9f0 <main+0x90>
	char ready_to_move = 1;
	char arrow_pos = 0;
	char min_pos = 0;
	char max_pos = 0;
	char screen = 0;
	char prev_screen = 1;
     9f8:	33 24       	eor	r3, r3
     9fa:	33 94       	inc	r3
	char prev_joystick_button = 0;
	char ready_to_move = 1;
	char arrow_pos = 0;
	char min_pos = 0;
	char max_pos = 0;
	char screen = 0;
     9fc:	91 2c       	mov	r9, r1
	char prev_button_right = 0;
	char prev_joystick_button = 0;
	char ready_to_move = 1;
	char arrow_pos = 0;
	char min_pos = 0;
	char max_pos = 0;
     9fe:	1d a2       	std	Y+37, r1	; 0x25
	char prev_button_left = 0;
	char prev_button_right = 0;
	char prev_joystick_button = 0;
	char ready_to_move = 1;
	char arrow_pos = 0;
	char min_pos = 0;
     a00:	51 2c       	mov	r5, r1
	unsigned char received_char = 0;
	char prev_button_left = 0;
	char prev_button_right = 0;
	char prev_joystick_button = 0;
	char ready_to_move = 1;
	char arrow_pos = 0;
     a02:	21 2c       	mov	r2, r1
	
	unsigned char received_char = 0;
	char prev_button_left = 0;
	char prev_button_right = 0;
	char prev_joystick_button = 0;
	char ready_to_move = 1;
     a04:	44 24       	eor	r4, r4
     a06:	43 94       	inc	r4
	stdin = &uart_stdio;
	
	unsigned char received_char = 0;
	char prev_button_left = 0;
	char prev_button_right = 0;
	char prev_joystick_button = 0;
     a08:	10 e0       	ldi	r17, 0x00	; 0
     a0a:	04 c0       	rjmp	.+8      	; 0xa14 <main+0xb4>
				OLED_print_arrow(arrow_pos, 0);
				ready_to_move = 0;
			}
			else if (direction == LEFT) {
				
				ready_to_move = 0;
     a0c:	41 2c       	mov	r4, r1
     a0e:	01 c0       	rjmp	.+2      	; 0xa12 <main+0xb2>
			}
			else if (direction == RIGHT) {
				
				ready_to_move = 0;
     a10:	41 2c       	mov	r4, r1
				OLED_print_arrow(arrow_pos, 0);
				ready_to_move = 0;
			}
			else if (direction == LEFT) {
				
				ready_to_move = 0;
     a12:	16 2d       	mov	r17, r6
	
    while (1) {



		if (interrupt_flag) {
     a14:	80 91 cb 02 	lds	r24, 0x02CB	; 0x8002cb <interrupt_flag>
     a18:	88 23       	and	r24, r24
     a1a:	79 f0       	breq	.+30     	; 0xa3a <main+0xda>
			char status = MCP_status();
     a1c:	0e 94 03 03 	call	0x606	; 0x606 <MCP_status>
	
			if (status & 0x03) {
     a20:	98 2f       	mov	r25, r24
     a22:	93 70       	andi	r25, 0x03	; 3
     a24:	19 f0       	breq	.+6      	; 0xa2c <main+0xcc>
				// RX0IF and RX1IF
				new_message = 1;
     a26:	91 e0       	ldi	r25, 0x01	; 1
     a28:	90 93 ca 02 	sts	0x02CA, r25	; 0x8002ca <__data_end>
			}
			if (status & 0xA8) {
     a2c:	88 7a       	andi	r24, 0xA8	; 168
     a2e:	29 f0       	breq	.+10     	; 0xa3a <main+0xda>
				// TX0IF
				MCP_bitmod(MCP_CANINTF, 0xA8, 0x00);
     a30:	40 e0       	ldi	r20, 0x00	; 0
     a32:	68 ea       	ldi	r22, 0xA8	; 168
     a34:	8c e2       	ldi	r24, 0x2C	; 44
     a36:	0e 94 11 03 	call	0x622	; 0x622 <MCP_bitmod>
			CAN_send(msg);
			printf("Message sent\n");
		}
		*/

		if (new_message) {
     a3a:	80 91 ca 02 	lds	r24, 0x02CA	; 0x8002ca <__data_end>
     a3e:	88 23       	and	r24, r24
     a40:	09 f4       	brne	.+2      	; 0xa44 <main+0xe4>
     a42:	42 c0       	rjmp	.+132    	; 0xac8 <main+0x168>
	
			msg_received = CAN_receive();
     a44:	ce 01       	movw	r24, r28
     a46:	49 96       	adiw	r24, 0x19	; 25
     a48:	0e 94 aa 03 	call	0x754	; 0x754 <CAN_receive>
     a4c:	8c e0       	ldi	r24, 0x0C	; 12
     a4e:	fe 01       	movw	r30, r28
     a50:	79 96       	adiw	r30, 0x19	; 25
     a52:	de 01       	movw	r26, r28
     a54:	1d 96       	adiw	r26, 0x0d	; 13
     a56:	01 90       	ld	r0, Z+
     a58:	0d 92       	st	X+, r0
     a5a:	8a 95       	dec	r24
     a5c:	e1 f7       	brne	.-8      	; 0xa56 <main+0xf6>
			printf("ID: %d, length: %d, message: %s\n", msg_received.ID, msg_received.length, msg_received.data);
     a5e:	28 8d       	ldd	r18, Y+24	; 0x18
     a60:	ce 01       	movw	r24, r28
     a62:	0f 96       	adiw	r24, 0x0f	; 15
     a64:	9f 93       	push	r25
     a66:	8f 93       	push	r24
     a68:	1f 92       	push	r1
     a6a:	2f 93       	push	r18
     a6c:	8e 85       	ldd	r24, Y+14	; 0x0e
     a6e:	8f 93       	push	r24
     a70:	8d 85       	ldd	r24, Y+13	; 0x0d
     a72:	8f 93       	push	r24
     a74:	8e e3       	ldi	r24, 0x3E	; 62
     a76:	92 e0       	ldi	r25, 0x02	; 2
     a78:	9f 93       	push	r25
     a7a:	8f 93       	push	r24
     a7c:	0e 94 00 07 	call	0xe00	; 0xe00 <printf>
			new_message = 0;
     a80:	10 92 ca 02 	sts	0x02CA, r1	; 0x8002ca <__data_end>
	
			char EFLG = MCP_read(MCP_EFLG);
     a84:	8d e2       	ldi	r24, 0x2D	; 45
     a86:	0e 94 dd 02 	call	0x5ba	; 0x5ba <MCP_read>
     a8a:	c8 2e       	mov	r12, r24
			char status = MCP_status();
     a8c:	0e 94 03 03 	call	0x606	; 0x606 <MCP_status>
     a90:	08 2f       	mov	r16, r24
			char rx_status = MCP_read(MCP_RX_STATUS);
     a92:	80 eb       	ldi	r24, 0xB0	; 176
     a94:	0e 94 dd 02 	call	0x5ba	; 0x5ba <MCP_read>
     a98:	d8 2e       	mov	r13, r24
			printf("EFLG: %X\n", EFLG);
     a9a:	1f 92       	push	r1
     a9c:	cf 92       	push	r12
     a9e:	8f e5       	ldi	r24, 0x5F	; 95
     aa0:	92 e0       	ldi	r25, 0x02	; 2
     aa2:	9f 93       	push	r25
     aa4:	8f 93       	push	r24
     aa6:	0e 94 00 07 	call	0xe00	; 0xe00 <printf>
			printf("Status: %X, RX_status: %X\n", status, rx_status);
     aaa:	1f 92       	push	r1
     aac:	df 92       	push	r13
     aae:	1f 92       	push	r1
     ab0:	0f 93       	push	r16
     ab2:	89 e6       	ldi	r24, 0x69	; 105
     ab4:	92 e0       	ldi	r25, 0x02	; 2
     ab6:	9f 93       	push	r25
     ab8:	8f 93       	push	r24
     aba:	0e 94 00 07 	call	0xe00	; 0xe00 <printf>
     abe:	0f b6       	in	r0, 0x3f	; 63
     ac0:	f8 94       	cli
     ac2:	de bf       	out	0x3e, r29	; 62
     ac4:	0f be       	out	0x3f, r0	; 63
     ac6:	cd bf       	out	0x3d, r28	; 61



		// received_char = USART_Receive();
		
		char button_left = !!(PIND & (1 << PIND3));
     ac8:	70 b2       	in	r7, 0x10	; 16
     aca:	73 fa       	bst	r7, 3
     acc:	77 24       	eor	r7, r7
     ace:	70 f8       	bld	r7, 0
		char button_right = !!(PIND & (1 << PIND2));
     ad0:	80 b2       	in	r8, 0x10	; 16
     ad2:	82 fa       	bst	r8, 2
     ad4:	88 24       	eor	r8, r8
     ad6:	80 f8       	bld	r8, 0
		char joystick_button = !(PINE & (1 << PINE2));
     ad8:	85 b1       	in	r24, 0x05	; 5
     ada:	91 e0       	ldi	r25, 0x01	; 1
     adc:	28 2f       	mov	r18, r24
     ade:	24 70       	andi	r18, 0x04	; 4
     ae0:	82 fd       	sbrc	r24, 2
     ae2:	90 e0       	ldi	r25, 0x00	; 0
     ae4:	69 2e       	mov	r6, r25
		
		if (button_right && !prev_button_right)
			button_right_pressed = 1;
		if (button_left && !prev_button_left)
			button_left_pressed = 1;
		if (joystick_button && !prev_joystick_button)
     ae6:	21 11       	cpse	r18, r1
     ae8:	04 c0       	rjmp	.+8      	; 0xaf2 <main+0x192>
     aea:	11 23       	and	r17, r17
     aec:	21 f0       	breq	.+8      	; 0xaf6 <main+0x196>
		
		char button_left = !!(PIND & (1 << PIND3));
		char button_right = !!(PIND & (1 << PIND2));
		char joystick_button = !(PINE & (1 << PINE2));
		
		char button_right_pressed, button_left_pressed, joystick_button_pressed = 0;
     aee:	10 e0       	ldi	r17, 0x00	; 0
     af0:	03 c0       	rjmp	.+6      	; 0xaf8 <main+0x198>
     af2:	10 e0       	ldi	r17, 0x00	; 0
     af4:	01 c0       	rjmp	.+2      	; 0xaf8 <main+0x198>
		if (button_right && !prev_button_right)
			button_right_pressed = 1;
		if (button_left && !prev_button_left)
			button_left_pressed = 1;
		if (joystick_button && !prev_joystick_button)
			joystick_button_pressed = 1;
     af6:	11 e0       	ldi	r17, 0x01	; 1
		
		
		if (screen != prev_screen) {
     af8:	93 14       	cp	r9, r3
     afa:	c9 f0       	breq	.+50     	; 0xb2e <main+0x1ce>
			if (screen == 0) {
     afc:	91 10       	cpse	r9, r1
     afe:	07 c0       	rjmp	.+14     	; 0xb0e <main+0x1ae>
				screen0();
     b00:	0e 94 ff 03 	call	0x7fe	; 0x7fe <screen0>
				min_pos = 2;
				max_pos = 3;
     b04:	93 e0       	ldi	r25, 0x03	; 3
     b06:	9d a3       	std	Y+37, r25	; 0x25
		
		
		if (screen != prev_screen) {
			if (screen == 0) {
				screen0();
				min_pos = 2;
     b08:	68 94       	set
     b0a:	55 24       	eor	r5, r5
     b0c:	51 f8       	bld	r5, 1
				max_pos = 3;
			}
			if (screen == 1) {
     b0e:	41 e0       	ldi	r20, 0x01	; 1
     b10:	94 12       	cpse	r9, r20
     b12:	07 c0       	rjmp	.+14     	; 0xb22 <main+0x1c2>
				screen1();
     b14:	0e 94 32 04 	call	0x864	; 0x864 <screen1>
				min_pos = 2;
				max_pos = 6;
     b18:	86 e0       	ldi	r24, 0x06	; 6
     b1a:	8d a3       	std	Y+37, r24	; 0x25
				min_pos = 2;
				max_pos = 3;
			}
			if (screen == 1) {
				screen1();
				min_pos = 2;
     b1c:	68 94       	set
     b1e:	55 24       	eor	r5, r5
     b20:	51 f8       	bld	r5, 1
				max_pos = 6;
			}
			arrow_pos = min_pos;
			OLED_print_arrow(arrow_pos, 0);
     b22:	60 e0       	ldi	r22, 0x00	; 0
     b24:	85 2d       	mov	r24, r5
     b26:	0e 94 06 02 	call	0x40c	; 0x40c <OLED_print_arrow>
			prev_screen = screen;
     b2a:	39 2c       	mov	r3, r9
			if (screen == 1) {
				screen1();
				min_pos = 2;
				max_pos = 6;
			}
			arrow_pos = min_pos;
     b2c:	25 2c       	mov	r2, r5
			OLED_print_arrow(arrow_pos, 0);
			prev_screen = screen;
		} 
		
		
		if (screen == 0 && joystick_button_pressed) {
     b2e:	91 10       	cpse	r9, r1
     b30:	11 c0       	rjmp	.+34     	; 0xb54 <main+0x1f4>
     b32:	11 23       	and	r17, r17
     b34:	79 f0       	breq	.+30     	; 0xb54 <main+0x1f4>
			if (arrow_pos == min_pos) {
     b36:	25 10       	cpse	r2, r5
     b38:	04 c0       	rjmp	.+8      	; 0xb42 <main+0x1e2>
				printf("Button pressed\n");
     b3a:	84 e8       	ldi	r24, 0x84	; 132
     b3c:	92 e0       	ldi	r25, 0x02	; 2
     b3e:	0e 94 1d 07 	call	0xe3a	; 0xe3a <puts>
			}
			if (arrow_pos == min_pos + 1) {
     b42:	22 2d       	mov	r18, r2
     b44:	30 e0       	ldi	r19, 0x00	; 0
     b46:	85 2d       	mov	r24, r5
     b48:	90 e0       	ldi	r25, 0x00	; 0
     b4a:	01 96       	adiw	r24, 0x01	; 1
     b4c:	28 17       	cp	r18, r24
     b4e:	39 07       	cpc	r19, r25
     b50:	f9 f4       	brne	.+62     	; 0xb90 <main+0x230>
     b52:	1a c0       	rjmp	.+52     	; 0xb88 <main+0x228>
				screen = 1;
			}
		}
		else if (screen == 1 && joystick_button_pressed) {
     b54:	91 e0       	ldi	r25, 0x01	; 1
     b56:	99 12       	cpse	r9, r25
     b58:	1b c0       	rjmp	.+54     	; 0xb90 <main+0x230>
     b5a:	11 23       	and	r17, r17
     b5c:	c9 f0       	breq	.+50     	; 0xb90 <main+0x230>

			if (arrow_pos == max_pos) {
     b5e:	4d a1       	ldd	r20, Y+37	; 0x25
     b60:	24 16       	cp	r2, r20
     b62:	a9 f0       	breq	.+42     	; 0xb8e <main+0x22e>
				screen = 0;
			}
			else {
				printf("Option %d selected\n", arrow_pos-min_pos+1);
     b64:	82 2d       	mov	r24, r2
     b66:	90 e0       	ldi	r25, 0x00	; 0
     b68:	85 19       	sub	r24, r5
     b6a:	91 09       	sbc	r25, r1
     b6c:	01 96       	adiw	r24, 0x01	; 1
     b6e:	9f 93       	push	r25
     b70:	8f 93       	push	r24
     b72:	83 e9       	ldi	r24, 0x93	; 147
     b74:	92 e0       	ldi	r25, 0x02	; 2
     b76:	9f 93       	push	r25
     b78:	8f 93       	push	r24
     b7a:	0e 94 00 07 	call	0xe00	; 0xe00 <printf>
     b7e:	0f 90       	pop	r0
     b80:	0f 90       	pop	r0
     b82:	0f 90       	pop	r0
     b84:	0f 90       	pop	r0
     b86:	04 c0       	rjmp	.+8      	; 0xb90 <main+0x230>
		if (screen == 0 && joystick_button_pressed) {
			if (arrow_pos == min_pos) {
				printf("Button pressed\n");
			}
			if (arrow_pos == min_pos + 1) {
				screen = 1;
     b88:	99 24       	eor	r9, r9
     b8a:	93 94       	inc	r9
     b8c:	01 c0       	rjmp	.+2      	; 0xb90 <main+0x230>
			}
		}
		else if (screen == 1 && joystick_button_pressed) {

			if (arrow_pos == max_pos) {
				screen = 0;
     b8e:	91 2c       	mov	r9, r1
				printf("Option %d selected\n", arrow_pos-min_pos+1);
			}
		}
		
		
		Read_ADC();
     b90:	0e 94 6f 04 	call	0x8de	; 0x8de <Read_ADC>
		int x = (100*(analog0 - 128))/128 - offset_x;
     b94:	80 91 d3 02 	lds	r24, 0x02D3	; 0x8002d3 <analog0>
     b98:	90 e0       	ldi	r25, 0x00	; 0
     b9a:	80 58       	subi	r24, 0x80	; 128
     b9c:	91 09       	sbc	r25, r1
     b9e:	24 e6       	ldi	r18, 0x64	; 100
     ba0:	28 9f       	mul	r18, r24
     ba2:	60 01       	movw	r12, r0
     ba4:	29 9f       	mul	r18, r25
     ba6:	d0 0c       	add	r13, r0
     ba8:	11 24       	eor	r1, r1
     baa:	dd 20       	and	r13, r13
     bac:	1c f4       	brge	.+6      	; 0xbb4 <main+0x254>
     bae:	8f e7       	ldi	r24, 0x7F	; 127
     bb0:	c8 0e       	add	r12, r24
     bb2:	d1 1c       	adc	r13, r1
     bb4:	cc 0c       	add	r12, r12
     bb6:	cd 2c       	mov	r12, r13
     bb8:	cc 1c       	adc	r12, r12
     bba:	dd 08       	sbc	r13, r13
     bbc:	80 91 ce 02 	lds	r24, 0x02CE	; 0x8002ce <offset_x>
     bc0:	90 91 cf 02 	lds	r25, 0x02CF	; 0x8002cf <offset_x+0x1>
     bc4:	c8 1a       	sub	r12, r24
     bc6:	d9 0a       	sbc	r13, r25
		int y = (100*(analog1 - 128))/128 - offset_y;
     bc8:	80 91 d2 02 	lds	r24, 0x02D2	; 0x8002d2 <analog1>
     bcc:	90 e0       	ldi	r25, 0x00	; 0
     bce:	80 58       	subi	r24, 0x80	; 128
     bd0:	91 09       	sbc	r25, r1
     bd2:	24 e6       	ldi	r18, 0x64	; 100
     bd4:	28 9f       	mul	r18, r24
     bd6:	50 01       	movw	r10, r0
     bd8:	29 9f       	mul	r18, r25
     bda:	b0 0c       	add	r11, r0
     bdc:	11 24       	eor	r1, r1
     bde:	bb 20       	and	r11, r11
     be0:	1c f4       	brge	.+6      	; 0xbe8 <main+0x288>
     be2:	9f e7       	ldi	r25, 0x7F	; 127
     be4:	a9 0e       	add	r10, r25
     be6:	b1 1c       	adc	r11, r1
     be8:	aa 0c       	add	r10, r10
     bea:	ab 2c       	mov	r10, r11
     bec:	aa 1c       	adc	r10, r10
     bee:	bb 08       	sbc	r11, r11
     bf0:	80 91 cc 02 	lds	r24, 0x02CC	; 0x8002cc <offset_y>
     bf4:	90 91 cd 02 	lds	r25, 0x02CD	; 0x8002cd <offset_y+0x1>
     bf8:	a8 1a       	sub	r10, r24
     bfa:	b9 0a       	sbc	r11, r25
		
		msg.ID = 0;
     bfc:	1a 82       	std	Y+2, r1	; 0x02
     bfe:	19 82       	std	Y+1, r1	; 0x01
		msg.data[0] = x;
     c00:	cb 82       	std	Y+3, r12	; 0x03
		msg.data[1] = y;
     c02:	ac 82       	std	Y+4, r10	; 0x04
		msg.data[2] = analog2;
     c04:	20 91 d1 02 	lds	r18, 0x02D1	; 0x8002d1 <analog2>
     c08:	2d 83       	std	Y+5, r18	; 0x05
		msg.data[3] = analog3;
     c0a:	30 91 d0 02 	lds	r19, 0x02D0	; 0x8002d0 <analog3>
     c0e:	3e 83       	std	Y+6, r19	; 0x06
		msg.data[4] = button_left;
     c10:	7f 82       	std	Y+7, r7	; 0x07
		msg.data[5] = button_right;
     c12:	88 86       	std	Y+8, r8	; 0x08
		msg.length = 6;
     c14:	86 e0       	ldi	r24, 0x06	; 6
     c16:	8c 87       	std	Y+12, r24	; 0x0c
		CAN_send(msg);
     c18:	e9 80       	ldd	r14, Y+1	; 0x01
     c1a:	fa 80       	ldd	r15, Y+2	; 0x02
     c1c:	0c 2d       	mov	r16, r12
     c1e:	1a 2d       	mov	r17, r10
     c20:	47 2d       	mov	r20, r7
     c22:	58 2d       	mov	r21, r8
     c24:	69 85       	ldd	r22, Y+9	; 0x09
     c26:	7a 85       	ldd	r23, Y+10	; 0x0a
     c28:	8b 85       	ldd	r24, Y+11	; 0x0b
     c2a:	96 e0       	ldi	r25, 0x06	; 6
     c2c:	0e 94 4c 03 	call	0x698	; 0x698 <CAN_send>
		
		printf("ID: %d, length: %d, message: ", msg.ID, msg.length);
     c30:	8c 85       	ldd	r24, Y+12	; 0x0c
     c32:	1f 92       	push	r1
     c34:	8f 93       	push	r24
     c36:	8a 81       	ldd	r24, Y+2	; 0x02
     c38:	8f 93       	push	r24
     c3a:	89 81       	ldd	r24, Y+1	; 0x01
     c3c:	8f 93       	push	r24
     c3e:	87 ea       	ldi	r24, 0xA7	; 167
     c40:	92 e0       	ldi	r25, 0x02	; 2
     c42:	9f 93       	push	r25
     c44:	8f 93       	push	r24
     c46:	0e 94 00 07 	call	0xe00	; 0xe00 <printf>
		for (int i = 0; i < msg.length; i++)
     c4a:	0f 90       	pop	r0
     c4c:	0f 90       	pop	r0
     c4e:	0f 90       	pop	r0
     c50:	0f 90       	pop	r0
     c52:	0f 90       	pop	r0
     c54:	0f 90       	pop	r0
     c56:	00 e0       	ldi	r16, 0x00	; 0
     c58:	10 e0       	ldi	r17, 0x00	; 0
     c5a:	15 c0       	rjmp	.+42     	; 0xc86 <main+0x326>
			printf("%d ", msg.data[i]);
     c5c:	e3 e0       	ldi	r30, 0x03	; 3
     c5e:	f0 e0       	ldi	r31, 0x00	; 0
     c60:	ec 0f       	add	r30, r28
     c62:	fd 1f       	adc	r31, r29
     c64:	e0 0f       	add	r30, r16
     c66:	f1 1f       	adc	r31, r17
     c68:	80 81       	ld	r24, Z
     c6a:	1f 92       	push	r1
     c6c:	8f 93       	push	r24
     c6e:	85 ec       	ldi	r24, 0xC5	; 197
     c70:	92 e0       	ldi	r25, 0x02	; 2
     c72:	9f 93       	push	r25
     c74:	8f 93       	push	r24
     c76:	0e 94 00 07 	call	0xe00	; 0xe00 <printf>
		msg.data[5] = button_right;
		msg.length = 6;
		CAN_send(msg);
		
		printf("ID: %d, length: %d, message: ", msg.ID, msg.length);
		for (int i = 0; i < msg.length; i++)
     c7a:	0f 5f       	subi	r16, 0xFF	; 255
     c7c:	1f 4f       	sbci	r17, 0xFF	; 255
     c7e:	0f 90       	pop	r0
     c80:	0f 90       	pop	r0
     c82:	0f 90       	pop	r0
     c84:	0f 90       	pop	r0
     c86:	8c 85       	ldd	r24, Y+12	; 0x0c
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	08 17       	cp	r16, r24
     c8c:	19 07       	cpc	r17, r25
     c8e:	34 f3       	brlt	.-52     	; 0xc5c <main+0x2fc>
			printf("%d ", msg.data[i]);
		printf("\n");
     c90:	8a e0       	ldi	r24, 0x0A	; 10
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	0e 94 16 07 	call	0xe2c	; 0xe2c <putchar>
		
		unsigned int direction = CENTER;
		if      (x > 0 && abs(y) < abs(x)) direction = RIGHT; 
     c98:	1c 14       	cp	r1, r12
     c9a:	1d 04       	cpc	r1, r13
     c9c:	8c f4       	brge	.+34     	; 0xcc0 <main+0x360>
     c9e:	c5 01       	movw	r24, r10
     ca0:	bb 20       	and	r11, r11
     ca2:	24 f4       	brge	.+8      	; 0xcac <main+0x34c>
     ca4:	88 27       	eor	r24, r24
     ca6:	99 27       	eor	r25, r25
     ca8:	8a 19       	sub	r24, r10
     caa:	9b 09       	sbc	r25, r11
     cac:	96 01       	movw	r18, r12
     cae:	dd 20       	and	r13, r13
     cb0:	24 f4       	brge	.+8      	; 0xcba <main+0x35a>
     cb2:	22 27       	eor	r18, r18
     cb4:	33 27       	eor	r19, r19
     cb6:	2c 19       	sub	r18, r12
     cb8:	3d 09       	sbc	r19, r13
     cba:	82 17       	cp	r24, r18
     cbc:	93 07       	cpc	r25, r19
     cbe:	ec f1       	brlt	.+122    	; 0xd3a <main+0x3da>
		else if (y > 0 && abs(x) < abs(y)) direction = UP;
     cc0:	1a 14       	cp	r1, r10
     cc2:	1b 04       	cpc	r1, r11
     cc4:	8c f4       	brge	.+34     	; 0xce8 <main+0x388>
     cc6:	c6 01       	movw	r24, r12
     cc8:	dd 20       	and	r13, r13
     cca:	24 f4       	brge	.+8      	; 0xcd4 <main+0x374>
     ccc:	88 27       	eor	r24, r24
     cce:	99 27       	eor	r25, r25
     cd0:	8c 19       	sub	r24, r12
     cd2:	9d 09       	sbc	r25, r13
     cd4:	95 01       	movw	r18, r10
     cd6:	bb 20       	and	r11, r11
     cd8:	24 f4       	brge	.+8      	; 0xce2 <main+0x382>
     cda:	22 27       	eor	r18, r18
     cdc:	33 27       	eor	r19, r19
     cde:	2a 19       	sub	r18, r10
     ce0:	3b 09       	sbc	r19, r11
     ce2:	82 17       	cp	r24, r18
     ce4:	93 07       	cpc	r25, r19
     ce6:	64 f1       	brlt	.+88     	; 0xd40 <main+0x3e0>
		else if (x < 0 && abs(y) < abs(x)) direction = LEFT;
     ce8:	dd 20       	and	r13, r13
     cea:	8c f4       	brge	.+34     	; 0xd0e <main+0x3ae>
     cec:	c5 01       	movw	r24, r10
     cee:	bb 20       	and	r11, r11
     cf0:	24 f4       	brge	.+8      	; 0xcfa <main+0x39a>
     cf2:	88 27       	eor	r24, r24
     cf4:	99 27       	eor	r25, r25
     cf6:	8a 19       	sub	r24, r10
     cf8:	9b 09       	sbc	r25, r11
     cfa:	96 01       	movw	r18, r12
     cfc:	dd 20       	and	r13, r13
     cfe:	24 f4       	brge	.+8      	; 0xd08 <main+0x3a8>
     d00:	22 27       	eor	r18, r18
     d02:	33 27       	eor	r19, r19
     d04:	2c 19       	sub	r18, r12
     d06:	3d 09       	sbc	r19, r13
     d08:	82 17       	cp	r24, r18
     d0a:	93 07       	cpc	r25, r19
     d0c:	e4 f0       	brlt	.+56     	; 0xd46 <main+0x3e6>
		else if (y < 0 && abs(x) < abs(y)) direction = DOWN; 
     d0e:	bb 20       	and	r11, r11
     d10:	ec f4       	brge	.+58     	; 0xd4c <main+0x3ec>
     d12:	c6 01       	movw	r24, r12
     d14:	dd 20       	and	r13, r13
     d16:	24 f4       	brge	.+8      	; 0xd20 <main+0x3c0>
     d18:	88 27       	eor	r24, r24
     d1a:	99 27       	eor	r25, r25
     d1c:	8c 19       	sub	r24, r12
     d1e:	9d 09       	sbc	r25, r13
     d20:	95 01       	movw	r18, r10
     d22:	bb 20       	and	r11, r11
     d24:	24 f4       	brge	.+8      	; 0xd2e <main+0x3ce>
     d26:	22 27       	eor	r18, r18
     d28:	33 27       	eor	r19, r19
     d2a:	2a 19       	sub	r18, r10
     d2c:	3b 09       	sbc	r19, r11
     d2e:	82 17       	cp	r24, r18
     d30:	93 07       	cpc	r25, r19
     d32:	7c f0       	brlt	.+30     	; 0xd52 <main+0x3f2>
		printf("ID: %d, length: %d, message: ", msg.ID, msg.length);
		for (int i = 0; i < msg.length; i++)
			printf("%d ", msg.data[i]);
		printf("\n");
		
		unsigned int direction = CENTER;
     d34:	20 e0       	ldi	r18, 0x00	; 0
     d36:	30 e0       	ldi	r19, 0x00	; 0
     d38:	0e c0       	rjmp	.+28     	; 0xd56 <main+0x3f6>
		if      (x > 0 && abs(y) < abs(x)) direction = RIGHT; 
     d3a:	24 e0       	ldi	r18, 0x04	; 4
     d3c:	30 e0       	ldi	r19, 0x00	; 0
     d3e:	0b c0       	rjmp	.+22     	; 0xd56 <main+0x3f6>
		else if (y > 0 && abs(x) < abs(y)) direction = UP;
     d40:	21 e0       	ldi	r18, 0x01	; 1
     d42:	30 e0       	ldi	r19, 0x00	; 0
     d44:	08 c0       	rjmp	.+16     	; 0xd56 <main+0x3f6>
		else if (x < 0 && abs(y) < abs(x)) direction = LEFT;
     d46:	23 e0       	ldi	r18, 0x03	; 3
     d48:	30 e0       	ldi	r19, 0x00	; 0
     d4a:	05 c0       	rjmp	.+10     	; 0xd56 <main+0x3f6>
		printf("ID: %d, length: %d, message: ", msg.ID, msg.length);
		for (int i = 0; i < msg.length; i++)
			printf("%d ", msg.data[i]);
		printf("\n");
		
		unsigned int direction = CENTER;
     d4c:	20 e0       	ldi	r18, 0x00	; 0
     d4e:	30 e0       	ldi	r19, 0x00	; 0
     d50:	02 c0       	rjmp	.+4      	; 0xd56 <main+0x3f6>
		if      (x > 0 && abs(y) < abs(x)) direction = RIGHT; 
		else if (y > 0 && abs(x) < abs(y)) direction = UP;
		else if (x < 0 && abs(y) < abs(x)) direction = LEFT;
		else if (y < 0 && abs(x) < abs(y)) direction = DOWN; 
     d52:	22 e0       	ldi	r18, 0x02	; 2
     d54:	30 e0       	ldi	r19, 0x00	; 0
		
		if (x*x + y*y < 80*80) direction = DEAD;
     d56:	cc 9c       	mul	r12, r12
     d58:	a0 01       	movw	r20, r0
     d5a:	cd 9c       	mul	r12, r13
     d5c:	50 0d       	add	r21, r0
     d5e:	50 0d       	add	r21, r0
     d60:	11 24       	eor	r1, r1
     d62:	aa 9c       	mul	r10, r10
     d64:	c0 01       	movw	r24, r0
     d66:	ab 9c       	mul	r10, r11
     d68:	90 0d       	add	r25, r0
     d6a:	90 0d       	add	r25, r0
     d6c:	11 24       	eor	r1, r1
     d6e:	84 0f       	add	r24, r20
     d70:	95 1f       	adc	r25, r21
     d72:	81 15       	cp	r24, r1
     d74:	49 e1       	ldi	r20, 0x19	; 25
     d76:	94 07       	cpc	r25, r20
     d78:	14 f4       	brge	.+4      	; 0xd7e <main+0x41e>
     d7a:	25 e0       	ldi	r18, 0x05	; 5
     d7c:	30 e0       	ldi	r19, 0x00	; 0
		if (x*x + y*y < 60*60) direction = CENTER;
     d7e:	80 31       	cpi	r24, 0x10	; 16
     d80:	9e 40       	sbci	r25, 0x0E	; 14
     d82:	14 f4       	brge	.+4      	; 0xd88 <main+0x428>
     d84:	20 e0       	ldi	r18, 0x00	; 0
     d86:	30 e0       	ldi	r19, 0x00	; 0
		
		 
		 
		if (direction == CENTER)
     d88:	21 15       	cp	r18, r1
     d8a:	31 05       	cpc	r19, r1
     d8c:	11 f4       	brne	.+4      	; 0xd92 <main+0x432>
			ready_to_move = 1;
     d8e:	44 24       	eor	r4, r4
     d90:	43 94       	inc	r4
		
		if (ready_to_move) {
     d92:	44 20       	and	r4, r4
     d94:	09 f4       	brne	.+2      	; 0xd98 <main+0x438>
     d96:	3d ce       	rjmp	.-902    	; 0xa12 <main+0xb2>
			if (direction == UP) {
     d98:	21 30       	cpi	r18, 0x01	; 1
     d9a:	31 05       	cpc	r19, r1
     d9c:	91 f4       	brne	.+36     	; 0xdc2 <main+0x462>
				OLED_goto_column(0);
     d9e:	80 e0       	ldi	r24, 0x00	; 0
     da0:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <OLED_goto_column>
				OLED_print(" ", 1);
     da4:	61 e0       	ldi	r22, 0x01	; 1
     da6:	70 e0       	ldi	r23, 0x00	; 0
     da8:	83 ec       	ldi	r24, 0xC3	; 195
     daa:	92 e0       	ldi	r25, 0x02	; 2
     dac:	0e 94 40 02 	call	0x480	; 0x480 <OLED_print>
				if (arrow_pos > min_pos) 
     db0:	52 14       	cp	r5, r2
     db2:	08 f4       	brcc	.+2      	; 0xdb6 <main+0x456>
					arrow_pos -= 1;
     db4:	2a 94       	dec	r2
				OLED_print_arrow(arrow_pos, 0);
     db6:	60 e0       	ldi	r22, 0x00	; 0
     db8:	82 2d       	mov	r24, r2
     dba:	0e 94 06 02 	call	0x40c	; 0x40c <OLED_print_arrow>
				ready_to_move = 0;
     dbe:	41 2c       	mov	r4, r1
     dc0:	28 ce       	rjmp	.-944    	; 0xa12 <main+0xb2>
			}
			else if (direction == DOWN) {
     dc2:	22 30       	cpi	r18, 0x02	; 2
     dc4:	31 05       	cpc	r19, r1
     dc6:	99 f4       	brne	.+38     	; 0xdee <main+0x48e>
				OLED_goto_column(0);
     dc8:	80 e0       	ldi	r24, 0x00	; 0
     dca:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <OLED_goto_column>
				OLED_print(" ", 1);
     dce:	61 e0       	ldi	r22, 0x01	; 1
     dd0:	70 e0       	ldi	r23, 0x00	; 0
     dd2:	83 ec       	ldi	r24, 0xC3	; 195
     dd4:	92 e0       	ldi	r25, 0x02	; 2
     dd6:	0e 94 40 02 	call	0x480	; 0x480 <OLED_print>
				if (arrow_pos < max_pos) 
     dda:	8d a1       	ldd	r24, Y+37	; 0x25
     ddc:	28 16       	cp	r2, r24
     dde:	08 f4       	brcc	.+2      	; 0xde2 <main+0x482>
					arrow_pos += 1;
     de0:	23 94       	inc	r2
				OLED_print_arrow(arrow_pos, 0);
     de2:	60 e0       	ldi	r22, 0x00	; 0
     de4:	82 2d       	mov	r24, r2
     de6:	0e 94 06 02 	call	0x40c	; 0x40c <OLED_print_arrow>
				ready_to_move = 0;
     dea:	41 2c       	mov	r4, r1
     dec:	12 ce       	rjmp	.-988    	; 0xa12 <main+0xb2>
			}
			else if (direction == LEFT) {
     dee:	23 30       	cpi	r18, 0x03	; 3
     df0:	31 05       	cpc	r19, r1
     df2:	09 f4       	brne	.+2      	; 0xdf6 <main+0x496>
     df4:	0b ce       	rjmp	.-1002   	; 0xa0c <main+0xac>
				
				ready_to_move = 0;
			}
			else if (direction == RIGHT) {
     df6:	24 30       	cpi	r18, 0x04	; 4
     df8:	31 05       	cpc	r19, r1
     dfa:	09 f0       	breq	.+2      	; 0xdfe <main+0x49e>
     dfc:	0a ce       	rjmp	.-1004   	; 0xa12 <main+0xb2>
     dfe:	08 ce       	rjmp	.-1008   	; 0xa10 <main+0xb0>

00000e00 <printf>:
     e00:	a0 e0       	ldi	r26, 0x00	; 0
     e02:	b0 e0       	ldi	r27, 0x00	; 0
     e04:	e6 e0       	ldi	r30, 0x06	; 6
     e06:	f7 e0       	ldi	r31, 0x07	; 7
     e08:	0c 94 ee 09 	jmp	0x13dc	; 0x13dc <__prologue_saves__+0x20>
     e0c:	ae 01       	movw	r20, r28
     e0e:	4b 5f       	subi	r20, 0xFB	; 251
     e10:	5f 4f       	sbci	r21, 0xFF	; 255
     e12:	fa 01       	movw	r30, r20
     e14:	61 91       	ld	r22, Z+
     e16:	71 91       	ld	r23, Z+
     e18:	af 01       	movw	r20, r30
     e1a:	80 91 d6 02 	lds	r24, 0x02D6	; 0x8002d6 <__iob+0x2>
     e1e:	90 91 d7 02 	lds	r25, 0x02D7	; 0x8002d7 <__iob+0x3>
     e22:	0e 94 4d 07 	call	0xe9a	; 0xe9a <vfprintf>
     e26:	e2 e0       	ldi	r30, 0x02	; 2
     e28:	0c 94 0a 0a 	jmp	0x1414	; 0x1414 <__epilogue_restores__+0x20>

00000e2c <putchar>:
     e2c:	60 91 d6 02 	lds	r22, 0x02D6	; 0x8002d6 <__iob+0x2>
     e30:	70 91 d7 02 	lds	r23, 0x02D7	; 0x8002d7 <__iob+0x3>
     e34:	0e 94 44 09 	call	0x1288	; 0x1288 <fputc>
     e38:	08 95       	ret

00000e3a <puts>:
     e3a:	0f 93       	push	r16
     e3c:	1f 93       	push	r17
     e3e:	cf 93       	push	r28
     e40:	df 93       	push	r29
     e42:	e0 91 d6 02 	lds	r30, 0x02D6	; 0x8002d6 <__iob+0x2>
     e46:	f0 91 d7 02 	lds	r31, 0x02D7	; 0x8002d7 <__iob+0x3>
     e4a:	23 81       	ldd	r18, Z+3	; 0x03
     e4c:	21 ff       	sbrs	r18, 1
     e4e:	1b c0       	rjmp	.+54     	; 0xe86 <puts+0x4c>
     e50:	8c 01       	movw	r16, r24
     e52:	d0 e0       	ldi	r29, 0x00	; 0
     e54:	c0 e0       	ldi	r28, 0x00	; 0
     e56:	f8 01       	movw	r30, r16
     e58:	81 91       	ld	r24, Z+
     e5a:	8f 01       	movw	r16, r30
     e5c:	60 91 d6 02 	lds	r22, 0x02D6	; 0x8002d6 <__iob+0x2>
     e60:	70 91 d7 02 	lds	r23, 0x02D7	; 0x8002d7 <__iob+0x3>
     e64:	db 01       	movw	r26, r22
     e66:	18 96       	adiw	r26, 0x08	; 8
     e68:	ed 91       	ld	r30, X+
     e6a:	fc 91       	ld	r31, X
     e6c:	19 97       	sbiw	r26, 0x09	; 9
     e6e:	88 23       	and	r24, r24
     e70:	31 f0       	breq	.+12     	; 0xe7e <puts+0x44>
     e72:	09 95       	icall
     e74:	89 2b       	or	r24, r25
     e76:	79 f3       	breq	.-34     	; 0xe56 <puts+0x1c>
     e78:	df ef       	ldi	r29, 0xFF	; 255
     e7a:	cf ef       	ldi	r28, 0xFF	; 255
     e7c:	ec cf       	rjmp	.-40     	; 0xe56 <puts+0x1c>
     e7e:	8a e0       	ldi	r24, 0x0A	; 10
     e80:	09 95       	icall
     e82:	89 2b       	or	r24, r25
     e84:	19 f0       	breq	.+6      	; 0xe8c <puts+0x52>
     e86:	8f ef       	ldi	r24, 0xFF	; 255
     e88:	9f ef       	ldi	r25, 0xFF	; 255
     e8a:	02 c0       	rjmp	.+4      	; 0xe90 <puts+0x56>
     e8c:	8d 2f       	mov	r24, r29
     e8e:	9c 2f       	mov	r25, r28
     e90:	df 91       	pop	r29
     e92:	cf 91       	pop	r28
     e94:	1f 91       	pop	r17
     e96:	0f 91       	pop	r16
     e98:	08 95       	ret

00000e9a <vfprintf>:
     e9a:	ab e0       	ldi	r26, 0x0B	; 11
     e9c:	b0 e0       	ldi	r27, 0x00	; 0
     e9e:	e3 e5       	ldi	r30, 0x53	; 83
     ea0:	f7 e0       	ldi	r31, 0x07	; 7
     ea2:	0c 94 de 09 	jmp	0x13bc	; 0x13bc <__prologue_saves__>
     ea6:	6c 01       	movw	r12, r24
     ea8:	7b 01       	movw	r14, r22
     eaa:	8a 01       	movw	r16, r20
     eac:	fc 01       	movw	r30, r24
     eae:	17 82       	std	Z+7, r1	; 0x07
     eb0:	16 82       	std	Z+6, r1	; 0x06
     eb2:	83 81       	ldd	r24, Z+3	; 0x03
     eb4:	81 ff       	sbrs	r24, 1
     eb6:	cc c1       	rjmp	.+920    	; 0x1250 <vfprintf+0x3b6>
     eb8:	ce 01       	movw	r24, r28
     eba:	01 96       	adiw	r24, 0x01	; 1
     ebc:	3c 01       	movw	r6, r24
     ebe:	f6 01       	movw	r30, r12
     ec0:	93 81       	ldd	r25, Z+3	; 0x03
     ec2:	f7 01       	movw	r30, r14
     ec4:	93 fd       	sbrc	r25, 3
     ec6:	85 91       	lpm	r24, Z+
     ec8:	93 ff       	sbrs	r25, 3
     eca:	81 91       	ld	r24, Z+
     ecc:	7f 01       	movw	r14, r30
     ece:	88 23       	and	r24, r24
     ed0:	09 f4       	brne	.+2      	; 0xed4 <vfprintf+0x3a>
     ed2:	ba c1       	rjmp	.+884    	; 0x1248 <vfprintf+0x3ae>
     ed4:	85 32       	cpi	r24, 0x25	; 37
     ed6:	39 f4       	brne	.+14     	; 0xee6 <vfprintf+0x4c>
     ed8:	93 fd       	sbrc	r25, 3
     eda:	85 91       	lpm	r24, Z+
     edc:	93 ff       	sbrs	r25, 3
     ede:	81 91       	ld	r24, Z+
     ee0:	7f 01       	movw	r14, r30
     ee2:	85 32       	cpi	r24, 0x25	; 37
     ee4:	29 f4       	brne	.+10     	; 0xef0 <vfprintf+0x56>
     ee6:	b6 01       	movw	r22, r12
     ee8:	90 e0       	ldi	r25, 0x00	; 0
     eea:	0e 94 44 09 	call	0x1288	; 0x1288 <fputc>
     eee:	e7 cf       	rjmp	.-50     	; 0xebe <vfprintf+0x24>
     ef0:	91 2c       	mov	r9, r1
     ef2:	21 2c       	mov	r2, r1
     ef4:	31 2c       	mov	r3, r1
     ef6:	ff e1       	ldi	r31, 0x1F	; 31
     ef8:	f3 15       	cp	r31, r3
     efa:	d8 f0       	brcs	.+54     	; 0xf32 <vfprintf+0x98>
     efc:	8b 32       	cpi	r24, 0x2B	; 43
     efe:	79 f0       	breq	.+30     	; 0xf1e <vfprintf+0x84>
     f00:	38 f4       	brcc	.+14     	; 0xf10 <vfprintf+0x76>
     f02:	80 32       	cpi	r24, 0x20	; 32
     f04:	79 f0       	breq	.+30     	; 0xf24 <vfprintf+0x8a>
     f06:	83 32       	cpi	r24, 0x23	; 35
     f08:	a1 f4       	brne	.+40     	; 0xf32 <vfprintf+0x98>
     f0a:	23 2d       	mov	r18, r3
     f0c:	20 61       	ori	r18, 0x10	; 16
     f0e:	1d c0       	rjmp	.+58     	; 0xf4a <vfprintf+0xb0>
     f10:	8d 32       	cpi	r24, 0x2D	; 45
     f12:	61 f0       	breq	.+24     	; 0xf2c <vfprintf+0x92>
     f14:	80 33       	cpi	r24, 0x30	; 48
     f16:	69 f4       	brne	.+26     	; 0xf32 <vfprintf+0x98>
     f18:	23 2d       	mov	r18, r3
     f1a:	21 60       	ori	r18, 0x01	; 1
     f1c:	16 c0       	rjmp	.+44     	; 0xf4a <vfprintf+0xb0>
     f1e:	83 2d       	mov	r24, r3
     f20:	82 60       	ori	r24, 0x02	; 2
     f22:	38 2e       	mov	r3, r24
     f24:	e3 2d       	mov	r30, r3
     f26:	e4 60       	ori	r30, 0x04	; 4
     f28:	3e 2e       	mov	r3, r30
     f2a:	2a c0       	rjmp	.+84     	; 0xf80 <vfprintf+0xe6>
     f2c:	f3 2d       	mov	r31, r3
     f2e:	f8 60       	ori	r31, 0x08	; 8
     f30:	1d c0       	rjmp	.+58     	; 0xf6c <vfprintf+0xd2>
     f32:	37 fc       	sbrc	r3, 7
     f34:	2d c0       	rjmp	.+90     	; 0xf90 <vfprintf+0xf6>
     f36:	20 ed       	ldi	r18, 0xD0	; 208
     f38:	28 0f       	add	r18, r24
     f3a:	2a 30       	cpi	r18, 0x0A	; 10
     f3c:	40 f0       	brcs	.+16     	; 0xf4e <vfprintf+0xb4>
     f3e:	8e 32       	cpi	r24, 0x2E	; 46
     f40:	b9 f4       	brne	.+46     	; 0xf70 <vfprintf+0xd6>
     f42:	36 fc       	sbrc	r3, 6
     f44:	81 c1       	rjmp	.+770    	; 0x1248 <vfprintf+0x3ae>
     f46:	23 2d       	mov	r18, r3
     f48:	20 64       	ori	r18, 0x40	; 64
     f4a:	32 2e       	mov	r3, r18
     f4c:	19 c0       	rjmp	.+50     	; 0xf80 <vfprintf+0xe6>
     f4e:	36 fe       	sbrs	r3, 6
     f50:	06 c0       	rjmp	.+12     	; 0xf5e <vfprintf+0xc4>
     f52:	8a e0       	ldi	r24, 0x0A	; 10
     f54:	98 9e       	mul	r9, r24
     f56:	20 0d       	add	r18, r0
     f58:	11 24       	eor	r1, r1
     f5a:	92 2e       	mov	r9, r18
     f5c:	11 c0       	rjmp	.+34     	; 0xf80 <vfprintf+0xe6>
     f5e:	ea e0       	ldi	r30, 0x0A	; 10
     f60:	2e 9e       	mul	r2, r30
     f62:	20 0d       	add	r18, r0
     f64:	11 24       	eor	r1, r1
     f66:	22 2e       	mov	r2, r18
     f68:	f3 2d       	mov	r31, r3
     f6a:	f0 62       	ori	r31, 0x20	; 32
     f6c:	3f 2e       	mov	r3, r31
     f6e:	08 c0       	rjmp	.+16     	; 0xf80 <vfprintf+0xe6>
     f70:	8c 36       	cpi	r24, 0x6C	; 108
     f72:	21 f4       	brne	.+8      	; 0xf7c <vfprintf+0xe2>
     f74:	83 2d       	mov	r24, r3
     f76:	80 68       	ori	r24, 0x80	; 128
     f78:	38 2e       	mov	r3, r24
     f7a:	02 c0       	rjmp	.+4      	; 0xf80 <vfprintf+0xe6>
     f7c:	88 36       	cpi	r24, 0x68	; 104
     f7e:	41 f4       	brne	.+16     	; 0xf90 <vfprintf+0xf6>
     f80:	f7 01       	movw	r30, r14
     f82:	93 fd       	sbrc	r25, 3
     f84:	85 91       	lpm	r24, Z+
     f86:	93 ff       	sbrs	r25, 3
     f88:	81 91       	ld	r24, Z+
     f8a:	7f 01       	movw	r14, r30
     f8c:	81 11       	cpse	r24, r1
     f8e:	b3 cf       	rjmp	.-154    	; 0xef6 <vfprintf+0x5c>
     f90:	98 2f       	mov	r25, r24
     f92:	9f 7d       	andi	r25, 0xDF	; 223
     f94:	95 54       	subi	r25, 0x45	; 69
     f96:	93 30       	cpi	r25, 0x03	; 3
     f98:	28 f4       	brcc	.+10     	; 0xfa4 <vfprintf+0x10a>
     f9a:	0c 5f       	subi	r16, 0xFC	; 252
     f9c:	1f 4f       	sbci	r17, 0xFF	; 255
     f9e:	9f e3       	ldi	r25, 0x3F	; 63
     fa0:	99 83       	std	Y+1, r25	; 0x01
     fa2:	0d c0       	rjmp	.+26     	; 0xfbe <vfprintf+0x124>
     fa4:	83 36       	cpi	r24, 0x63	; 99
     fa6:	31 f0       	breq	.+12     	; 0xfb4 <vfprintf+0x11a>
     fa8:	83 37       	cpi	r24, 0x73	; 115
     faa:	71 f0       	breq	.+28     	; 0xfc8 <vfprintf+0x12e>
     fac:	83 35       	cpi	r24, 0x53	; 83
     fae:	09 f0       	breq	.+2      	; 0xfb2 <vfprintf+0x118>
     fb0:	59 c0       	rjmp	.+178    	; 0x1064 <vfprintf+0x1ca>
     fb2:	21 c0       	rjmp	.+66     	; 0xff6 <vfprintf+0x15c>
     fb4:	f8 01       	movw	r30, r16
     fb6:	80 81       	ld	r24, Z
     fb8:	89 83       	std	Y+1, r24	; 0x01
     fba:	0e 5f       	subi	r16, 0xFE	; 254
     fbc:	1f 4f       	sbci	r17, 0xFF	; 255
     fbe:	88 24       	eor	r8, r8
     fc0:	83 94       	inc	r8
     fc2:	91 2c       	mov	r9, r1
     fc4:	53 01       	movw	r10, r6
     fc6:	13 c0       	rjmp	.+38     	; 0xfee <vfprintf+0x154>
     fc8:	28 01       	movw	r4, r16
     fca:	f2 e0       	ldi	r31, 0x02	; 2
     fcc:	4f 0e       	add	r4, r31
     fce:	51 1c       	adc	r5, r1
     fd0:	f8 01       	movw	r30, r16
     fd2:	a0 80       	ld	r10, Z
     fd4:	b1 80       	ldd	r11, Z+1	; 0x01
     fd6:	36 fe       	sbrs	r3, 6
     fd8:	03 c0       	rjmp	.+6      	; 0xfe0 <vfprintf+0x146>
     fda:	69 2d       	mov	r22, r9
     fdc:	70 e0       	ldi	r23, 0x00	; 0
     fde:	02 c0       	rjmp	.+4      	; 0xfe4 <vfprintf+0x14a>
     fe0:	6f ef       	ldi	r22, 0xFF	; 255
     fe2:	7f ef       	ldi	r23, 0xFF	; 255
     fe4:	c5 01       	movw	r24, r10
     fe6:	0e 94 39 09 	call	0x1272	; 0x1272 <strnlen>
     fea:	4c 01       	movw	r8, r24
     fec:	82 01       	movw	r16, r4
     fee:	f3 2d       	mov	r31, r3
     ff0:	ff 77       	andi	r31, 0x7F	; 127
     ff2:	3f 2e       	mov	r3, r31
     ff4:	16 c0       	rjmp	.+44     	; 0x1022 <vfprintf+0x188>
     ff6:	28 01       	movw	r4, r16
     ff8:	22 e0       	ldi	r18, 0x02	; 2
     ffa:	42 0e       	add	r4, r18
     ffc:	51 1c       	adc	r5, r1
     ffe:	f8 01       	movw	r30, r16
    1000:	a0 80       	ld	r10, Z
    1002:	b1 80       	ldd	r11, Z+1	; 0x01
    1004:	36 fe       	sbrs	r3, 6
    1006:	03 c0       	rjmp	.+6      	; 0x100e <vfprintf+0x174>
    1008:	69 2d       	mov	r22, r9
    100a:	70 e0       	ldi	r23, 0x00	; 0
    100c:	02 c0       	rjmp	.+4      	; 0x1012 <vfprintf+0x178>
    100e:	6f ef       	ldi	r22, 0xFF	; 255
    1010:	7f ef       	ldi	r23, 0xFF	; 255
    1012:	c5 01       	movw	r24, r10
    1014:	0e 94 2e 09 	call	0x125c	; 0x125c <strnlen_P>
    1018:	4c 01       	movw	r8, r24
    101a:	f3 2d       	mov	r31, r3
    101c:	f0 68       	ori	r31, 0x80	; 128
    101e:	3f 2e       	mov	r3, r31
    1020:	82 01       	movw	r16, r4
    1022:	33 fc       	sbrc	r3, 3
    1024:	1b c0       	rjmp	.+54     	; 0x105c <vfprintf+0x1c2>
    1026:	82 2d       	mov	r24, r2
    1028:	90 e0       	ldi	r25, 0x00	; 0
    102a:	88 16       	cp	r8, r24
    102c:	99 06       	cpc	r9, r25
    102e:	b0 f4       	brcc	.+44     	; 0x105c <vfprintf+0x1c2>
    1030:	b6 01       	movw	r22, r12
    1032:	80 e2       	ldi	r24, 0x20	; 32
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	0e 94 44 09 	call	0x1288	; 0x1288 <fputc>
    103a:	2a 94       	dec	r2
    103c:	f4 cf       	rjmp	.-24     	; 0x1026 <vfprintf+0x18c>
    103e:	f5 01       	movw	r30, r10
    1040:	37 fc       	sbrc	r3, 7
    1042:	85 91       	lpm	r24, Z+
    1044:	37 fe       	sbrs	r3, 7
    1046:	81 91       	ld	r24, Z+
    1048:	5f 01       	movw	r10, r30
    104a:	b6 01       	movw	r22, r12
    104c:	90 e0       	ldi	r25, 0x00	; 0
    104e:	0e 94 44 09 	call	0x1288	; 0x1288 <fputc>
    1052:	21 10       	cpse	r2, r1
    1054:	2a 94       	dec	r2
    1056:	21 e0       	ldi	r18, 0x01	; 1
    1058:	82 1a       	sub	r8, r18
    105a:	91 08       	sbc	r9, r1
    105c:	81 14       	cp	r8, r1
    105e:	91 04       	cpc	r9, r1
    1060:	71 f7       	brne	.-36     	; 0x103e <vfprintf+0x1a4>
    1062:	e8 c0       	rjmp	.+464    	; 0x1234 <vfprintf+0x39a>
    1064:	84 36       	cpi	r24, 0x64	; 100
    1066:	11 f0       	breq	.+4      	; 0x106c <vfprintf+0x1d2>
    1068:	89 36       	cpi	r24, 0x69	; 105
    106a:	41 f5       	brne	.+80     	; 0x10bc <vfprintf+0x222>
    106c:	f8 01       	movw	r30, r16
    106e:	37 fe       	sbrs	r3, 7
    1070:	07 c0       	rjmp	.+14     	; 0x1080 <vfprintf+0x1e6>
    1072:	60 81       	ld	r22, Z
    1074:	71 81       	ldd	r23, Z+1	; 0x01
    1076:	82 81       	ldd	r24, Z+2	; 0x02
    1078:	93 81       	ldd	r25, Z+3	; 0x03
    107a:	0c 5f       	subi	r16, 0xFC	; 252
    107c:	1f 4f       	sbci	r17, 0xFF	; 255
    107e:	08 c0       	rjmp	.+16     	; 0x1090 <vfprintf+0x1f6>
    1080:	60 81       	ld	r22, Z
    1082:	71 81       	ldd	r23, Z+1	; 0x01
    1084:	07 2e       	mov	r0, r23
    1086:	00 0c       	add	r0, r0
    1088:	88 0b       	sbc	r24, r24
    108a:	99 0b       	sbc	r25, r25
    108c:	0e 5f       	subi	r16, 0xFE	; 254
    108e:	1f 4f       	sbci	r17, 0xFF	; 255
    1090:	f3 2d       	mov	r31, r3
    1092:	ff 76       	andi	r31, 0x6F	; 111
    1094:	3f 2e       	mov	r3, r31
    1096:	97 ff       	sbrs	r25, 7
    1098:	09 c0       	rjmp	.+18     	; 0x10ac <vfprintf+0x212>
    109a:	90 95       	com	r25
    109c:	80 95       	com	r24
    109e:	70 95       	com	r23
    10a0:	61 95       	neg	r22
    10a2:	7f 4f       	sbci	r23, 0xFF	; 255
    10a4:	8f 4f       	sbci	r24, 0xFF	; 255
    10a6:	9f 4f       	sbci	r25, 0xFF	; 255
    10a8:	f0 68       	ori	r31, 0x80	; 128
    10aa:	3f 2e       	mov	r3, r31
    10ac:	2a e0       	ldi	r18, 0x0A	; 10
    10ae:	30 e0       	ldi	r19, 0x00	; 0
    10b0:	a3 01       	movw	r20, r6
    10b2:	0e 94 80 09 	call	0x1300	; 0x1300 <__ultoa_invert>
    10b6:	88 2e       	mov	r8, r24
    10b8:	86 18       	sub	r8, r6
    10ba:	45 c0       	rjmp	.+138    	; 0x1146 <vfprintf+0x2ac>
    10bc:	85 37       	cpi	r24, 0x75	; 117
    10be:	31 f4       	brne	.+12     	; 0x10cc <vfprintf+0x232>
    10c0:	23 2d       	mov	r18, r3
    10c2:	2f 7e       	andi	r18, 0xEF	; 239
    10c4:	b2 2e       	mov	r11, r18
    10c6:	2a e0       	ldi	r18, 0x0A	; 10
    10c8:	30 e0       	ldi	r19, 0x00	; 0
    10ca:	25 c0       	rjmp	.+74     	; 0x1116 <vfprintf+0x27c>
    10cc:	93 2d       	mov	r25, r3
    10ce:	99 7f       	andi	r25, 0xF9	; 249
    10d0:	b9 2e       	mov	r11, r25
    10d2:	8f 36       	cpi	r24, 0x6F	; 111
    10d4:	c1 f0       	breq	.+48     	; 0x1106 <vfprintf+0x26c>
    10d6:	18 f4       	brcc	.+6      	; 0x10de <vfprintf+0x244>
    10d8:	88 35       	cpi	r24, 0x58	; 88
    10da:	79 f0       	breq	.+30     	; 0x10fa <vfprintf+0x260>
    10dc:	b5 c0       	rjmp	.+362    	; 0x1248 <vfprintf+0x3ae>
    10de:	80 37       	cpi	r24, 0x70	; 112
    10e0:	19 f0       	breq	.+6      	; 0x10e8 <vfprintf+0x24e>
    10e2:	88 37       	cpi	r24, 0x78	; 120
    10e4:	21 f0       	breq	.+8      	; 0x10ee <vfprintf+0x254>
    10e6:	b0 c0       	rjmp	.+352    	; 0x1248 <vfprintf+0x3ae>
    10e8:	e9 2f       	mov	r30, r25
    10ea:	e0 61       	ori	r30, 0x10	; 16
    10ec:	be 2e       	mov	r11, r30
    10ee:	b4 fe       	sbrs	r11, 4
    10f0:	0d c0       	rjmp	.+26     	; 0x110c <vfprintf+0x272>
    10f2:	fb 2d       	mov	r31, r11
    10f4:	f4 60       	ori	r31, 0x04	; 4
    10f6:	bf 2e       	mov	r11, r31
    10f8:	09 c0       	rjmp	.+18     	; 0x110c <vfprintf+0x272>
    10fa:	34 fe       	sbrs	r3, 4
    10fc:	0a c0       	rjmp	.+20     	; 0x1112 <vfprintf+0x278>
    10fe:	29 2f       	mov	r18, r25
    1100:	26 60       	ori	r18, 0x06	; 6
    1102:	b2 2e       	mov	r11, r18
    1104:	06 c0       	rjmp	.+12     	; 0x1112 <vfprintf+0x278>
    1106:	28 e0       	ldi	r18, 0x08	; 8
    1108:	30 e0       	ldi	r19, 0x00	; 0
    110a:	05 c0       	rjmp	.+10     	; 0x1116 <vfprintf+0x27c>
    110c:	20 e1       	ldi	r18, 0x10	; 16
    110e:	30 e0       	ldi	r19, 0x00	; 0
    1110:	02 c0       	rjmp	.+4      	; 0x1116 <vfprintf+0x27c>
    1112:	20 e1       	ldi	r18, 0x10	; 16
    1114:	32 e0       	ldi	r19, 0x02	; 2
    1116:	f8 01       	movw	r30, r16
    1118:	b7 fe       	sbrs	r11, 7
    111a:	07 c0       	rjmp	.+14     	; 0x112a <vfprintf+0x290>
    111c:	60 81       	ld	r22, Z
    111e:	71 81       	ldd	r23, Z+1	; 0x01
    1120:	82 81       	ldd	r24, Z+2	; 0x02
    1122:	93 81       	ldd	r25, Z+3	; 0x03
    1124:	0c 5f       	subi	r16, 0xFC	; 252
    1126:	1f 4f       	sbci	r17, 0xFF	; 255
    1128:	06 c0       	rjmp	.+12     	; 0x1136 <vfprintf+0x29c>
    112a:	60 81       	ld	r22, Z
    112c:	71 81       	ldd	r23, Z+1	; 0x01
    112e:	80 e0       	ldi	r24, 0x00	; 0
    1130:	90 e0       	ldi	r25, 0x00	; 0
    1132:	0e 5f       	subi	r16, 0xFE	; 254
    1134:	1f 4f       	sbci	r17, 0xFF	; 255
    1136:	a3 01       	movw	r20, r6
    1138:	0e 94 80 09 	call	0x1300	; 0x1300 <__ultoa_invert>
    113c:	88 2e       	mov	r8, r24
    113e:	86 18       	sub	r8, r6
    1140:	fb 2d       	mov	r31, r11
    1142:	ff 77       	andi	r31, 0x7F	; 127
    1144:	3f 2e       	mov	r3, r31
    1146:	36 fe       	sbrs	r3, 6
    1148:	0d c0       	rjmp	.+26     	; 0x1164 <vfprintf+0x2ca>
    114a:	23 2d       	mov	r18, r3
    114c:	2e 7f       	andi	r18, 0xFE	; 254
    114e:	a2 2e       	mov	r10, r18
    1150:	89 14       	cp	r8, r9
    1152:	58 f4       	brcc	.+22     	; 0x116a <vfprintf+0x2d0>
    1154:	34 fe       	sbrs	r3, 4
    1156:	0b c0       	rjmp	.+22     	; 0x116e <vfprintf+0x2d4>
    1158:	32 fc       	sbrc	r3, 2
    115a:	09 c0       	rjmp	.+18     	; 0x116e <vfprintf+0x2d4>
    115c:	83 2d       	mov	r24, r3
    115e:	8e 7e       	andi	r24, 0xEE	; 238
    1160:	a8 2e       	mov	r10, r24
    1162:	05 c0       	rjmp	.+10     	; 0x116e <vfprintf+0x2d4>
    1164:	b8 2c       	mov	r11, r8
    1166:	a3 2c       	mov	r10, r3
    1168:	03 c0       	rjmp	.+6      	; 0x1170 <vfprintf+0x2d6>
    116a:	b8 2c       	mov	r11, r8
    116c:	01 c0       	rjmp	.+2      	; 0x1170 <vfprintf+0x2d6>
    116e:	b9 2c       	mov	r11, r9
    1170:	a4 fe       	sbrs	r10, 4
    1172:	0f c0       	rjmp	.+30     	; 0x1192 <vfprintf+0x2f8>
    1174:	fe 01       	movw	r30, r28
    1176:	e8 0d       	add	r30, r8
    1178:	f1 1d       	adc	r31, r1
    117a:	80 81       	ld	r24, Z
    117c:	80 33       	cpi	r24, 0x30	; 48
    117e:	21 f4       	brne	.+8      	; 0x1188 <vfprintf+0x2ee>
    1180:	9a 2d       	mov	r25, r10
    1182:	99 7e       	andi	r25, 0xE9	; 233
    1184:	a9 2e       	mov	r10, r25
    1186:	09 c0       	rjmp	.+18     	; 0x119a <vfprintf+0x300>
    1188:	a2 fe       	sbrs	r10, 2
    118a:	06 c0       	rjmp	.+12     	; 0x1198 <vfprintf+0x2fe>
    118c:	b3 94       	inc	r11
    118e:	b3 94       	inc	r11
    1190:	04 c0       	rjmp	.+8      	; 0x119a <vfprintf+0x300>
    1192:	8a 2d       	mov	r24, r10
    1194:	86 78       	andi	r24, 0x86	; 134
    1196:	09 f0       	breq	.+2      	; 0x119a <vfprintf+0x300>
    1198:	b3 94       	inc	r11
    119a:	a3 fc       	sbrc	r10, 3
    119c:	11 c0       	rjmp	.+34     	; 0x11c0 <vfprintf+0x326>
    119e:	a0 fe       	sbrs	r10, 0
    11a0:	06 c0       	rjmp	.+12     	; 0x11ae <vfprintf+0x314>
    11a2:	b2 14       	cp	r11, r2
    11a4:	88 f4       	brcc	.+34     	; 0x11c8 <vfprintf+0x32e>
    11a6:	28 0c       	add	r2, r8
    11a8:	92 2c       	mov	r9, r2
    11aa:	9b 18       	sub	r9, r11
    11ac:	0e c0       	rjmp	.+28     	; 0x11ca <vfprintf+0x330>
    11ae:	b2 14       	cp	r11, r2
    11b0:	60 f4       	brcc	.+24     	; 0x11ca <vfprintf+0x330>
    11b2:	b6 01       	movw	r22, r12
    11b4:	80 e2       	ldi	r24, 0x20	; 32
    11b6:	90 e0       	ldi	r25, 0x00	; 0
    11b8:	0e 94 44 09 	call	0x1288	; 0x1288 <fputc>
    11bc:	b3 94       	inc	r11
    11be:	f7 cf       	rjmp	.-18     	; 0x11ae <vfprintf+0x314>
    11c0:	b2 14       	cp	r11, r2
    11c2:	18 f4       	brcc	.+6      	; 0x11ca <vfprintf+0x330>
    11c4:	2b 18       	sub	r2, r11
    11c6:	02 c0       	rjmp	.+4      	; 0x11cc <vfprintf+0x332>
    11c8:	98 2c       	mov	r9, r8
    11ca:	21 2c       	mov	r2, r1
    11cc:	a4 fe       	sbrs	r10, 4
    11ce:	10 c0       	rjmp	.+32     	; 0x11f0 <vfprintf+0x356>
    11d0:	b6 01       	movw	r22, r12
    11d2:	80 e3       	ldi	r24, 0x30	; 48
    11d4:	90 e0       	ldi	r25, 0x00	; 0
    11d6:	0e 94 44 09 	call	0x1288	; 0x1288 <fputc>
    11da:	a2 fe       	sbrs	r10, 2
    11dc:	17 c0       	rjmp	.+46     	; 0x120c <vfprintf+0x372>
    11de:	a1 fc       	sbrc	r10, 1
    11e0:	03 c0       	rjmp	.+6      	; 0x11e8 <vfprintf+0x34e>
    11e2:	88 e7       	ldi	r24, 0x78	; 120
    11e4:	90 e0       	ldi	r25, 0x00	; 0
    11e6:	02 c0       	rjmp	.+4      	; 0x11ec <vfprintf+0x352>
    11e8:	88 e5       	ldi	r24, 0x58	; 88
    11ea:	90 e0       	ldi	r25, 0x00	; 0
    11ec:	b6 01       	movw	r22, r12
    11ee:	0c c0       	rjmp	.+24     	; 0x1208 <vfprintf+0x36e>
    11f0:	8a 2d       	mov	r24, r10
    11f2:	86 78       	andi	r24, 0x86	; 134
    11f4:	59 f0       	breq	.+22     	; 0x120c <vfprintf+0x372>
    11f6:	a1 fe       	sbrs	r10, 1
    11f8:	02 c0       	rjmp	.+4      	; 0x11fe <vfprintf+0x364>
    11fa:	8b e2       	ldi	r24, 0x2B	; 43
    11fc:	01 c0       	rjmp	.+2      	; 0x1200 <vfprintf+0x366>
    11fe:	80 e2       	ldi	r24, 0x20	; 32
    1200:	a7 fc       	sbrc	r10, 7
    1202:	8d e2       	ldi	r24, 0x2D	; 45
    1204:	b6 01       	movw	r22, r12
    1206:	90 e0       	ldi	r25, 0x00	; 0
    1208:	0e 94 44 09 	call	0x1288	; 0x1288 <fputc>
    120c:	89 14       	cp	r8, r9
    120e:	38 f4       	brcc	.+14     	; 0x121e <vfprintf+0x384>
    1210:	b6 01       	movw	r22, r12
    1212:	80 e3       	ldi	r24, 0x30	; 48
    1214:	90 e0       	ldi	r25, 0x00	; 0
    1216:	0e 94 44 09 	call	0x1288	; 0x1288 <fputc>
    121a:	9a 94       	dec	r9
    121c:	f7 cf       	rjmp	.-18     	; 0x120c <vfprintf+0x372>
    121e:	8a 94       	dec	r8
    1220:	f3 01       	movw	r30, r6
    1222:	e8 0d       	add	r30, r8
    1224:	f1 1d       	adc	r31, r1
    1226:	80 81       	ld	r24, Z
    1228:	b6 01       	movw	r22, r12
    122a:	90 e0       	ldi	r25, 0x00	; 0
    122c:	0e 94 44 09 	call	0x1288	; 0x1288 <fputc>
    1230:	81 10       	cpse	r8, r1
    1232:	f5 cf       	rjmp	.-22     	; 0x121e <vfprintf+0x384>
    1234:	22 20       	and	r2, r2
    1236:	09 f4       	brne	.+2      	; 0x123a <vfprintf+0x3a0>
    1238:	42 ce       	rjmp	.-892    	; 0xebe <vfprintf+0x24>
    123a:	b6 01       	movw	r22, r12
    123c:	80 e2       	ldi	r24, 0x20	; 32
    123e:	90 e0       	ldi	r25, 0x00	; 0
    1240:	0e 94 44 09 	call	0x1288	; 0x1288 <fputc>
    1244:	2a 94       	dec	r2
    1246:	f6 cf       	rjmp	.-20     	; 0x1234 <vfprintf+0x39a>
    1248:	f6 01       	movw	r30, r12
    124a:	86 81       	ldd	r24, Z+6	; 0x06
    124c:	97 81       	ldd	r25, Z+7	; 0x07
    124e:	02 c0       	rjmp	.+4      	; 0x1254 <vfprintf+0x3ba>
    1250:	8f ef       	ldi	r24, 0xFF	; 255
    1252:	9f ef       	ldi	r25, 0xFF	; 255
    1254:	2b 96       	adiw	r28, 0x0b	; 11
    1256:	e2 e1       	ldi	r30, 0x12	; 18
    1258:	0c 94 fa 09 	jmp	0x13f4	; 0x13f4 <__epilogue_restores__>

0000125c <strnlen_P>:
    125c:	fc 01       	movw	r30, r24
    125e:	05 90       	lpm	r0, Z+
    1260:	61 50       	subi	r22, 0x01	; 1
    1262:	70 40       	sbci	r23, 0x00	; 0
    1264:	01 10       	cpse	r0, r1
    1266:	d8 f7       	brcc	.-10     	; 0x125e <strnlen_P+0x2>
    1268:	80 95       	com	r24
    126a:	90 95       	com	r25
    126c:	8e 0f       	add	r24, r30
    126e:	9f 1f       	adc	r25, r31
    1270:	08 95       	ret

00001272 <strnlen>:
    1272:	fc 01       	movw	r30, r24
    1274:	61 50       	subi	r22, 0x01	; 1
    1276:	70 40       	sbci	r23, 0x00	; 0
    1278:	01 90       	ld	r0, Z+
    127a:	01 10       	cpse	r0, r1
    127c:	d8 f7       	brcc	.-10     	; 0x1274 <strnlen+0x2>
    127e:	80 95       	com	r24
    1280:	90 95       	com	r25
    1282:	8e 0f       	add	r24, r30
    1284:	9f 1f       	adc	r25, r31
    1286:	08 95       	ret

00001288 <fputc>:
    1288:	0f 93       	push	r16
    128a:	1f 93       	push	r17
    128c:	cf 93       	push	r28
    128e:	df 93       	push	r29
    1290:	fb 01       	movw	r30, r22
    1292:	23 81       	ldd	r18, Z+3	; 0x03
    1294:	21 fd       	sbrc	r18, 1
    1296:	03 c0       	rjmp	.+6      	; 0x129e <fputc+0x16>
    1298:	8f ef       	ldi	r24, 0xFF	; 255
    129a:	9f ef       	ldi	r25, 0xFF	; 255
    129c:	2c c0       	rjmp	.+88     	; 0x12f6 <fputc+0x6e>
    129e:	22 ff       	sbrs	r18, 2
    12a0:	16 c0       	rjmp	.+44     	; 0x12ce <fputc+0x46>
    12a2:	46 81       	ldd	r20, Z+6	; 0x06
    12a4:	57 81       	ldd	r21, Z+7	; 0x07
    12a6:	24 81       	ldd	r18, Z+4	; 0x04
    12a8:	35 81       	ldd	r19, Z+5	; 0x05
    12aa:	42 17       	cp	r20, r18
    12ac:	53 07       	cpc	r21, r19
    12ae:	44 f4       	brge	.+16     	; 0x12c0 <fputc+0x38>
    12b0:	a0 81       	ld	r26, Z
    12b2:	b1 81       	ldd	r27, Z+1	; 0x01
    12b4:	9d 01       	movw	r18, r26
    12b6:	2f 5f       	subi	r18, 0xFF	; 255
    12b8:	3f 4f       	sbci	r19, 0xFF	; 255
    12ba:	31 83       	std	Z+1, r19	; 0x01
    12bc:	20 83       	st	Z, r18
    12be:	8c 93       	st	X, r24
    12c0:	26 81       	ldd	r18, Z+6	; 0x06
    12c2:	37 81       	ldd	r19, Z+7	; 0x07
    12c4:	2f 5f       	subi	r18, 0xFF	; 255
    12c6:	3f 4f       	sbci	r19, 0xFF	; 255
    12c8:	37 83       	std	Z+7, r19	; 0x07
    12ca:	26 83       	std	Z+6, r18	; 0x06
    12cc:	14 c0       	rjmp	.+40     	; 0x12f6 <fputc+0x6e>
    12ce:	8b 01       	movw	r16, r22
    12d0:	ec 01       	movw	r28, r24
    12d2:	fb 01       	movw	r30, r22
    12d4:	00 84       	ldd	r0, Z+8	; 0x08
    12d6:	f1 85       	ldd	r31, Z+9	; 0x09
    12d8:	e0 2d       	mov	r30, r0
    12da:	09 95       	icall
    12dc:	89 2b       	or	r24, r25
    12de:	e1 f6       	brne	.-72     	; 0x1298 <fputc+0x10>
    12e0:	d8 01       	movw	r26, r16
    12e2:	16 96       	adiw	r26, 0x06	; 6
    12e4:	8d 91       	ld	r24, X+
    12e6:	9c 91       	ld	r25, X
    12e8:	17 97       	sbiw	r26, 0x07	; 7
    12ea:	01 96       	adiw	r24, 0x01	; 1
    12ec:	17 96       	adiw	r26, 0x07	; 7
    12ee:	9c 93       	st	X, r25
    12f0:	8e 93       	st	-X, r24
    12f2:	16 97       	sbiw	r26, 0x06	; 6
    12f4:	ce 01       	movw	r24, r28
    12f6:	df 91       	pop	r29
    12f8:	cf 91       	pop	r28
    12fa:	1f 91       	pop	r17
    12fc:	0f 91       	pop	r16
    12fe:	08 95       	ret

00001300 <__ultoa_invert>:
    1300:	fa 01       	movw	r30, r20
    1302:	aa 27       	eor	r26, r26
    1304:	28 30       	cpi	r18, 0x08	; 8
    1306:	51 f1       	breq	.+84     	; 0x135c <__ultoa_invert+0x5c>
    1308:	20 31       	cpi	r18, 0x10	; 16
    130a:	81 f1       	breq	.+96     	; 0x136c <__ultoa_invert+0x6c>
    130c:	e8 94       	clt
    130e:	6f 93       	push	r22
    1310:	6e 7f       	andi	r22, 0xFE	; 254
    1312:	6e 5f       	subi	r22, 0xFE	; 254
    1314:	7f 4f       	sbci	r23, 0xFF	; 255
    1316:	8f 4f       	sbci	r24, 0xFF	; 255
    1318:	9f 4f       	sbci	r25, 0xFF	; 255
    131a:	af 4f       	sbci	r26, 0xFF	; 255
    131c:	b1 e0       	ldi	r27, 0x01	; 1
    131e:	3e d0       	rcall	.+124    	; 0x139c <__ultoa_invert+0x9c>
    1320:	b4 e0       	ldi	r27, 0x04	; 4
    1322:	3c d0       	rcall	.+120    	; 0x139c <__ultoa_invert+0x9c>
    1324:	67 0f       	add	r22, r23
    1326:	78 1f       	adc	r23, r24
    1328:	89 1f       	adc	r24, r25
    132a:	9a 1f       	adc	r25, r26
    132c:	a1 1d       	adc	r26, r1
    132e:	68 0f       	add	r22, r24
    1330:	79 1f       	adc	r23, r25
    1332:	8a 1f       	adc	r24, r26
    1334:	91 1d       	adc	r25, r1
    1336:	a1 1d       	adc	r26, r1
    1338:	6a 0f       	add	r22, r26
    133a:	71 1d       	adc	r23, r1
    133c:	81 1d       	adc	r24, r1
    133e:	91 1d       	adc	r25, r1
    1340:	a1 1d       	adc	r26, r1
    1342:	20 d0       	rcall	.+64     	; 0x1384 <__ultoa_invert+0x84>
    1344:	09 f4       	brne	.+2      	; 0x1348 <__ultoa_invert+0x48>
    1346:	68 94       	set
    1348:	3f 91       	pop	r19
    134a:	2a e0       	ldi	r18, 0x0A	; 10
    134c:	26 9f       	mul	r18, r22
    134e:	11 24       	eor	r1, r1
    1350:	30 19       	sub	r19, r0
    1352:	30 5d       	subi	r19, 0xD0	; 208
    1354:	31 93       	st	Z+, r19
    1356:	de f6       	brtc	.-74     	; 0x130e <__ultoa_invert+0xe>
    1358:	cf 01       	movw	r24, r30
    135a:	08 95       	ret
    135c:	46 2f       	mov	r20, r22
    135e:	47 70       	andi	r20, 0x07	; 7
    1360:	40 5d       	subi	r20, 0xD0	; 208
    1362:	41 93       	st	Z+, r20
    1364:	b3 e0       	ldi	r27, 0x03	; 3
    1366:	0f d0       	rcall	.+30     	; 0x1386 <__ultoa_invert+0x86>
    1368:	c9 f7       	brne	.-14     	; 0x135c <__ultoa_invert+0x5c>
    136a:	f6 cf       	rjmp	.-20     	; 0x1358 <__ultoa_invert+0x58>
    136c:	46 2f       	mov	r20, r22
    136e:	4f 70       	andi	r20, 0x0F	; 15
    1370:	40 5d       	subi	r20, 0xD0	; 208
    1372:	4a 33       	cpi	r20, 0x3A	; 58
    1374:	18 f0       	brcs	.+6      	; 0x137c <__ultoa_invert+0x7c>
    1376:	49 5d       	subi	r20, 0xD9	; 217
    1378:	31 fd       	sbrc	r19, 1
    137a:	40 52       	subi	r20, 0x20	; 32
    137c:	41 93       	st	Z+, r20
    137e:	02 d0       	rcall	.+4      	; 0x1384 <__ultoa_invert+0x84>
    1380:	a9 f7       	brne	.-22     	; 0x136c <__ultoa_invert+0x6c>
    1382:	ea cf       	rjmp	.-44     	; 0x1358 <__ultoa_invert+0x58>
    1384:	b4 e0       	ldi	r27, 0x04	; 4
    1386:	a6 95       	lsr	r26
    1388:	97 95       	ror	r25
    138a:	87 95       	ror	r24
    138c:	77 95       	ror	r23
    138e:	67 95       	ror	r22
    1390:	ba 95       	dec	r27
    1392:	c9 f7       	brne	.-14     	; 0x1386 <__ultoa_invert+0x86>
    1394:	00 97       	sbiw	r24, 0x00	; 0
    1396:	61 05       	cpc	r22, r1
    1398:	71 05       	cpc	r23, r1
    139a:	08 95       	ret
    139c:	9b 01       	movw	r18, r22
    139e:	ac 01       	movw	r20, r24
    13a0:	0a 2e       	mov	r0, r26
    13a2:	06 94       	lsr	r0
    13a4:	57 95       	ror	r21
    13a6:	47 95       	ror	r20
    13a8:	37 95       	ror	r19
    13aa:	27 95       	ror	r18
    13ac:	ba 95       	dec	r27
    13ae:	c9 f7       	brne	.-14     	; 0x13a2 <__ultoa_invert+0xa2>
    13b0:	62 0f       	add	r22, r18
    13b2:	73 1f       	adc	r23, r19
    13b4:	84 1f       	adc	r24, r20
    13b6:	95 1f       	adc	r25, r21
    13b8:	a0 1d       	adc	r26, r0
    13ba:	08 95       	ret

000013bc <__prologue_saves__>:
    13bc:	2f 92       	push	r2
    13be:	3f 92       	push	r3
    13c0:	4f 92       	push	r4
    13c2:	5f 92       	push	r5
    13c4:	6f 92       	push	r6
    13c6:	7f 92       	push	r7
    13c8:	8f 92       	push	r8
    13ca:	9f 92       	push	r9
    13cc:	af 92       	push	r10
    13ce:	bf 92       	push	r11
    13d0:	cf 92       	push	r12
    13d2:	df 92       	push	r13
    13d4:	ef 92       	push	r14
    13d6:	ff 92       	push	r15
    13d8:	0f 93       	push	r16
    13da:	1f 93       	push	r17
    13dc:	cf 93       	push	r28
    13de:	df 93       	push	r29
    13e0:	cd b7       	in	r28, 0x3d	; 61
    13e2:	de b7       	in	r29, 0x3e	; 62
    13e4:	ca 1b       	sub	r28, r26
    13e6:	db 0b       	sbc	r29, r27
    13e8:	0f b6       	in	r0, 0x3f	; 63
    13ea:	f8 94       	cli
    13ec:	de bf       	out	0x3e, r29	; 62
    13ee:	0f be       	out	0x3f, r0	; 63
    13f0:	cd bf       	out	0x3d, r28	; 61
    13f2:	09 94       	ijmp

000013f4 <__epilogue_restores__>:
    13f4:	2a 88       	ldd	r2, Y+18	; 0x12
    13f6:	39 88       	ldd	r3, Y+17	; 0x11
    13f8:	48 88       	ldd	r4, Y+16	; 0x10
    13fa:	5f 84       	ldd	r5, Y+15	; 0x0f
    13fc:	6e 84       	ldd	r6, Y+14	; 0x0e
    13fe:	7d 84       	ldd	r7, Y+13	; 0x0d
    1400:	8c 84       	ldd	r8, Y+12	; 0x0c
    1402:	9b 84       	ldd	r9, Y+11	; 0x0b
    1404:	aa 84       	ldd	r10, Y+10	; 0x0a
    1406:	b9 84       	ldd	r11, Y+9	; 0x09
    1408:	c8 84       	ldd	r12, Y+8	; 0x08
    140a:	df 80       	ldd	r13, Y+7	; 0x07
    140c:	ee 80       	ldd	r14, Y+6	; 0x06
    140e:	fd 80       	ldd	r15, Y+5	; 0x05
    1410:	0c 81       	ldd	r16, Y+4	; 0x04
    1412:	1b 81       	ldd	r17, Y+3	; 0x03
    1414:	aa 81       	ldd	r26, Y+2	; 0x02
    1416:	b9 81       	ldd	r27, Y+1	; 0x01
    1418:	ce 0f       	add	r28, r30
    141a:	d1 1d       	adc	r29, r1
    141c:	0f b6       	in	r0, 0x3f	; 63
    141e:	f8 94       	cli
    1420:	de bf       	out	0x3e, r29	; 62
    1422:	0f be       	out	0x3f, r0	; 63
    1424:	cd bf       	out	0x3d, r28	; 61
    1426:	ed 01       	movw	r28, r26
    1428:	08 95       	ret

0000142a <_exit>:
    142a:	f8 94       	cli

0000142c <__stop_program>:
    142c:	ff cf       	rjmp	.-2      	; 0x142c <__stop_program>
